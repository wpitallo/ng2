{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 2c80e9a8599a1ff33bc6","webpack:///./src/ng2.ts","webpack:///./~/ui-router-core/lib/index.js","webpack:///./~/ui-router-core/lib/common/module.js","webpack:///./~/ui-router-core/lib/common/common.js","webpack:///./~/ui-router-core/lib/common/predicates.js","webpack:///./~/ui-router-core/lib/common/hof.js","webpack:///./~/ui-router-core/lib/common/coreservices.js","webpack:///./~/ui-router-core/lib/common/glob.js","webpack:///./~/ui-router-core/lib/common/queue.js","webpack:///./~/ui-router-core/lib/common/strings.js","webpack:///./~/ui-router-core/lib/transition/rejectFactory.js","webpack:///./~/ui-router-core/lib/transition/transition.js","webpack:///./~/ui-router-core/lib/common/trace.js","webpack:///./~/ui-router-core/lib/transition/transitionHook.js","webpack:///./~/ui-router-core/lib/state/targetState.js","webpack:///./~/ui-router-core/lib/transition/hookRegistry.js","webpack:///./~/ui-router-core/lib/transition/hookBuilder.js","webpack:///./~/ui-router-core/lib/resolve/resolveContext.js","webpack:///./~/ui-router-core/lib/resolve/interface.js","webpack:///./~/ui-router-core/lib/resolve/resolvable.js","webpack:///./~/ui-router-core/lib/path/pathFactory.js","webpack:///./~/ui-router-core/lib/path/node.js","webpack:///./~/ui-router-core/lib/params/param.js","webpack:///./~/ui-router-core/lib/url/urlMatcherConfig.js","webpack:///./~/ui-router-core/lib/params/type.js","webpack:///./~/ui-router-core/lib/router.js","webpack:///./~/ui-router-core/lib/url/urlMatcherFactory.js","webpack:///./~/ui-router-core/lib/url/urlMatcher.js","webpack:///./~/ui-router-core/lib/params/paramTypes.js","webpack:///./~/ui-router-core/lib/url/urlRouter.js","webpack:///./~/ui-router-core/lib/transition/transitionService.js","webpack:///./~/ui-router-core/lib/hooks/resolve.js","webpack:///./~/ui-router-core/lib/hooks/views.js","webpack:///./~/ui-router-core/lib/hooks/url.js","webpack:///./~/ui-router-core/lib/hooks/redirectTo.js","webpack:///./~/ui-router-core/lib/hooks/onEnterExitRetain.js","webpack:///./~/ui-router-core/lib/hooks/lazyLoadStates.js","webpack:///./~/ui-router-core/lib/view/view.js","webpack:///./~/ui-router-core/lib/state/stateRegistry.js","webpack:///./~/ui-router-core/lib/state/stateMatcher.js","webpack:///./~/ui-router-core/lib/state/stateBuilder.js","webpack:///./~/ui-router-core/lib/state/stateQueueManager.js","webpack:///./~/ui-router-core/lib/state/stateObject.js","webpack:///./~/ui-router-core/lib/state/stateService.js","webpack:///./~/ui-router-core/lib/globals.js","webpack:///./~/ui-router-core/lib/params/stateParams.js","webpack:///./~/ui-router-core/lib/params/module.js","webpack:///./~/ui-router-core/lib/path/module.js","webpack:///./~/ui-router-core/lib/resolve/module.js","webpack:///./~/ui-router-core/lib/state/module.js","webpack:///./~/ui-router-core/lib/transition/module.js","webpack:///./~/ui-router-core/lib/url/module.js","webpack:///./~/ui-router-core/lib/view/module.js","webpack:///./~/ui-router-core/lib/justjs.js","webpack:///./~/rxjs/add/observable/of.js","webpack:///./~/rxjs/Observable.js","webpack:///./~/rxjs/util/root.js","webpack:///./~/rxjs/util/toSubscriber.js","webpack:///./~/rxjs/Subscriber.js","webpack:///./~/rxjs/util/isFunction.js","webpack:///./~/rxjs/Subscription.js","webpack:///./~/rxjs/util/isArray.js","webpack:///./~/rxjs/util/isObject.js","webpack:///./~/rxjs/util/tryCatch.js","webpack:///./~/rxjs/util/errorObject.js","webpack:///./~/rxjs/util/UnsubscriptionError.js","webpack:///./~/rxjs/Observer.js","webpack:///./~/rxjs/symbol/rxSubscriber.js","webpack:///./~/rxjs/symbol/observable.js","webpack:///./~/rxjs/observable/of.js","webpack:///./~/rxjs/observable/ArrayObservable.js","webpack:///./~/rxjs/observable/ScalarObservable.js","webpack:///./~/rxjs/observable/EmptyObservable.js","webpack:///./~/rxjs/util/isScheduler.js","webpack:///./~/rxjs/add/observable/combineLatest.js","webpack:///./~/rxjs/observable/combineLatest.js","webpack:///./~/rxjs/operator/combineLatest.js","webpack:///./~/rxjs/OuterSubscriber.js","webpack:///./~/rxjs/util/subscribeToResult.js","webpack:///./~/rxjs/util/isPromise.js","webpack:///./~/rxjs/symbol/iterator.js","webpack:///./~/rxjs/InnerSubscriber.js","webpack:///./~/rxjs/add/observable/fromPromise.js","webpack:///./~/rxjs/observable/fromPromise.js","webpack:///./~/rxjs/observable/PromiseObservable.js","webpack:///./~/rxjs/add/operator/switchMap.js","webpack:///./~/rxjs/operator/switchMap.js","webpack:///./~/rxjs/add/operator/mergeMap.js","webpack:///./~/rxjs/operator/mergeMap.js","webpack:///./~/rxjs/add/operator/concat.js","webpack:///./~/rxjs/operator/concat.js","webpack:///./~/rxjs/operator/mergeAll.js","webpack:///./~/rxjs/add/operator/map.js","webpack:///./~/rxjs/operator/map.js","webpack:///./src/ng2/lazyLoadNgModule.ts","webpack:///external {\"root\":\"@angular/core\",\"amd\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"commonjs\":\"@angular/core\"}","webpack:///./src/ng2/uiRouterNgModule.ts","webpack:///external {\"root\":\"@angular/common\",\"amd\":\"@angular/common\",\"commonjs2\":\"@angular/common\",\"commonjs\":\"@angular/common\"}","webpack:///./src/ng2/directives/directives.ts","webpack:///./src/ng2/directives/uiSref.ts","webpack:///./src/ng2/directives/uiView.ts","webpack:///./src/ng2/private_import_core.ts","webpack:///./src/ng2/statebuilders/views.ts","webpack:///./src/ng2/mergeInjector.ts","webpack:///./~/rxjs/ReplaySubject.js","webpack:///./~/rxjs/Subject.js","webpack:///./~/rxjs/util/ObjectUnsubscribedError.js","webpack:///./~/rxjs/SubjectSubscription.js","webpack:///./~/rxjs/scheduler/queue.js","webpack:///./~/rxjs/scheduler/QueueAction.js","webpack:///./~/rxjs/scheduler/AsyncAction.js","webpack:///./~/rxjs/scheduler/Action.js","webpack:///./~/rxjs/scheduler/QueueScheduler.js","webpack:///./~/rxjs/scheduler/AsyncScheduler.js","webpack:///./~/rxjs/Scheduler.js","webpack:///./~/rxjs/operator/observeOn.js","webpack:///./~/rxjs/Notification.js","webpack:///./src/ng2/rx.ts","webpack:///./src/ng2/directives/uiSrefActive.ts","webpack:///./src/ng2/directives/uiSrefStatus.ts","webpack:///./~/rxjs/BehaviorSubject.js","webpack:///./src/ng2/providers.ts","webpack:///./src/ng2/uiRouterConfig.ts","webpack:///./src/ng2/location.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;ACtCA,2BAA0B,CAAC,kBAAkB;AAC7C,8BAAc,CAAgB,CAAC;AAC/B,qBAAO,EAA2B,CAAC;AAEnC,qBAAO,EAAwB,CAAC;AAChC,qBAAO,EAAmC,CAAC;AAC3C,qBAAO,EAAiC,CAAC;AACzC,qBAAO,EAA6B,CAAC;AACrC,qBAAO,EAA4B,CAAC;AACpC,qBAAO,EAA0B,CAAC;AAClC,qBAAO,EAAuB,CAAC;AAG/B,8BAAc,EAAwB,CAAC;AACvC,8BAAc,GAAU,CAAC;AACzB,8BAAc,GAAiB,CAAC;AAChC,8BAAc,GAAgB,CAAC;AAC/B,8BAAc,EAA6B,CAAC;AAC5C,8BAAc,GAA2B,CAAC;AAC1C,8BAAc,EAAwB,CAAC;AAEvC,8BAAc,GAAsB,CAAC;;;;;;;ACrBrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,UAAU;AAC3C,6BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,6BAA6B;AAC1D,4CAA2C,yCAAyC,EAAE;AACtF,mCAAkC,2CAA2C,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,EAAE,GAAG,oBAAoB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,mCAAkC,eAAe;AACjD,qCAAoC,aAAa;AACjD;AACA;AACA,0BAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,WAAW;AACrC;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA,yCAAwC;AACxC,6BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA,yCAAwC,mCAAmC;AAC3E;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,MAAM;AACjB;AACA,aAAY,QAAQ;AACpB;AACA;AACA,2BAA0B,uBAAuB;AACjD,oBAAmB,iBAAiB;AACpC;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,sCAAsC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,uBAAuB,EAAE,sBAAsB,wBAAwB;AAC5G;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,sCAAsC,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd,2BAA0B;AAC1B;AACA;AACA;AACA,iDAAgD,iBAAiB,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,gCAA+B;AAC/B;AACA;AACA,gCAA+B;AAC/B;AACA;AACA,2CAA0C,qBAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA,gCAA+B;AAC/B;AACA;AACA,2CAA0C,qBAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,0BAA0B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,wCAAwC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,yCAAyC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD;AAChD;AACA;AACA,mEAAkE;AAClE;AACA;AACA;AACA,6BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,wBAAwB;AAClC;AACA;AACA;AACA,iDAAgD,wBAAwB,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,+BAA8B;AAC9B;AACA;AACA;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA,wDAAuD,kCAAkC,EAAE,oBAAoB;AAC/G,0EAAyE,sCAAsC,iBAAiB,EAAE,EAAE,EAAE;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E;AAC3E,sBAAqB;AACrB;AACA;AACA,gDAA+C;AAC/C,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,yBAAyB,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,0BAA0B,EAAE;AACzE;AACA;AACA,+CAA8C,4BAA4B,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA,4DAA2D,uBAAuB,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,iCAAiC,EAAE;AAC1F;AACA;AACA;AACA,wCAAuC,UAAU,EAAE;AACnD;AACA;AACA;AACA;AACA,mC;;;;;;AC9gBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,sBAAsB,yBAAyB,GAAG;AAC1E;AACA;AACA,gCAA+B,mBAAmB;AAClD;AACA;AACA;AACA,kCAAiC,4CAA4C;AAC7E;AACA,iCAAgC,0CAA0C,EAAE;AAC5E,mCAAkC,4CAA4C,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,4BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA,mDAAkD,iCAAiC,EAAE;AACrF;AACA;AACA,eAAc,oBAAoB,wBAAwB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,oCAAoC,sBAAsB,EAAE,QAAQ;AAC/F;AACA;AACA,4BAA2B,oCAAoC,sBAAsB,EAAE,SAAS;AAChG;AACA;AACA,+BAA8B;AAC9B;AACA,GAAE;AACF;AACA,8BAA6B;AAC7B;AACA,GAAE;AACF;AACA,6BAA4B,qBAAqB,UAAU,GAAG;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAwE,MAAM;AAC9E;AACA;AACA,yDAAwD,MAAM;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC,mCAAkC;AAClC,sCAAqC;AACrC;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;ACjPA;AACA,yCAAwC;AACxC;AACA,GAAE;AACF;AACA;AACA;AACA,iBAAgB;AAChB,uBAAsB;AACtB;AACA;AACA;AACA;AACA,8BAA6B,qDAAqD,EAAE;AACpF;AACA,8BAA6B,2DAA2D,EAAE;AAC1F,yC;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,iC;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,aAAa;AAC7C,iCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,kC;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,yBAAyB,EAAE;AACvE,6CAA4C,+BAA+B,EAAE,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,0CAA0C,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,oBAAoB,EAAE;AACxE;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF,oC;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAgE,6BAA6B;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,mBAAmB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,0C;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,2BAA2B;AACnE,sCAAqC,2CAA2C;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,2BAA2B;AACpE;AACA;AACA;AACA,8EAA6E,mBAAmB,EAAE;AAClG;AACA;AACA,yEAAwE,eAAe,EAAE;AACzF,kEAAiE,cAAc,EAAE;AACjF,sEAAqE,cAAc,EAAE;AACrF,sEAAqE,uBAAuB,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA,kFAAiF,UAAU;AAC3F;AACA;AACA,iFAAgF,UAAU;AAC1F;AACA;AACA,gFAA+E,UAAU;AACzF;AACA;AACA,kFAAiF,UAAU;AAC3F;AACA;AACA,iFAAgF,UAAU;AAC1F;AACA;AACA,kFAAiF,UAAU;AAC3F;AACA;AACA,mFAAkF,UAAU;AAC5F;AACA;AACA,iFAAgF,UAAU;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,qDAAqD;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,iBAAiB;AACnD,qGAAoG;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4E,0DAA0D,EAAE;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,YAAY;AAC3C;AACA;AACA,iEAAgE,sCAAsC,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,gCAA+B,UAAU;AACzC,kCAAiC;AACjC,iDAAgD;AAChD,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,uBAAuB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,0CAA0C,2CAA2C;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,yBAAyB,EAAE;AAC7E,kDAAiD,+BAA+B,sBAAsB,EAAE,EAAE,EAAE;AAC5G;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D,kBAAkB,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,UAAU,EAAE,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,8BAA8B,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gPAA+O;AAC/O;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,uC;;;;;;ACpfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM,sBAAsB;AACvC,uBAAsB;AACtB;AACA;AACA;AACA;AACA,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,kDAAiD;AACjD,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,wBAAwB,EAAE;AAC7D,uCAAsC,kBAAkB,EAAE;AAC1D,sCAAqC,sBAAsB,EAAE;AAC7D;AACA,oEAAmE,2CAA2C,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA,kC;;;;;;ACpPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,uCAAuC,EAAE;AACxF;AACA;AACA,EAAC;AACD;AACA,2C;;;;;;AC3HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C,mCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,wC;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,wBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA,+CAA8C,sEAAsE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,0CAA0C,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,sBAAsB,EAAE;AAC1D;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,sCAAsC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA2F,kCAAkC,EAAE;AAC/H;AACA;AACA,EAAC;AACD;AACA,yC;;;;;;ACnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,8DAA8D,eAAe,EAAE;AAC5H,6CAA4C,4DAA4D;AACxG,4CAA2C,qEAAqE,kBAAkB,EAAE;AACpI,8CAA6C,yEAAyE,kBAAkB,EAAE;AAC1I,6CAA4C,wEAAwE,kBAAkB,EAAE;AACxI,8CAA6C,6DAA6D;AAC1G,+CAA8C,+DAA+D,0CAA0C,EAAE;AACzJ,6CAA4C,6DAA6D,0CAA0C,EAAE;AACrJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,8BAA8B,oCAAoC,EAAE;AACpH;AACA;AACA,yBAAwB;AACxB,cAAa;AACb;AACA;AACA;AACA;AACA,oCAAmC,6BAA6B,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,+BAA+B,EAAE;AAClE;AACA;AACA,sCAAqC,kCAAkC,EAAE,EAAE;AAC3E;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,0BAA0B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,sDAAsD,gBAAgB,EAAE,GAAG,EAAE;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,yBAAyB,EAAE;AAClF;AACA,mCAAkC,0BAA0B,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAiG,6BAA6B,EAAE;AAChI;AACA;AACA;AACA;AACA,qEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,gBAAgB,EAAE;AACtE,kEAAiE,qCAAqC,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,+BAA8B,eAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C,yCAAwC,UAAU,+BAA+B,EAAE,EAAE,EAAE;AACvF;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,uDAAuD,EAAE;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAkF,mBAAmB,EAAE;AACvG;AACA,2CAA0C,qCAAqC,EAAE;AACjF,qCAAoC,2BAA2B,EAAE,EAAE;AACnE;AACA,sEAAqE,0BAA0B,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE,qBAAqB,EAAE;AAC1F;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,2C;;;;;;ACrLA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAgE,eAAe,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,aAAa,EAAE;AACjE;AACA;AACA,EAAC;AACD;AACA,uC;;;;;;AChIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0HAAyH;AACzH;AACA;AACA;AACA,gEAA+D,4DAA4D,EAAE;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,6CAA6C,EAAE;AACpF,mEAAkE;AAClE,mEAAkE,mBAAmB,EAAE;AACvF,8DAA6D,8CAA8C,EAAE;AAC7G;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,aAAa;AAC7C;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,0CAA0C,+CAA+C,EAAE,IAAI,EAAE;AAChJ;AACA,EAAC;AACD;AACA,wC;;;;;;AChIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,iBAAiB;AAClE;AACA,sEAAqE,oBAAoB,EAAE;AAC3F;AACA;AACA;AACA;AACA,gDAA+C,2DAA2D;AAC1G,2EAA0E,qDAAqD,EAAE,IAAI;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,2CAA2C,aAAa,EAAE,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,4BAA4B;AACzE;AACA,wBAAuB,sCAAsC;AAC7D;AACA;AACA;AACA;AACA,2CAA0C,gDAAgD,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,iC;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA,EAAC,0CAA0C;AAC3C;AACA;AACA,gCAA+B,aAAa;AAC5C;AACA,+EAA8E,kBAAkB;AAChG,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,2DAA2D;AACpE,UAAS;AACT;AACA;AACA;AACA,uBAAsB,8BAA8B;AACpD;AACA,4DAA2D,iDAAiD,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,+DAA8D,cAAc;AAC5E;AACA;AACA,gCAA+B,uJAAuJ;AACtL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,wGAAwG;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,aAAa;AAC7C,6CAA4C,kDAAkD,EAAE,gCAAgC;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C,kCAAiC,cAAc;AAC/C,gDAA+C,iEAAiE,EAAE;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA,iCAAgC,aAAa;AAC7C,6CAA4C,0CAA0C,EAAE;AACxF;AACA;AACA,EAAC;AACD;AACA,kC;;;;;;AChLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,wCAAuC;AACvC;AACA,6C;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAoF,WAAW,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,0BAA0B,EAAE;AACxD,6BAA4B,8BAA8B,EAAE;AAC5D,8BAA6B,8BAA8B,EAAE;AAC7D,yBAAwB,gEAAgE,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,aAAa;AAC/D;AACA,uDAAsD,YAAY;AAClE;AACA,uDAAsD,YAAY;AAClE;AACA,mDAAkD,eAAe;AACjE;AACA;AACA;AACA;AACA;AACA,kBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,iC;;;;;;AChIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,mC;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,4DAA4D;AAC3F;AACA;AACA;AACA;AACA,qEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,8C;;;;;;ACzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAA+E,MAAM;AACrF;AACA;AACA;AACA,iBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,gFAA+E,UAAU;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,GAAG;AACjB,eAAc,SAAS;AACvB,eAAc,eAAe,KAAK;AAClC;AACA,gBAAe,QAAQ;AACvB;AACA;AACA,mBAAkB,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,oBAAoB;AACnC;AACA;AACA;AACA,iBAAgB,8BAA8B;AAC9C;AACA,mBAAkB;AAClB;AACA,iBAAgB,OAAO,YAAY;AACnC,gDAA+C,2BAA2B,WAAW,OAAO,YAAY,OAAO,+CAA+C,6BAA6B,WAAW,OAAO,YAAY,OAAO;AAChO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,yCAAyC,EAAE;AACnG;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,gEAAgE,EAAE;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,GAAG;AACjC;AACA,SAAQ;AACR,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,aAAa;AAC7C,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,wCAAuC,iBAAiB;AACxD,4FAA2F,0BAA0B,EAAE,qDAAqD,yBAAyB,EAAE,sEAAsE,kCAAkC,EAAE,0BAA0B,cAAc,EAAE;AAC3V;AACA;AACA;AACA,iDAAgD,yCAAyC;AACzF,iDAAgD,iCAAiC;AACjF;AACA;AACA;AACA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA,4BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,cAAc;AAC/B;AACA;AACA;AACA,+BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,+BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,GAAG,aAAa,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA,+DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,+BAA+B,EAAE;AAChF,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,oEAAmE,8DAA8D,EAAE;AACnI;AACA;AACA;AACA;AACA,+DAA8D,4CAA4C,EAAE;AAC5G,qIAAoI,8CAA8C,EAAE;AACpL;AACA;AACA;AACA,qDAAoD,8CAA8C,EAAE;AACpG;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,uC;;;;;;AC9aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,sEAAsE,UAAU,wBAAwB,KAAK,EAAE,QAAQ;AAClJ,8BAA6B,wEAAwE,UAAU,wBAAwB,KAAK,EAAE,QAAQ;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,eAAe,EAAE;AAC1D,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,yCAAwC,0BAA0B,EAAE;AACpE,qCAAoC,2EAA2E,EAAE;AACjH;AACA,cAAa;AACb;AACA,yCAAwC,sBAAsB,EAAE;AAChE,yCAAwC,gCAAgC,EAAE;AAC1E;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,qCAAoC,qDAAqD,EAAE;AAC3F;AACA;AACA,qDAAoD,mCAAmC,EAAE;AACzF,kBAAiB;AACjB,iCAAgC,EAAE;AAClC,kCAAiC,EAAE;AACnC,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,8CAA8C,aAAa,eAAe;AAC9H,oFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,kEAAiE,aAAa;AAC9E;AACA,kCAAiC,gCAAgC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,uC;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D;AAC5D;AACA;AACA;AACA;AACA,sCAAqC,IAAI;AACzC;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,sDAAqD,4CAA4C;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,uEAAsE,aAAa,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,iCAAiC,GAAG;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,8DAA6D,sCAAsC,EAAE;AACrG;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAmF,wFAAwF,EAAE;AAC7K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,sC;;;;;;ACnYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd,2BAA0B,aAAa,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAwF,UAAU;AAClG;AACA;AACA,wFAAuF,UAAU;AACjG;AACA;AACA,uFAAsF,UAAU;AAChG;AACA;AACA,yFAAwF,UAAU;AAClG;AACA;AACA,wFAAuF,UAAU;AACjG;AACA;AACA,yFAAwF,UAAU;AAClG;AACA;AACA,0FAAyF,UAAU;AACnG;AACA;AACA,wFAAuF,UAAU;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,8C;;;;;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,oBAAoB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,qBAAqB,iBAAiB;AAC7E;AACA;AACA;AACA;AACA,iDAAgD,uBAAuB,oBAAoB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,4BAA4B,qBAAqB,iBAAiB;AACxG;AACA,oC;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA6E,oBAAoB,EAAE;AACnG;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA,oDAAmD,iBAAiB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,uCAAuC,EAAE;AACjF,0CAAyC,qCAAqC,EAAE;AAChF;AACA;AACA;AACA,0CAAyC;AACzC;AACA,kC;;;;;;AC5CA;AACA;AACA;AACA;AACA,oDAAmD,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,0CAAyC,cAAc,iBAAiB;AACxE;AACA,gC;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,oCAAoC,gBAAgB;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,uBAAuB,2BAA2B,EAAE,EAAE;AAC5F;AACA,uC;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,qCAAqC,cAAc;AAClG;AACA;AACA;AACA;AACA;AACA,sCAAqC,4BAA4B,uBAAuB,EAAE,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,wCAAwC,gBAAgB;AACzG;AACA;AACA;AACA;AACA;AACA,wCAAuC,6BAA6B,yBAAyB,EAAE,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,uCAAuC,eAAe;AACtG;AACA;AACA;AACA;AACA;AACA,uCAAsC,6BAA6B,wBAAwB,EAAE,EAAE;AAC/F;AACA,8C;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,uEAAuE;AACtH,4DAA2D,oBAAoB,EAAE;AACjF;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,iCAAiC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA,wCAAuC,uBAAuB,yBAAyB,EAAE,EAAE;AAC3F;AACA,2C;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAiE,uBAAuB,EAAE,gCAAgC;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,qDAAqD,WAAW,EAAE;AACnF,kBAAiB,qDAAqD,YAAY,EAAE;AACpF,kBAAiB,qDAAqD,cAAc;AACpF,kBAAiB,qDAAqD,gBAAgB;AACtF;AACA;AACA;AACA;AACA,gCAA+B;AAC/B,gCAA+B;AAC/B,gCAA+B;AAC/B,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAoF,kDAAkD,EAAE;AACxI;AACA;AACA;AACA,6EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA,0CAAyC,+BAA+B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA,yDAAwD;AACxD,oGAAmG;AACnG;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,mDAAkD;AAClD;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA,uFAAsF,sBAAsB,EAAE;AAC9G;AACA;AACA,iBAAgB;AAChB;AACA;AACA,EAAC;AACD;AACA,iC;;;;;;ACxOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,oBAAoB,EAAE;AACrE;AACA,qDAAoD,wCAAwC,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,qDAAoD;AACpD;AACA,qDAAoD,sEAAsE,eAAe,EAAE,GAAG,EAAE;AAChJ;AACA;AACA;AACA;AACA;AACA,kEAAiE,gCAAgC,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,0C;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,kDAAkD,EAAE;AAC9F;AACA,sIAAqI,mBAAmB,EAAE;AAC1J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,yC;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,cAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,cAAc,EAAE;AAC9C;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA,oEAAmE,GAAG,gBAAgB;AACtF;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,+DAA+D;AACpH,6DAA4D,iBAAiB;AAC7E,4FAA2F;AAC3F,iEAAgE,kBAAkB,EAAE,gCAAgC;AACpH;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,oBAAoB,EAAE;AACrD;AACA;AACA,8CAA6C,kDAAkD;AAC/F;AACA,qBAAoB;AACpB,uDAAsD,uCAAuC;AAC7F;AACA,qBAAoB;AACpB,qDAAoD,sCAAsC;AAC1F;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,qBAAqB;AACrE,oDAAmD,uCAAuC;AAC1F,OAAM,qDAAqD,gCAAgC;AAC3F;AACA;AACA;AACA,4BAA2B,sBAAsB;AACjD;AACA,4CAA2C,wBAAwB,UAAU,wFAAwF,EAAE,EAAE;AACzK;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,uCAAuC;AAClF;AACA,6CAA4C,8GAA8G;AAC1J;AACA,0CAAyC,oIAAoI;AAC7K;AACA,+BAA8B,6BAA6B;AAC3D;AACA;AACA,iDAAgD,6EAA6E,EAAE;AAC/H,kDAAiD,kGAAkG,EAAE;AACrJ,gDAA+C,2DAA2D,yBAAyB,EAAE,gBAAgB,EAAE;AACvJ,gDAA+C,2DAA2D,mBAAmB,EAAE,4BAA4B,EAAE;AAC7J,mDAAkD,4FAA4F,EAAE;AAChJ;AACA;AACA,kFAAiF,+FAA+F,EAAE;AAClL,iFAAgF,iHAAiH,EAAE;AACnM,oFAAmF,+FAA+F,EAAE;AACpL;AACA;AACA,2DAA0D,UAAU,EAAE;AACtE;AACA;AACA;AACA,2CAA0C,uEAAuE,EAAE;AACnH;AACA;AACA;AACA;AACA,mGAAkG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,yBAAyB;AACzD,wCAAuC,0BAA0B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,qEAAqE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAwE,2BAA2B,+BAA+B,GAAG,EAAE;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,yC;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,WAAW,MAAM;AAC9D,mFAAkF;AAClF;AACA;AACA,oCAAmC,oBAAoB;AACvD,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAsE,WAAW;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,4DAA4D,eAAe,EAAE,GAAG,EAAE;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,+BAA+B;AACvF;AACA,cAAa,oBAAoB,8BAA8B,EAAE;AACjE;AACA;AACA,EAAC;AACD;AACA,8C;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,gBAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,wC;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAkF,oCAAoC,EAAE;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,uCAAuC,EAAE;AACnE;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,mCAAmC,EAAE;AAC/D;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,oCAAoC,EAAE;AAChE;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,qCAAqC,EAAE;AACjE;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,6CAA6C;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAiF,uCAAuC,EAAE;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,yEAAyE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,eAAe;AACjD,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA,6CAA4C,oDAAoD;AAChG;AACA;AACA,qCAAoC,iEAAiE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA,gEAA+D;AAC/D;AACA,sDAAqD,yBAAyB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,wBAAuB,gCAAgC;AACvD;AACA;AACA;AACA,6CAA4C,sBAAsB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,0BAA0B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC,4CAA2C;AAC3C,iDAAgD;AAChD,yCAAwC;AACxC,iCAAgC;AAChC;AACA;AACA;AACA;AACA,yCAAwC;AACxC,wCAAuC;AACvC,sCAAqC;AACrC,8CAA6C;AAC7C,2CAA0C;AAC1C,uCAAsC;AACtC,mCAAkC;AAClC;AACA;AACA;AACA;AACA,6CAA4C,sBAAsB;AAClE;AACA;AACA;AACA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA,+CAA8C,0BAA0B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,aAAa;AACrC;AACA;AACA,2BAA0B,aAAa;AACvC,4BAA2B,uBAAuB;AAClD;AACA,4BAA2B,cAAc;AACzC;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,yC;;;;;;ACliBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,sBAAsB,kBAAkB;AAC7E,uDAAsD;AACtD,yCAAwC;AACxC;AACA;AACA,sCAAqC;AACrC;AACA;AACA,EAAC;AACD;AACA,oC;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA,iCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA,sFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA,EAAC;AACD;AACA,wC;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,8BAA8B,EAAE;AACnF,mDAAkD,6BAA6B;AAC/E,qDAAoD,4BAA4B;AAChF;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D;AAC1D;AACA,kCAAiC,oCAAoC,UAAU,qBAAqB,EAAE,EAAE,EAAE,EAAE;AAC5G;AACA,yDAAwD,4BAA4B,YAAY,EAAE,IAAI;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,sBAAsB,EAAE;AAClD,2BAA0B,4DAA4D,EAAE;AACxF;AACA,qCAAoC,uBAAuB;AAC3D;AACA,oEAAmE,gCAAgC,EAAE,kBAAkB,mFAAmF,EAAE;AAC5M,iEAAgE,eAAe,EAAE;AACjF;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,WAAW;AACnC,yBAAwB,wCAAwC;AAChE,2BAA0B,wBAAwB;AAClD;AACA,8BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,sBAAsB;AACjD,gCAA+B,0BAA0B;AACzD,4BAA2B,sBAAsB;AACjD,gCAA+B,WAAW;AAC1C,iCAAgC,cAAc;AAC9C,kCAAiC,WAAW;AAC5C,mC;;;;;;AC5FA;AACA;AACA;AACA;AACA,+B;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,yBAAyB;AACxC;AACA,gBAAe,SAAS;AACxB;AACA,gBAAe,SAAS;AACxB,iBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,mBAAmB;AAClC,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,uC;;;;;;AC3IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;AClBA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,eAAe;AAClC,KAAI,mBAAmB,mBAAmB,eAAe;AACzD,gCAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,kCAAkC;AACjD;AACA,gBAAe,wBAAwB;AACvC;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE,aAAa;AACpF;AACA;AACA;AACA,gBAAe,sBAAsB;AACrC,gBAAe,wBAAwB;AACvC;AACA,gBAAe,iBAAiB;AAChC;AACA,iBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,eAAe;AAC3B;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,eAAe;AAC3B,0CAAyC,YAAY;AACrD;AACA,gBAAe,IAAI;AACnB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,eAAe;AAC3B;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,cAAa;AACbuC;;;;;;ACxPA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,cAAc;AAC7B;AACA,iBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;AACA,yC;;;;;;ACxJA;AACA,mDAAkD,0CAA0C,EAAE;AAC9F,oC;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;AClBA;AACA;AACA,wBAAuB,MAAM;AAC7B,wC;;;;;;ACHA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA0G,0CAA0C,EAAE;AACtJ;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,gD;;;;;;ACxBA;AACA;AACA;AACA,6BAA4B,EAAE;AAC9B,4BAA2B,WAAW,EAAE;AACxC,4BAA2B;AAC3B;AACA,qC;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;ACrBA;AACA;AACA;AACA,+B;;;;;;ACHA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE,aAAa;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,cAAa;AACb,cAAa;AACb,cAAa;AACb;AACA,gBAAe,KAAK;AACpB,gBAAe,UAAU,gBAAgB,gBAAgB;AACzD;AACA,iBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,4BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,4C;;;;;;ACzHA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,6C;;;;;;ACzDA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,cAAa;AACb,cAAa;AACb,cAAa;AACb;AACA,gBAAe,UAAU,gBAAgB,gBAAgB;AACzD;AACA,iBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAoE,yBAAyB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,4C;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;ACLA;AACA;AACA;AACA;AACA,0C;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,UAAS;AACT,UAAS;AACT;AACA,YAAW,WAAW;AACtB;AACA,YAAW,WAAW;AACtB;AACA,YAAW,SAAS;AACpB;AACA,YAAW,UAAU;AACrB;AACA,aAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;ACtEA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,UAAS;AACT,UAAS;AACT;AACA,YAAW,WAAW;AACtB;AACA,YAAW,SAAS;AACpB;AACA,aAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,0C;;;;;;AClJA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,4C;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,gCAAgC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,kBAAkB,+BAA+B,EAAE;AAC5D;AACA;AACA,iDAAgD,WAAW,EAAE;AAC7D,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;AC/BA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,4C;;;;;;ACnCA;AACA;AACA;AACA;AACA,wC;;;;;;ACJA;AACA;AACA;AACA,wC;;;;;;ACHA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,cAAa;AACb;AACA,gBAAe,WAAW;AAC1B,gBAAe,UAAU;AACzB;AACA,iBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,yDAAwD,WAAW,EAAE;AACrE,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iEAAgE,4CAA4C;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4E,uCAAuC;AACnH;AACA,kBAAiB;AACjB;AACA,8EAA6E,mCAAmC;AAChH;AACA,kBAAiB;AACjB;AACA;AACA,yDAAwD,WAAW,EAAE;AACrE,kBAAiB;AACjB;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;ACxHA;AACA;AACA;AACA;AACA,sC;;;;;;ACJA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,aAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,UAAS;AACT,UAAS;AACT,UAAS;AACT,UAAS;AACT;AACA,YAAW,+CAA+C;AAC1D;AACA;AACA,YAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,sC;;;;;;AC1IA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACLA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,UAAS;AACT,UAAS;AACT,UAAS;AACT,UAAS;AACT,UAAS;AACT,UAAS;AACT;AACA,YAAW,+CAA+C;AAC1D;AACA;AACA,YAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,aAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,uCAAuC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,uCAAuC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,qCAAoC,uCAAuC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,qC;;;;;;AChKA;AACA;AACA;AACA;AACA,mC;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,UAAS;AACT,UAAS;AACT;AACA,YAAW,WAAW;AACtB;AACA,YAAW,UAAU;AACrB;AACA,aAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,UAAS;AACT,UAAS;AACT;AACA,YAAW,WAAW;AACtB,YAAW,WAAW;AACtB;AACA,YAAW,UAAU;AACrB;AACA,aAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;AC3GA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,UAAS;AACT,UAAS;AACT,UAAS;AACT,UAAS;AACT,UAAS;AACT,UAAS;AACT,UAAS;AACT,UAAS;AACT;AACA,YAAW,OAAO;AAClB;AACA,aAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA,iCAAgC,uCAAuC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,qC;;;;;;AC9GA;AACA;AACA;AACA;AACA,gC;;;;;;ACJA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,UAAS;AACT;AACA,YAAW,qCAAqC;AAChD;AACA;AACA;AACA,YAAW,IAAI;AACf;AACA,aAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,gC;;;;;;;ACtFA,4BAA2B,CAAC,MAAM;AAClC,kCAA4F,EAAe,CAAC;AAC5G,4CAAgG,CAAgB,CAAC;AACjH,8CAAoF,EAAoB,CAAC;AACzG,4CAAgC,GAAkB,CAAC;AAKnD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgCG;AACH,uBAA6B,YAA4B;KACvD,MAAM,CAAC,UAAC,UAAsB;SAC5B,IAAM,WAAW,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,sCAAqB,CAAC,CAAC;SAErE,IAAM,YAAY,GAAG,UAAC,OAA6B;aAC/C,cAAO,CAAC,MAAM,CAAC,WAAW,CAAC;SAA3B,CAA2B,CAAC;SAEhC,IAAM,WAAW,GAAG,UAAC,SAA2B;aAC5C,oBAAa,CAAC,UAAU,EAAE,SAAS,CAAC;SAApC,CAAoC,CAAC;SAEzC,MAAM,CAAC,iBAAiB,CAAC,YAAY,EAAE,WAAW,CAAC;cAC9C,IAAI,CAAC,YAAY,CAAC;cAClB,IAAI,CAAC,WAAW,CAAC,CAAC;KAC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ED,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC;aAAC,MAAM,CAAC,aAAa,CAAC;SAEhD,wCAAwC;SACxC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KAC/B,CAAC;KA5BM,uBAAS,GAAG,EAAE,CAAC;KA6BxB,oBAAC;AAAD,EAAC;AA9BY,sBAAa,gBA8BzB;;;;;;;ACvCD;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,uCAAuC;AAC3E,qCAAoC,uCAAuC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,0C;;;;;;AC9EA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,oC;;;;;;AC/JA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,oD;;;;;;AC1BA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,gD;;;;;;ACvCA;AACA;AACA;AACA;AACA,kC;;;;;;ACJA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,wC;;;;;;AC9CA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,wC;;;;;;AC7IA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,wCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB;AACA,gBAAe,OAAO;AACtB;AACA,iBAAgB;AAChB;AACA;AACA,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA,EAAC;AACD;AACA,mC;;;;;;AC3CA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,2C;;;;;;ACfA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,kCAAkC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,2C;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,qBAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,mCAAmC;AAClD;AACA,gBAAe,OAAO;AACtB;AACA,gBAAe,EAAE;AACjB;AACA,iBAAgB,aAAa;AAC7B;AACA;AACA;AACA,gCAA+B,WAAW;AAC1C;AACA;AACA,wDAAuD,oBAAoB;AAC3E;AACA,EAAC;AACD;AACA,sC;;;;;;AChDA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA,4BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,sC;;;;;;AC1EA;AACA;AACA;AACA,oDAAmD,iBAAiB;AACpE;AACA,UAAS,kBAAkB,GAAG,oBAAoB,GAAG,gBAAgB;AACrE;AACA;AACA;AACA;AACA,UAAS;AACT,UAAS;AACT,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,eAAe;AAClC;AACA,gBAAe,yBAAyB;AACxC,gBAAe,yBAAyB;AACxC,gBAAe,iBAAiB;AAChC,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,kCAAkC;AACjD;AACA,gBAAe,yBAAyB;AACxC,gBAAe,iBAAiB;AAChC,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,IAAI;AACnB,iBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,yC;;;;;;;AC5HA,2CAA4B,GAAoB,CAAC;AAoBjD,qHAAoH;AACpH;KAGE,oBAAY,MAAgB;SAFpB,kBAAa,GAAe,EAAE,CAAC;SAGrC,IAAI,MAAM,GAAG,IAAI,6BAAa,CAAa,CAAC,CAAC,CAAC;SAC9C,IAAI,QAAQ,GAA4B,MAAM,CAAC,QAAQ,CAAC,UAAC,CAAa,IAAK,QAAC,CAAC,OAAO,CAAC,IAAI,CAAC,cAAM,QAAC,EAAD,CAAC,CAAC,EAAvB,CAAuB,CAAC,CAAC;SACpG,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAC,UAAsB,IAAK,iBAAU,CAAC,MAAM,EAAE,EAAnB,CAAmB,CAAC,CAAC;SAE5E,IAA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","file":"ui-router-ng2.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ui-router-ng2\", [\"@angular/core\", \"@angular/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ui-router-ng2\"] = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse\n\t\troot[\"ui-router-ng2\"] = factory(root[\"@angular/core\"], root[\"@angular/common\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_95__, __WEBPACK_EXTERNAL_MODULE_97__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2c80e9a8599a1ff33bc6","/** @ng2api @module ng2 */ /** for typedoc */\r\nexport * from \"ui-router-core\";\r\nimport \"ui-router-core/lib/justjs\";\r\n\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/observable/combineLatest';\r\nimport 'rxjs/add/observable/fromPromise';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport 'rxjs/add/operator/mergeMap';\r\nimport 'rxjs/add/operator/concat';\r\nimport 'rxjs/add/operator/map';\r\n\r\nexport * from \"./ng2/interface\";\r\nexport * from \"./ng2/lazyLoadNgModule\";\r\nexport * from \"./ng2/rx\";\r\nexport * from \"./ng2/providers\";\r\nexport * from \"./ng2/location\";\r\nexport * from \"./ng2/directives/directives\";\r\nexport * from \"./ng2/statebuilders/views\";\r\nexport * from \"./ng2/uiRouterNgModule\";\r\n\r\nexport * from \"./ng2/uiRouterConfig\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2.ts","/** @module common */ /** */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"./common/module\"));\n__export(require(\"./params/module\"));\n__export(require(\"./path/module\"));\n__export(require(\"./resolve/module\"));\n__export(require(\"./state/module\"));\n__export(require(\"./transition/module\"));\n__export(require(\"./url/module\"));\n__export(require(\"./view/module\"));\n__export(require(\"./globals\"));\n__export(require(\"./router\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/index.js\n// module id = 1\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/** @module common */ /** for typedoc */\n__export(require(\"./common\"));\n__export(require(\"./coreservices\"));\n__export(require(\"./glob\"));\n__export(require(\"./hof\"));\n__export(require(\"./predicates\"));\n__export(require(\"./queue\"));\n__export(require(\"./strings\"));\n__export(require(\"./trace\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/module.js\n// module id = 2\n// module chunks = 0 1","/**\n * Random utility functions used in the UI-Router code\n *\n * These functions are exported, but are subject to change without notice.\n *\n * @preferred @module common\n */ /** for typedoc */\n\"use strict\";\nvar predicates_1 = require(\"./predicates\");\nvar hof_1 = require(\"./hof\");\nvar coreservices_1 = require(\"./coreservices\");\nvar w = typeof window === 'undefined' ? {} : window;\nvar angular = w.angular || {};\nexports.fromJson = angular.fromJson || JSON.parse.bind(JSON);\nexports.toJson = angular.toJson || JSON.stringify.bind(JSON);\nexports.copy = angular.copy || _copy;\nexports.forEach = angular.forEach || _forEach;\nexports.extend = angular.extend || _extend;\nexports.equals = angular.equals || _equals;\nexports.identity = function (x) { return x; };\nexports.noop = function () { return undefined; };\n/**\n * Binds and copies functions onto an object\n *\n * Takes functions from the 'from' object, binds those functions to the _this object, and puts the bound functions\n * on the 'to' object.\n *\n * This example creates an new class instance whose functions are prebound to the new'd object.\n * @example\n * ```\n *\n * class Foo {\n *   constructor(data) {\n *     // Binds all functions from Foo.prototype to 'this',\n *     // then copies them to 'this'\n *     bindFunctions(Foo.prototype, this, this);\n *     this.data = data;\n *   }\n *\n *   log() {\n *     console.log(this.data);\n *   }\n * }\n *\n * let myFoo = new Foo([1,2,3]);\n * var logit = myFoo.log;\n * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n * ```\n *\n * This example creates a bound version of a service function, and copies it to another object\n * @example\n * ```\n *\n * var SomeService = {\n *   this.data = [3, 4, 5];\n *   this.log = function() {\n *     console.log(this.data);\n *   }\n * }\n *\n * // Constructor fn\n * function OtherThing() {\n *   // Binds all functions from SomeService to SomeService,\n *   // then copies them to 'this'\n *   bindFunctions(SomeService, this, SomeService);\n * }\n *\n * let myOtherThing = new OtherThing();\n * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n * ```\n *\n * @param from The object which contains the functions to be bound\n * @param to The object which will receive the bound functions\n * @param bindTo The object which the functions will be bound to\n * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n */\nfunction bindFunctions(from, to, bindTo, fnNames) {\n    if (fnNames === void 0) { fnNames = Object.keys(from); }\n    return fnNames.filter(function (name) { return typeof from[name] === 'function'; })\n        .forEach(function (name) { return to[name] = from[name].bind(bindTo); });\n}\nexports.bindFunctions = bindFunctions;\n/**\n * prototypal inheritance helper.\n * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n */\nexports.inherit = function (parent, extra) {\n    return exports.extend(new (exports.extend(function () { }, { prototype: parent }))(), extra);\n};\n/**\n * Given an arguments object, converts the arguments at index idx and above to an array.\n * This is similar to es6 rest parameters.\n *\n * Optionally, the argument at index idx may itself already be an array.\n *\n * For example,\n * given either:\n *        arguments = [ obj, \"foo\", \"bar\" ]\n * or:\n *        arguments = [ obj, [\"foo\", \"bar\"] ]\n * then:\n *        restArgs(arguments, 1) == [\"foo\", \"bar\"]\n *\n * This allows functions like pick() to be implemented such that it allows either a bunch\n * of string arguments (like es6 rest parameters), or a single array of strings:\n *\n * given:\n *        var obj = { foo: 1, bar: 2, baz: 3 };\n * then:\n *        pick(obj, \"foo\", \"bar\");   // returns { foo: 1, bar: 2 }\n *        pick(obj, [\"foo\", \"bar\"]); // returns { foo: 1, bar: 2 }\n */\nvar restArgs = function (args, idx) {\n    if (idx === void 0) { idx = 0; }\n    return Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(args, idx));\n};\n/** Given an array, returns true if the object is found in the array, (using indexOf) */\nexports.inArray = function (array, obj) {\n    return array.indexOf(obj) !== -1;\n};\n/** Given an array, and an item, if the item is found in the array, it removes it (in-place).  The same array is returned */\nexports.removeFrom = hof_1.curry(function (array, obj) {\n    var idx = array.indexOf(obj);\n    if (idx >= 0)\n        array.splice(idx, 1);\n    return array;\n});\n/**\n * Applies a set of defaults to an options object.  The options object is filtered\n * to only those properties of the objects in the defaultsList.\n * Earlier objects in the defaultsList take precedence when applying defaults.\n */\nfunction defaults(opts) {\n    if (opts === void 0) { opts = {}; }\n    var defaultsList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        defaultsList[_i - 1] = arguments[_i];\n    }\n    var defaults = merge.apply(null, [{}].concat(defaultsList));\n    return exports.extend({}, defaults, pick(opts || {}, Object.keys(defaults)));\n}\nexports.defaults = defaults;\n/**\n * Merges properties from the list of objects to the destination object.\n * If a property already exists in the destination object, then it is not overwritten.\n */\nfunction merge(dst) {\n    var objs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objs[_i - 1] = arguments[_i];\n    }\n    exports.forEach(objs, function (obj) {\n        exports.forEach(obj, function (value, key) {\n            if (!dst.hasOwnProperty(key))\n                dst[key] = value;\n        });\n    });\n    return dst;\n}\nexports.merge = merge;\n/** Reduce function that merges each element of the list into a single object, using extend */\nexports.mergeR = function (memo, item) { return exports.extend(memo, item); };\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nfunction ancestors(first, second) {\n    var path = [];\n    for (var n in first.path) {\n        if (first.path[n] !== second.path[n])\n            break;\n        path.push(first.path[n]);\n    }\n    return path;\n}\nexports.ancestors = ancestors;\n/**\n * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n *\n * @param {Object} a The first object.\n * @param {Object} b The second object.\n * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n *                     it defaults to the list of keys in `a`.\n * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n */\nfunction equalForKeys(a, b, keys) {\n    if (keys === void 0) { keys = Object.keys(a); }\n    for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        if (a[k] != b[k])\n            return false; // Not '===', values aren't necessarily normalized\n    }\n    return true;\n}\nexports.equalForKeys = equalForKeys;\nfunction pickOmitImpl(predicate, obj) {\n    var keys = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        keys[_i - 2] = arguments[_i];\n    }\n    var objCopy = {};\n    for (var key in obj) {\n        if (predicate(keys, key))\n            objCopy[key] = obj[key];\n    }\n    return objCopy;\n}\n/** Return a copy of the object only containing the whitelisted properties. */\nfunction pick(obj) {\n    return pickOmitImpl.apply(null, [exports.inArray].concat(restArgs(arguments)));\n}\nexports.pick = pick;\n/** Return a copy of the object omitting the blacklisted properties. */\nfunction omit(obj) {\n    var notInArray = function (array, item) { return !exports.inArray(array, item); };\n    return pickOmitImpl.apply(null, [notInArray].concat(restArgs(arguments)));\n}\nexports.omit = omit;\n/**\n * Maps an array, or object to a property (by name)\n */\nfunction pluck(collection, propName) {\n    return map(collection, hof_1.prop(propName));\n}\nexports.pluck = pluck;\n/** Filters an Array or an Object's properties based on a predicate */\nfunction filter(collection, callback) {\n    var arr = predicates_1.isArray(collection), result = arr ? [] : {};\n    var accept = arr ? function (x) { return result.push(x); } : function (x, key) { return result[key] = x; };\n    exports.forEach(collection, function (item, i) {\n        if (callback(item, i))\n            accept(item, i);\n    });\n    return result;\n}\nexports.filter = filter;\n/** Finds an object from an array, or a property of an object, that matches a predicate */\nfunction find(collection, callback) {\n    var result;\n    exports.forEach(collection, function (item, i) {\n        if (result)\n            return;\n        if (callback(item, i))\n            result = item;\n    });\n    return result;\n}\nexports.find = find;\n/** Given an object, returns a new object, where each property is transformed by the callback function */\nexports.mapObj = map;\n/** Maps an array or object properties using a callback function */\nfunction map(collection, callback) {\n    var result = predicates_1.isArray(collection) ? [] : {};\n    exports.forEach(collection, function (item, i) { return result[i] = callback(item, i); });\n    return result;\n}\nexports.map = map;\n/**\n * Given an object, return its enumerable property values\n *\n * @example\n * ```\n *\n * let foo = { a: 1, b: 2, c: 3 }\n * let vals = values(foo); // [ 1, 2, 3 ]\n * ```\n */\nexports.values = function (obj) {\n    return Object.keys(obj).map(function (key) { return obj[key]; });\n};\n/**\n * Reduce function that returns true if all of the values are truthy.\n *\n * @example\n * ```\n *\n * let vals = [ 1, true, {}, \"hello world\"];\n * vals.reduce(allTrueR, true); // true\n *\n * vals.push(0);\n * vals.reduce(allTrueR, true); // false\n * ```\n */\nexports.allTrueR = function (memo, elem) { return memo && elem; };\n/**\n * Reduce function that returns true if any of the values are truthy.\n *\n *  * @example\n * ```\n *\n * let vals = [ 0, null, undefined ];\n * vals.reduce(anyTrueR, true); // false\n *\n * vals.push(\"hello world\");\n * vals.reduce(anyTrueR, true); // true\n * ```\n */\nexports.anyTrueR = function (memo, elem) { return memo || elem; };\n/**\n * Reduce function which un-nests a single level of arrays\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexports.unnestR = function (memo, elem) { return memo.concat(elem); };\n/**\n * Reduce function which recursively un-nests all arrays\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexports.flattenR = function (memo, elem) {\n    return predicates_1.isArray(elem) ? memo.concat(elem.reduce(exports.flattenR, [])) : pushR(memo, elem);\n};\n/**\n * Reduce function that pushes an object to an array, then returns the array.\n * Mostly just for [[flattenR]] and [[uniqR]]\n */\nfunction pushR(arr, obj) {\n    arr.push(obj);\n    return arr;\n}\nexports.pushR = pushR;\n/** Reduce function that filters out duplicates */\nexports.uniqR = function (acc, token) {\n    return exports.inArray(acc, token) ? acc : pushR(acc, token);\n};\n/**\n * Return a new array with a single level of arrays unnested.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexports.unnest = function (arr) { return arr.reduce(exports.unnestR, []); };\n/**\n * Return a completely flattened version of an array.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexports.flatten = function (arr) { return arr.reduce(exports.flattenR, []); };\n/**\n * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n * @example\n * ```\n *\n * let isNumber = (obj) => typeof(obj) === 'number';\n * let allNumbers = [ 1, 2, 3, 4, 5 ];\n * allNumbers.filter(assertPredicate(isNumber)); //OK\n *\n * let oneString = [ 1, 2, 3, 4, \"5\" ];\n * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n * ```\n */\nfunction assertPredicate(predicate, errMsg) {\n    if (errMsg === void 0) { errMsg = \"assert failure\"; }\n    return function (obj) {\n        if (!predicate(obj)) {\n            throw new Error(predicates_1.isFunction(errMsg) ? errMsg(obj) : errMsg);\n        }\n        return true;\n    };\n}\nexports.assertPredicate = assertPredicate;\n/**\n * Like _.pairs: Given an object, returns an array of key/value pairs\n *\n * @example\n * ```\n *\n * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n * ```\n */\nexports.pairs = function (obj) {\n    return Object.keys(obj).map(function (key) { return [key, obj[key]]; });\n};\n/**\n * Given two or more parallel arrays, returns an array of tuples where\n * each tuple is composed of [ a[i], b[i], ... z[i] ]\n *\n * @example\n * ```\n *\n * let foo = [ 0, 2, 4, 6 ];\n * let bar = [ 1, 3, 5, 7 ];\n * let baz = [ 10, 30, 50, 70 ];\n * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n * ```\n */\nfunction arrayTuples() {\n    var arrayArgs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arrayArgs[_i - 0] = arguments[_i];\n    }\n    if (arrayArgs.length === 0)\n        return [];\n    var length = arrayArgs.reduce(function (min, arr) { return Math.min(arr.length, min); }, 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n    return Array.apply(null, Array(length)).map(function (ignored, idx) { return arrayArgs.map(function (arr) { return arr[idx]; }); });\n}\nexports.arrayTuples = arrayTuples;\n/**\n * Reduce function which builds an object from an array of [key, value] pairs.\n *\n * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n *\n * Each keyValueTuple should be an array with values [ key: string, value: any ]\n *\n * @example\n * ```\n *\n * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n *\n * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n *\n * // Or, more simply:\n * var pairsToObj = pairs.reduce(applyPairs, {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n * ```\n */\nfunction applyPairs(memo, keyValTuple) {\n    var key, value;\n    if (predicates_1.isArray(keyValTuple))\n        key = keyValTuple[0], value = keyValTuple[1];\n    if (!predicates_1.isString(key))\n        throw new Error(\"invalid parameters to applyPairs\");\n    memo[key] = value;\n    return memo;\n}\nexports.applyPairs = applyPairs;\n/** Get the last element of an array */\nfunction tail(arr) {\n    return arr.length && arr[arr.length - 1] || undefined;\n}\nexports.tail = tail;\n/**\n * shallow copy from src to dest\n *\n * note: This is a shallow copy, while angular.copy is a deep copy.\n * ui-router uses `copy` only to make copies of state parameters.\n */\nfunction _copy(src, dest) {\n    if (dest)\n        Object.keys(dest).forEach(function (key) { return delete dest[key]; });\n    if (!dest)\n        dest = {};\n    return exports.extend(dest, src);\n}\n/** Naive forEach implementation works with Objects or Arrays */\nfunction _forEach(obj, cb, _this) {\n    if (predicates_1.isArray(obj))\n        return obj.forEach(cb, _this);\n    Object.keys(obj).forEach(function (key) { return cb(obj[key], key); });\n}\nfunction _copyProps(to, from) {\n    Object.keys(from).forEach(function (key) { return to[key] = from[key]; });\n    return to;\n}\nfunction _extend(toObj) {\n    return restArgs(arguments, 1).filter(exports.identity).reduce(_copyProps, toObj);\n}\nfunction _equals(o1, o2) {\n    if (o1 === o2)\n        return true;\n    if (o1 === null || o2 === null)\n        return false;\n    if (o1 !== o1 && o2 !== o2)\n        return true; // NaN === NaN\n    var t1 = typeof o1, t2 = typeof o2;\n    if (t1 !== t2 || t1 !== 'object')\n        return false;\n    var tup = [o1, o2];\n    if (hof_1.all(predicates_1.isArray)(tup))\n        return _arraysEq(o1, o2);\n    if (hof_1.all(predicates_1.isDate)(tup))\n        return o1.getTime() === o2.getTime();\n    if (hof_1.all(predicates_1.isRegExp)(tup))\n        return o1.toString() === o2.toString();\n    if (hof_1.all(predicates_1.isFunction)(tup))\n        return true; // meh\n    var predicates = [predicates_1.isFunction, predicates_1.isArray, predicates_1.isDate, predicates_1.isRegExp];\n    if (predicates.map(hof_1.any).reduce(function (b, fn) { return b || !!fn(tup); }, false))\n        return false;\n    var key, keys = {};\n    for (key in o1) {\n        if (!_equals(o1[key], o2[key]))\n            return false;\n        keys[key] = true;\n    }\n    for (key in o2) {\n        if (!keys[key])\n            return false;\n    }\n    return true;\n}\nfunction _arraysEq(a1, a2) {\n    if (a1.length !== a2.length)\n        return false;\n    return arrayTuples(a1, a2).reduce(function (b, t) { return b && _equals(t[0], t[1]); }, true);\n}\n// issue #2676\nexports.silenceUncaughtInPromise = function (promise) {\n    return promise.catch(function (e) { return 0; }) && promise;\n};\nexports.silentRejection = function (error) {\n    return exports.silenceUncaughtInPromise(coreservices_1.services.$q.reject(error));\n};\n//# sourceMappingURL=common.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/common.js\n// module id = 3\n// module chunks = 0 1","\"use strict\";\n/** Predicates\n *\n * These predicates return true/false based on the input.\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_predicates\n */ /** */\nvar hof_1 = require(\"./hof\");\nvar toStr = Object.prototype.toString;\nvar tis = function (t) { return function (x) { return typeof (x) === t; }; };\nexports.isUndefined = tis('undefined');\nexports.isDefined = hof_1.not(exports.isUndefined);\nexports.isNull = function (o) { return o === null; };\nexports.isFunction = tis('function');\nexports.isNumber = tis('number');\nexports.isString = tis('string');\nexports.isObject = function (x) { return x !== null && typeof x === 'object'; };\nexports.isArray = Array.isArray;\nexports.isDate = (function (x) { return toStr.call(x) === '[object Date]'; });\nexports.isRegExp = (function (x) { return toStr.call(x) === '[object RegExp]'; });\n/**\n * Predicate which checks if a value is injectable\n *\n * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n * where all the elements in the array are Strings, except the last one, which is a Function\n */\nfunction isInjectable(val) {\n    if (exports.isArray(val) && val.length) {\n        var head = val.slice(0, -1), tail = val.slice(-1);\n        return !(head.filter(hof_1.not(exports.isString)).length || tail.filter(hof_1.not(exports.isFunction)).length);\n    }\n    return exports.isFunction(val);\n}\nexports.isInjectable = isInjectable;\n/**\n * Predicate which checks if a value looks like a Promise\n *\n * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n */\nexports.isPromise = hof_1.and(exports.isObject, hof_1.pipe(hof_1.prop('then'), exports.isFunction));\n//# sourceMappingURL=predicates.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/predicates.js\n// module id = 4\n// module chunks = 0 1","/**\n * Higher order functions\n *\n * These utility functions are exported, but are subject to change without notice.\n *\n * @module common_hof\n */ /** */\n\"use strict\";\n/**\n * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n *\n * Given a function with N parameters, returns a new function that supports partial application.\n * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n * accept more parameters until all N parameters have been supplied.\n *\n *\n * This contrived example uses a partially applied function as an predicate, which returns true\n * if an object is found in both arrays.\n * @example\n * ```\n * // returns true if an object is in both of the two arrays\n * function inBoth(array1, array2, object) {\n *   return array1.indexOf(object) !== -1 &&\n *          array2.indexOf(object) !== 1;\n * }\n * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n * let foos = [obj1, obj3]\n * let bars = [obj3, obj4, obj5]\n *\n * // A curried \"copy\" of inBoth\n * let curriedInBoth = curry(inBoth);\n * // Partially apply both the array1 and array2\n * let inFoosAndBars = curriedInBoth(foos, bars);\n *\n * // Supply the final argument; since all arguments are\n * // supplied, the original inBoth function is then called.\n * let obj1InBoth = inFoosAndBars(obj1); // false\n *\n * // Use the inFoosAndBars as a predicate.\n * // Filter, on each iteration, supplies the final argument\n * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n *\n * ```\n *\n * Stolen from: http://stackoverflow.com/questions/4394747/javascript-curry-function\n *\n * @param fn\n * @returns {*|function(): (*|any)}\n */\nfunction curry(fn) {\n    var initial_args = [].slice.apply(arguments, [1]);\n    var func_args_length = fn.length;\n    function curried(args) {\n        if (args.length >= func_args_length)\n            return fn.apply(null, args);\n        return function () {\n            return curried(args.concat([].slice.apply(arguments)));\n        };\n    }\n    return curried(initial_args);\n}\nexports.curry = curry;\n/**\n * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n * given: f(x), g(x), h(x)\n * let composed = compose(f,g,h)\n * then, composed is: f(g(h(x)))\n */\nfunction compose() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n        var i = start, result = args[start].apply(this, arguments);\n        while (i--)\n            result = args[i].call(this, result);\n        return result;\n    };\n}\nexports.compose = compose;\n/**\n * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n * given: f(x), g(x), h(x)\n * let piped = pipe(f,g,h);\n * then, piped is: h(g(f(x)))\n */\nfunction pipe() {\n    var funcs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        funcs[_i - 0] = arguments[_i];\n    }\n    return compose.apply(null, [].slice.call(arguments).reverse());\n}\nexports.pipe = pipe;\n/**\n * Given a property name, returns a function that returns that property from an object\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = prop(\"name\");\n * getName(obj) === \"blarg\"\n */\nexports.prop = function (name) {\n    return function (obj) { return obj && obj[name]; };\n};\n/**\n * Given a property name and a value, returns a function that returns a boolean based on whether\n * the passed object has a property that matches the value\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = propEq(\"name\", \"blarg\");\n * getName(obj) === true\n */\nexports.propEq = curry(function (name, val, obj) { return obj && obj[name] === val; });\n/**\n * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n * let getName = prop(\"nestedObj.name\");\n * getName(obj) === \"blarg\"\n * let propNotFound = prop(\"this.property.doesnt.exist\");\n * propNotFound(obj) === undefined\n */\nexports.parse = function (name) {\n    return pipe.apply(null, name.split(\".\").map(exports.prop));\n};\n/**\n * Given a function that returns a truthy or falsey value, returns a\n * function that returns the opposite (falsey or truthy) value given the same inputs\n */\nexports.not = function (fn) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        return !fn.apply(null, args);\n    };\n};\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if both functions return truthy for the given arguments\n */\nfunction and(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        return fn1.apply(null, args) && fn2.apply(null, args);\n    };\n}\nexports.and = and;\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if at least one of the functions returns truthy for the given arguments\n */\nfunction or(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        return fn1.apply(null, args) || fn2.apply(null, args);\n    };\n}\nexports.or = or;\n/**\n * Check if all the elements of an array match a predicate function\n *\n * @param fn1 a predicate function `fn1`\n * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n */\nexports.all = function (fn1) {\n    return function (arr) { return arr.reduce(function (b, x) { return b && !!fn1(x); }, true); };\n};\nexports.any = function (fn1) {\n    return function (arr) { return arr.reduce(function (b, x) { return b || !!fn1(x); }, false); };\n};\n/** Given a class, returns a Predicate function that returns true if the object is of that class */\nexports.is = function (ctor) { return function (obj) {\n    return (obj != null && obj.constructor === ctor || obj instanceof ctor);\n}; };\n/** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\nexports.eq = function (val) { return function (other) {\n    return val === other;\n}; };\n/** Given a value, returns a function which returns the value */\nexports.val = function (v) { return function () { return v; }; };\nfunction invoke(fnName, args) {\n    return function (obj) {\n        return obj[fnName].apply(obj, args);\n    };\n}\nexports.invoke = invoke;\n/**\n * Sorta like Pattern Matching (a functional programming conditional construct)\n *\n * See http://c2.com/cgi/wiki?PatternMatching\n *\n * This is a conditional construct which allows a series of predicates and output functions\n * to be checked and then applied.  Each predicate receives the input.  If the predicate\n * returns truthy, then its matching output function (mapping function) is provided with\n * the input and, then the result is returned.\n *\n * Each combination (2-tuple) of predicate + output function should be placed in an array\n * of size 2: [ predicate, mapFn ]\n *\n * These 2-tuples should be put in an outer array.\n *\n * @example\n * ```\n *\n * // Here's a 2-tuple where the first element is the isString predicate\n * // and the second element is a function that returns a description of the input\n * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n *\n * // Second tuple: predicate \"isNumber\", mapfn returns a description\n * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n *\n * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n *\n * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n *\n * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n *\n * console.log(descriptionOf(undefined)); // 'notdefined'\n * console.log(descriptionOf(55)); // '(55) That's a number!'\n * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n * ```\n *\n * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n * with a Predicate and a mapping/output function\n * @returns {function(any): *}\n */\nfunction pattern(struct) {\n    return function (x) {\n        for (var i = 0; i < struct.length; i++) {\n            if (struct[i][0](x))\n                return struct[i][1](x);\n        }\n    };\n}\nexports.pattern = pattern;\n//# sourceMappingURL=hof.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/hof.js\n// module id = 5\n// module chunks = 0 1","\"use strict\";\nvar notImplemented = function (fnname) { return function () {\n    throw new Error(fnname + \"(): No coreservices implementation for UI-Router is loaded. You should include one of: ['angular1.js']\");\n}; };\nvar services = {\n    $q: undefined,\n    $injector: undefined,\n    location: {},\n    locationConfig: {},\n    template: {}\n};\nexports.services = services;\n[\"setUrl\", \"path\", \"search\", \"hash\", \"onChange\"]\n    .forEach(function (key) { return services.location[key] = notImplemented(key); });\n[\"port\", \"protocol\", \"host\", \"baseHref\", \"html5Mode\", \"hashPrefix\"]\n    .forEach(function (key) { return services.locationConfig[key] = notImplemented(key); });\n//# sourceMappingURL=coreservices.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/coreservices.js\n// module id = 6\n// module chunks = 0 1","\"use strict\";\n/** @module core */\n/**\n * Matches state names using glob-like pattern strings.\n *\n * Globs can be used in specific APIs including:\n *\n * - [[StateService.is]]\n * - [[StateService.includes]]\n * - The first argument to Hook Registration functions like [[TransitionService.onStart]]\n *    - [[HookMatchCriteria]] and [[HookMatchCriterion]]\n *\n * A `Glob` string is a pattern which matches state names.\n * Nested state names are split into segments (separated by a dot) when processing.\n * The state named `foo.bar.baz` is split into three segments ['foo', 'bar', 'baz']\n *\n * Globs work according to the following rules:\n *\n * ### Exact match:\n *\n * The glob `'A.B'` matches the state named exactly `'A.B'`.\n *\n * | Glob        |Matches states named|Does not match state named|\n * |:------------|:--------------------|:---------------------|\n * | `'A'`       | `'A'`               | `'B'` , `'A.C'`      |\n * | `'A.B'`     | `'A.B'`             | `'A'` , `'A.B.C'`    |\n * | `'foo'`     | `'foo'`             | `'FOO'` , `'foo.bar'`|\n *\n * ### Single star (`*`)\n *\n * A single star (`*`) is a wildcard that matches exactly one segment.\n *\n * | Glob        |Matches states named  |Does not match state named |\n * |:------------|:---------------------|:--------------------------|\n * | `'*'`       | `'A'` , `'Z'`        | `'A.B'` , `'Z.Y.X'`       |\n * | `'A.*'`     | `'A.B'` , `'A.C'`    | `'A'` , `'A.B.C'`         |\n * | `'A.*.*'`   | `'A.B.C'` , `'A.X.Y'`| `'A'`, `'A.B'` , `'Z.Y.X'`|\n *\n * ### Double star (`**`)\n *\n * A double star (`'**'`) is a wildcard that matches *zero or more segments*\n *\n * | Glob        |Matches states named                           |Does not match state named         |\n * |:------------|:----------------------------------------------|:----------------------------------|\n * | `'**'`      | `'A'` , `'A.B'`, `'Z.Y.X'`                    | (matches all states)              |\n * | `'A.**'`    | `'A'` , `'A.B'` , `'A.C.X'`                   | `'Z.Y.X'`                         |\n * | `'**.X'`    | `'X'` , `'A.X'` , `'Z.Y.X'`                   | `'A'` , `'A.login.Z'`             |\n * | `'A.**.X'`  | `'A.X'` , `'A.B.X'` , `'A.B.C.X'`             | `'A'` , `'A.B.C'`                 |\n *\n */\nvar Glob = (function () {\n    function Glob(text) {\n        this.text = text;\n        this.glob = text.split('.');\n        var regexpString = this.text.split('.')\n            .map(function (seg) {\n            if (seg === '**')\n                return '(?:|(?:\\\\.[^.]*)*)';\n            if (seg === '*')\n                return '\\\\.[^.]*';\n            return '\\\\.' + seg;\n        }).join('');\n        this.regexp = new RegExp(\"^\" + regexpString + \"$\");\n    }\n    Glob.prototype.matches = function (name) {\n        return this.regexp.test('.' + name);\n    };\n    /** @deprecated whats the point? */\n    Glob.is = function (text) {\n        return text.indexOf('*') > -1;\n    };\n    /** @deprecated whats the point? */\n    Glob.fromString = function (text) {\n        if (!this.is(text))\n            return null;\n        return new Glob(text);\n    };\n    return Glob;\n}());\nexports.Glob = Glob;\n//# sourceMappingURL=glob.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/glob.js\n// module id = 7\n// module chunks = 0 1","/**\n * @module common\n */ /** for typedoc */\n\"use strict\";\nvar Queue = (function () {\n    function Queue(_items, _limit) {\n        if (_items === void 0) { _items = []; }\n        if (_limit === void 0) { _limit = null; }\n        this._items = _items;\n        this._limit = _limit;\n    }\n    Queue.prototype.enqueue = function (item) {\n        var items = this._items;\n        items.push(item);\n        if (this._limit && items.length > this._limit)\n            items.shift();\n        return item;\n    };\n    Queue.prototype.dequeue = function () {\n        if (this.size())\n            return this._items.splice(0, 1)[0];\n    };\n    Queue.prototype.clear = function () {\n        var current = this._items;\n        this._items = [];\n        return current;\n    };\n    Queue.prototype.size = function () {\n        return this._items.length;\n    };\n    Queue.prototype.remove = function (item) {\n        var idx = this._items.indexOf(item);\n        return idx > -1 && this._items.splice(idx, 1)[0];\n    };\n    Queue.prototype.peekTail = function () {\n        return this._items[this._items.length - 1];\n    };\n    Queue.prototype.peekHead = function () {\n        if (this.size())\n            return this._items[0];\n    };\n    return Queue;\n}());\nexports.Queue = Queue;\n//# sourceMappingURL=queue.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/queue.js\n// module id = 8\n// module chunks = 0 1","/**\n * Functions that manipulate strings\n *\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_strings\n */ /** */\n\"use strict\";\nvar predicates_1 = require(\"./predicates\");\nvar rejectFactory_1 = require(\"../transition/rejectFactory\");\nvar common_1 = require(\"./common\");\nvar hof_1 = require(\"./hof\");\nvar transition_1 = require(\"../transition/transition\");\nvar resolvable_1 = require(\"../resolve/resolvable\");\n/**\n * Returns a string shortened to a maximum length\n *\n * If the string is already less than the `max` length, return the string.\n * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n *\n * @param max the maximum length of the string to return\n * @param str the input string\n */\nfunction maxLength(max, str) {\n    if (str.length <= max)\n        return str;\n    return str.substr(0, max - 3) + \"...\";\n}\nexports.maxLength = maxLength;\n/**\n * Returns a string, with spaces added to the end, up to a desired str length\n *\n * If the string is already longer than the desired length, return the string.\n * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n *\n * @param length the desired length of the string to return\n * @param str the input string\n */\nfunction padString(length, str) {\n    while (str.length < length)\n        str += \" \";\n    return str;\n}\nexports.padString = padString;\nfunction kebobString(camelCase) {\n    return camelCase\n        .replace(/^([A-Z])/, function ($1) { return $1.toLowerCase(); }) // replace first char\n        .replace(/([A-Z])/g, function ($1) { return \"-\" + $1.toLowerCase(); }); // replace rest\n}\nexports.kebobString = kebobString;\nfunction _toJson(obj) {\n    return JSON.stringify(obj);\n}\nfunction _fromJson(json) {\n    return predicates_1.isString(json) ? JSON.parse(json) : json;\n}\nfunction promiseToString(p) {\n    return \"Promise(\" + JSON.stringify(p) + \")\";\n}\nfunction functionToString(fn) {\n    var fnStr = fnToString(fn);\n    var namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n    var toStr = namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n    var fnName = fn['name'] || \"\";\n    if (fnName && toStr.match(/function \\(/)) {\n        return 'function ' + fnName + toStr.substr(9);\n    }\n    return toStr;\n}\nexports.functionToString = functionToString;\nfunction fnToString(fn) {\n    var _fn = predicates_1.isArray(fn) ? fn.slice(-1)[0] : fn;\n    return _fn && _fn.toString() || \"undefined\";\n}\nexports.fnToString = fnToString;\nvar stringifyPatternFn = null;\nvar stringifyPattern = function (value) {\n    var isTransitionRejectionPromise = rejectFactory_1.Rejection.isTransitionRejectionPromise;\n    stringifyPatternFn = stringifyPatternFn || hof_1.pattern([\n        [hof_1.not(predicates_1.isDefined), hof_1.val(\"undefined\")],\n        [predicates_1.isNull, hof_1.val(\"null\")],\n        [predicates_1.isPromise, hof_1.val(\"[Promise]\")],\n        [isTransitionRejectionPromise, function (x) { return x._transitionRejection.toString(); }],\n        [hof_1.is(rejectFactory_1.Rejection), hof_1.invoke(\"toString\")],\n        [hof_1.is(transition_1.Transition), hof_1.invoke(\"toString\")],\n        [hof_1.is(resolvable_1.Resolvable), hof_1.invoke(\"toString\")],\n        [predicates_1.isInjectable, functionToString],\n        [hof_1.val(true), common_1.identity]\n    ]);\n    return stringifyPatternFn(value);\n};\nfunction stringify(o) {\n    var seen = [];\n    function format(val) {\n        if (predicates_1.isObject(val)) {\n            if (seen.indexOf(val) !== -1)\n                return '[circular ref]';\n            seen.push(val);\n        }\n        return stringifyPattern(val);\n    }\n    return JSON.stringify(o, function (key, val) { return format(val); }).replace(/\\\\\"/g, '\"');\n}\nexports.stringify = stringify;\n/** Returns a function that splits a string on a character or substring */\nexports.beforeAfterSubstr = function (char) { return function (str) {\n    if (!str)\n        return [\"\", \"\"];\n    var idx = str.indexOf(char);\n    if (idx === -1)\n        return [str, \"\"];\n    return [str.substr(0, idx), str.substr(idx + 1)];\n}; };\n//# sourceMappingURL=strings.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/strings.js\n// module id = 9\n// module chunks = 0 1","/** @internal @module transition */ /** for typedoc */\n\"use strict\";\nvar common_1 = require(\"../common/common\");\nvar strings_1 = require(\"../common/strings\");\n(function (RejectType) {\n    RejectType[RejectType[\"SUPERSEDED\"] = 2] = \"SUPERSEDED\";\n    RejectType[RejectType[\"ABORTED\"] = 3] = \"ABORTED\";\n    RejectType[RejectType[\"INVALID\"] = 4] = \"INVALID\";\n    RejectType[RejectType[\"IGNORED\"] = 5] = \"IGNORED\";\n    RejectType[RejectType[\"ERROR\"] = 6] = \"ERROR\";\n})(exports.RejectType || (exports.RejectType = {}));\nvar RejectType = exports.RejectType;\nvar Rejection = (function () {\n    function Rejection(type, message, detail) {\n        this.type = type;\n        this.message = message;\n        this.detail = detail;\n    }\n    Rejection.prototype.toString = function () {\n        var detailString = function (d) {\n            return d && d.toString !== Object.prototype.toString ? d.toString() : strings_1.stringify(d);\n        };\n        var type = this.type, message = this.message, detail = detailString(this.detail);\n        return \"TransitionRejection(type: \" + type + \", message: \" + message + \", detail: \" + detail + \")\";\n    };\n    Rejection.prototype.toPromise = function () {\n        return common_1.extend(common_1.silentRejection(this), { _transitionRejection: this });\n    };\n    /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n    Rejection.isTransitionRejectionPromise = function (obj) {\n        return obj && (typeof obj.then === 'function') && obj._transitionRejection instanceof Rejection;\n    };\n    /** Returns a TransitionRejection due to transition superseded */\n    Rejection.superseded = function (detail, options) {\n        var message = \"The transition has been superseded by a different transition\";\n        var rejection = new Rejection(RejectType.SUPERSEDED, message, detail);\n        if (options && options.redirected) {\n            rejection.redirected = true;\n        }\n        return rejection;\n    };\n    /** Returns a TransitionRejection due to redirected transition */\n    Rejection.redirected = function (detail) {\n        return Rejection.superseded(detail, { redirected: true });\n    };\n    /** Returns a TransitionRejection due to invalid transition */\n    Rejection.invalid = function (detail) {\n        var message = \"This transition is invalid\";\n        return new Rejection(RejectType.INVALID, message, detail);\n    };\n    /** Returns a TransitionRejection due to ignored transition */\n    Rejection.ignored = function (detail) {\n        var message = \"The transition was ignored\";\n        return new Rejection(RejectType.IGNORED, message, detail);\n    };\n    /** Returns a TransitionRejection due to aborted transition */\n    Rejection.aborted = function (detail) {\n        // TODO think about how to encapsulate an Error() object\n        var message = \"The transition has been aborted\";\n        return new Rejection(RejectType.ABORTED, message, detail);\n    };\n    /** Returns a TransitionRejection due to aborted transition */\n    Rejection.errored = function (detail) {\n        // TODO think about how to encapsulate an Error() object\n        var message = \"The transition errored\";\n        return new Rejection(RejectType.ERROR, message, detail);\n    };\n    return Rejection;\n}());\nexports.Rejection = Rejection;\n//# sourceMappingURL=rejectFactory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/transition/rejectFactory.js\n// module id = 10\n// module chunks = 0 1","\"use strict\";\n/** @internal @module transition */ /** for typedoc */\nvar strings_1 = require(\"../common/strings\");\nvar trace_1 = require(\"../common/trace\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar hof_1 = require(\"../common/hof\");\nvar transitionHook_1 = require(\"./transitionHook\");\nvar hookRegistry_1 = require(\"./hookRegistry\");\nvar hookBuilder_1 = require(\"./hookBuilder\");\nvar node_1 = require(\"../path/node\");\nvar pathFactory_1 = require(\"../path/pathFactory\");\nvar targetState_1 = require(\"../state/targetState\");\nvar param_1 = require(\"../params/param\");\nvar resolvable_1 = require(\"../resolve/resolvable\");\nvar rejectFactory_1 = require(\"./rejectFactory\");\nvar resolveContext_1 = require(\"../resolve/resolveContext\");\nvar router_1 = require(\"../router\");\nvar transitionCount = 0;\nvar stateSelf = hof_1.prop(\"self\");\n/**\n * Represents a transition between two states.\n *\n * When navigating to a state, we are transitioning **from** the current state **to** the new state.\n *\n * This object contains all contextual information about the to/from states, parameters, resolves.\n * It has information about all states being entered and exited as a result of the transition.\n */\nvar Transition = (function () {\n    /**\n     * Creates a new Transition object.\n     *\n     * If the target state is not valid, an error is thrown.\n     *\n     * @param fromPath The path of [[PathNode]]s from which the transition is leaving.  The last node in the `fromPath`\n     *        encapsulates the \"from state\".\n     * @param targetState The target state and parameters being transitioned to (also, the transition options)\n     * @param router The [[UIRouter]] instance\n     */\n    function Transition(fromPath, targetState, router) {\n        var _this = this;\n        /** @hidden */\n        this._deferred = coreservices_1.services.$q.defer();\n        /**\n         * This promise is resolved or rejected based on the outcome of the Transition.\n         *\n         * When the transition is successful, the promise is resolved\n         * When the transition is unsuccessful, the promise is rejected with the [[TransitionRejection]] or javascript error\n         */\n        this.promise = this._deferred.promise;\n        this.treeChanges = function () { return _this._treeChanges; };\n        this.isActive = function () { return _this === _this._options.current(); };\n        this.router = router;\n        this._targetState = targetState;\n        if (!targetState.valid()) {\n            throw new Error(targetState.error());\n        }\n        // Makes the Transition instance a hook registry (onStart, etc)\n        hookRegistry_1.HookRegistry.mixin(new hookRegistry_1.HookRegistry(), this);\n        // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n        this._options = common_1.extend({ current: hof_1.val(this) }, targetState.options());\n        this.$id = transitionCount++;\n        var toPath = pathFactory_1.PathFactory.buildToPath(fromPath, targetState);\n        this._treeChanges = pathFactory_1.PathFactory.treeChanges(fromPath, toPath, this._options.reloadState);\n        var enteringStates = this._treeChanges.entering.map(function (node) { return node.state; });\n        pathFactory_1.PathFactory.applyViewConfigs(router.transitionService.$view, this._treeChanges.to, enteringStates);\n        var rootResolvables = [\n            new resolvable_1.Resolvable(router_1.UIRouter, function () { return router; }, [], undefined, router),\n            new resolvable_1.Resolvable(Transition, function () { return _this; }, [], undefined, this),\n            new resolvable_1.Resolvable('$transition$', function () { return _this; }, [], undefined, this),\n            new resolvable_1.Resolvable('$stateParams', function () { return _this.params(); }, [], undefined, this.params())\n        ];\n        var rootNode = this._treeChanges.to[0];\n        var context = new resolveContext_1.ResolveContext(this._treeChanges.to);\n        context.addResolvables(rootResolvables, rootNode.state);\n    }\n    /** @inheritdoc */\n    Transition.prototype.onBefore = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    Transition.prototype.onStart = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    Transition.prototype.onExit = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    Transition.prototype.onRetain = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    Transition.prototype.onEnter = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    Transition.prototype.onFinish = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    Transition.prototype.onSuccess = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    Transition.prototype.onError = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    Transition.prototype.$from = function () {\n        return common_1.tail(this._treeChanges.from).state;\n    };\n    Transition.prototype.$to = function () {\n        return common_1.tail(this._treeChanges.to).state;\n    };\n    /**\n     * Returns the \"from state\"\n     *\n     * @returns The state object for the Transition's \"from state\".\n     */\n    Transition.prototype.from = function () {\n        return this.$from().self;\n    };\n    /**\n     * Returns the \"to state\"\n     *\n     * @returns The state object for the Transition's target state (\"to state\").\n     */\n    Transition.prototype.to = function () {\n        return this.$to().self;\n    };\n    /**\n     * Gets the Target State\n     *\n     * A transition's [[TargetState]] encapsulates the [[to]] state, the [[params]], and the [[options]].\n     *\n     * @returns the [[TargetState]] of this Transition\n     */\n    Transition.prototype.targetState = function () {\n        return this._targetState;\n    };\n    /**\n     * Determines whether two transitions are equivalent.\n     */\n    Transition.prototype.is = function (compare) {\n        if (compare instanceof Transition) {\n            // TODO: Also compare parameters\n            return this.is({ to: compare.$to().name, from: compare.$from().name });\n        }\n        return !((compare.to && !hookRegistry_1.matchState(this.$to(), compare.to)) ||\n            (compare.from && !hookRegistry_1.matchState(this.$from(), compare.from)));\n    };\n    /**\n     * Gets transition parameter values\n     *\n     * @param pathname Pick which treeChanges path to get parameters for:\n     *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n     * @returns transition parameter values for the desired path.\n     */\n    Transition.prototype.params = function (pathname) {\n        if (pathname === void 0) { pathname = \"to\"; }\n        return this._treeChanges[pathname].map(hof_1.prop(\"paramValues\")).reduce(common_1.mergeR, {});\n    };\n    /**\n     * Creates a [[UIInjector]] Dependency Injector\n     *\n     * Returns a Dependency Injector for the Transition's target state (to state).\n     * The injector provides resolve values which the target state has access to.\n     *\n     * The `UIInjector` can also provide values from the native root/global injector (ng1/ng2).\n     *\n     * If a `state` is provided, the injector that is returned will be limited to resolve values that the provided state has access to.\n     *\n     * @param state Limits the resolves provided to only the resolves the provided state has access to.\n     * @returns a [[UIInjector]]\n     */\n    Transition.prototype.injector = function (state) {\n        var path = this.treeChanges().to;\n        if (state)\n            path = pathFactory_1.PathFactory.subPath(path, function (node) { return node.state === state || node.state.name === state; });\n        return new resolveContext_1.ResolveContext(path).injector();\n    };\n    /**\n     * Gets all available resolve tokens (keys)\n     *\n     * This method can be used in conjunction with [[getResolve]] to inspect the resolve values\n     * available to the Transition.\n     *\n     * The returned tokens include those defined on [[StateDeclaration.resolve]] blocks, for the states\n     * in the Transition's [[TreeChanges.to]] path.\n     *\n     * @returns an array of resolve tokens (keys)\n     */\n    Transition.prototype.getResolveTokens = function () {\n        return new resolveContext_1.ResolveContext(this._treeChanges.to).getTokens();\n    };\n    /**\n     * Gets resolved values\n     *\n     * This method can be used in conjunction with [[getResolveTokens]] to inspect what resolve values\n     * are available to the Transition.\n     *\n     * Given a token, returns the resolved data for that token.\n     * Given an array of tokens, returns an array of resolved data for those tokens.\n     *\n     * If a resolvable hasn't yet been fetched, returns `undefined` for that token\n     * If a resolvable doesn't exist for the token, throws an error.\n     *\n     * @param token the token (or array of tokens)\n     *\n     * @returns an array of resolve tokens (keys)\n     */\n    Transition.prototype.getResolveValue = function (token) {\n        var resolveContext = new resolveContext_1.ResolveContext(this._treeChanges.to);\n        var getData = function (token) {\n            var resolvable = resolveContext.getResolvable(token);\n            if (resolvable === undefined) {\n                throw new Error(\"Dependency Injection token not found: \" + strings_1.stringify(token));\n            }\n            return resolvable.data;\n        };\n        if (predicates_1.isArray(token)) {\n            return token.map(getData);\n        }\n        return getData(token);\n    };\n    /**\n     * Gets a [[Resolvable]] primitive\n     *\n     * This is a lower level API that returns a [[Resolvable]] from the Transition for a given token.\n     *\n     * @param token the DI token\n     *\n     * @returns the [[Resolvable]] in the transition's to path, or undefined\n     */\n    Transition.prototype.getResolvable = function (token) {\n        return new resolveContext_1.ResolveContext(this._treeChanges.to).getResolvable(token);\n    };\n    /**\n     * Dynamically adds a new [[Resolvable]] (`resolve`) to this transition.\n     *\n     * @param resolvable an [[Resolvable]] object\n     * @param state the state in the \"to path\" which should receive the new resolve (otherwise, the root state)\n     */\n    Transition.prototype.addResolvable = function (resolvable, state) {\n        if (state === void 0) { state = \"\"; }\n        var stateName = (typeof state === \"string\") ? state : state.name;\n        var topath = this._treeChanges.to;\n        var targetNode = common_1.find(topath, function (node) { return node.state.name === stateName; });\n        var resolveContext = new resolveContext_1.ResolveContext(topath);\n        resolveContext.addResolvables([resolvable], targetNode.state);\n    };\n    /**\n     * If the current transition is a redirect, returns the transition that was redirected.\n     *\n     * Gets the transition from which this transition was redirected.\n     *\n     *\n     * #### Example:\n     * ```js\n     * let transitionA = $state.go('A').transitionA\n     * transitionA.onStart({}, () => $state.target('B'));\n     * $transitions.onSuccess({ to: 'B' }, (trans) => {\n     *   trans.to().name === 'B'; // true\n     *   trans.redirectedFrom() === transitionA; // true\n     * });\n     * ```\n     *\n     * @returns The previous Transition, or null if this Transition is not the result of a redirection\n     */\n    Transition.prototype.redirectedFrom = function () {\n        return this._options.redirectedFrom || null;\n    };\n    /**\n     * Get the transition options\n     *\n     * @returns the options for this Transition.\n     */\n    Transition.prototype.options = function () {\n        return this._options;\n    };\n    /**\n     * Gets the states being entered.\n     *\n     * @returns an array of states that will be entered during this transition.\n     */\n    Transition.prototype.entering = function () {\n        return common_1.map(this._treeChanges.entering, hof_1.prop('state')).map(stateSelf);\n    };\n    /**\n     * Gets the states being exited.\n     *\n     * @returns an array of states that will be exited during this transition.\n     */\n    Transition.prototype.exiting = function () {\n        return common_1.map(this._treeChanges.exiting, hof_1.prop('state')).map(stateSelf).reverse();\n    };\n    /**\n     * Gets the states being retained.\n     *\n     * @returns an array of states that are already entered from a previous Transition, that will not be\n     *    exited during this Transition\n     */\n    Transition.prototype.retained = function () {\n        return common_1.map(this._treeChanges.retained, hof_1.prop('state')).map(stateSelf);\n    };\n    /**\n     * Get the [[ViewConfig]]s associated with this Transition\n     *\n     * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n     * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n     *\n     * @param pathname the name of the path to fetch views for:\n     *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n     * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n     *\n     * @returns a list of ViewConfig objects for the given path.\n     */\n    Transition.prototype.views = function (pathname, state) {\n        if (pathname === void 0) { pathname = \"entering\"; }\n        var path = this._treeChanges[pathname];\n        path = !state ? path : path.filter(hof_1.propEq('state', state));\n        return path.map(hof_1.prop(\"views\")).filter(common_1.identity).reduce(common_1.unnestR, []);\n    };\n    /**\n     * Creates a new transition that is a redirection of the current one.\n     *\n     * This transition can be returned from a [[TransitionService]] hook to\n     * redirect a transition to a new state and/or set of parameters.\n     *\n     * @returns Returns a new [[Transition]] instance.\n     */\n    Transition.prototype.redirect = function (targetState) {\n        var newOptions = common_1.extend({}, this.options(), targetState.options(), { redirectedFrom: this, source: \"redirect\" });\n        targetState = new targetState_1.TargetState(targetState.identifier(), targetState.$state(), targetState.params(), newOptions);\n        var newTransition = this.router.transitionService.create(this._treeChanges.from, targetState);\n        var originalEnteringNodes = this.treeChanges().entering;\n        var redirectEnteringNodes = newTransition.treeChanges().entering;\n        // --- Re-use resolve data from original transition ---\n        // When redirecting from a parent state to a child state where the parent parameter values haven't changed\n        // (because of the redirect), the resolves fetched by the original transition are still valid in the\n        // redirected transition.\n        //\n        // This allows you to define a redirect on a parent state which depends on an async resolve value.\n        // You can wait for the resolve, then redirect to a child state based on the result.\n        // The redirected transition does not have to re-fetch the resolve.\n        // ---------------------------------------------------------\n        var nodeIsReloading = function (reloadState) { return function (node) {\n            return reloadState && node.state.includes[reloadState.name];\n        }; };\n        // Find any \"entering\" nodes in the redirect path that match the original path and aren't being reloaded\n        var matchingEnteringNodes = node_1.PathNode.matching(redirectEnteringNodes, originalEnteringNodes)\n            .filter(hof_1.not(nodeIsReloading(targetState.options().reloadState)));\n        // Use the existing (possibly pre-resolved) resolvables for the matching entering nodes.\n        matchingEnteringNodes.forEach(function (node, idx) {\n            node.resolvables = originalEnteringNodes[idx].resolvables;\n        });\n        return newTransition;\n    };\n    /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n    Transition.prototype._changedParams = function () {\n        var _a = this._treeChanges, to = _a.to, from = _a.from;\n        if (this._options.reload || common_1.tail(to).state !== common_1.tail(from).state)\n            return undefined;\n        var nodeSchemas = to.map(function (node) { return node.paramSchema; });\n        var _b = [to, from].map(function (path) { return path.map(function (x) { return x.paramValues; }); }), toValues = _b[0], fromValues = _b[1];\n        var tuples = common_1.arrayTuples(nodeSchemas, toValues, fromValues);\n        return tuples.map(function (_a) {\n            var schema = _a[0], toVals = _a[1], fromVals = _a[2];\n            return param_1.Param.changed(schema, toVals, fromVals);\n        }).reduce(common_1.unnestR, []);\n    };\n    /**\n     * Returns true if the transition is dynamic.\n     *\n     * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n     *\n     * @returns true if the Transition is dynamic\n     */\n    Transition.prototype.dynamic = function () {\n        var changes = this._changedParams();\n        return !changes ? false : changes.map(function (x) { return x.dynamic; }).reduce(common_1.anyTrueR, false);\n    };\n    /**\n     * Returns true if the transition is ignored.\n     *\n     * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n     *\n     * @returns true if the Transition is ignored.\n     */\n    Transition.prototype.ignored = function () {\n        var changes = this._changedParams();\n        return !changes ? false : changes.length === 0;\n    };\n    /**\n     * @hidden\n     */\n    Transition.prototype.hookBuilder = function () {\n        return new hookBuilder_1.HookBuilder(this.router.transitionService, this, {\n            transition: this,\n            current: this._options.current\n        });\n    };\n    /**\n     * Runs the transition\n     *\n     * This method is generally called from the [[StateService.transitionTo]]\n     *\n     * @returns a promise for a successful transition.\n     */\n    Transition.prototype.run = function () {\n        var _this = this;\n        var runSynchronousHooks = transitionHook_1.TransitionHook.runSynchronousHooks;\n        var runAllHooks = transitionHook_1.TransitionHook.runAllHooks;\n        var hookBuilder = this.hookBuilder();\n        var globals = this.router.globals;\n        globals.transitionHistory.enqueue(this);\n        var syncResult = runSynchronousHooks(hookBuilder.getOnBeforeHooks());\n        if (rejectFactory_1.Rejection.isTransitionRejectionPromise(syncResult)) {\n            syncResult.catch(function () { return 0; }); // issue #2676\n            var rejectReason = syncResult._transitionRejection;\n            this._deferred.reject(rejectReason);\n            return this.promise;\n        }\n        if (!this.valid()) {\n            var error = new Error(this.error());\n            this._deferred.reject(error);\n            return this.promise;\n        }\n        if (this.ignored()) {\n            trace_1.trace.traceTransitionIgnored(this);\n            this._deferred.reject(rejectFactory_1.Rejection.ignored());\n            return this.promise;\n        }\n        // When the chain is complete, then resolve or reject the deferred\n        var transitionSuccess = function () {\n            trace_1.trace.traceSuccess(_this.$to(), _this);\n            _this.success = true;\n            _this._deferred.resolve(_this.to());\n            runAllHooks(hookBuilder.getOnSuccessHooks());\n        };\n        var transitionError = function (reason) {\n            trace_1.trace.traceError(reason, _this);\n            _this.success = false;\n            _this._deferred.reject(reason);\n            _this._error = reason;\n            runAllHooks(hookBuilder.getOnErrorHooks());\n        };\n        trace_1.trace.traceTransitionStart(this);\n        // Chain the next hook off the previous\n        var appendHookToChain = function (prev, nextHook) {\n            return prev.then(function () { return nextHook.invokeHook(); });\n        };\n        // Run the hooks, then resolve or reject the overall deferred in the .then() handler\n        hookBuilder.asyncHooks()\n            .reduce(appendHookToChain, syncResult)\n            .then(transitionSuccess, transitionError);\n        return this.promise;\n    };\n    /**\n     * Checks if the Transition is valid\n     *\n     * @returns true if the Transition is valid\n     */\n    Transition.prototype.valid = function () {\n        return !this.error() || this.success !== undefined;\n    };\n    /**\n     * The Transition error reason.\n     *\n     * If the transition is invalid (and could not be run), returns the reason the transition is invalid.\n     * If the transition was valid and ran, but was not successful, returns the reason the transition failed.\n     *\n     * @returns an error message explaining why the transition is invalid, or the reason the transition failed.\n     */\n    Transition.prototype.error = function () {\n        var state = this.$to();\n        var redirects = 0, trans = this;\n        while ((trans = trans.redirectedFrom()) != null) {\n            if (++redirects > 20)\n                return \"Too many Transition redirects (20+)\";\n        }\n        if (state.self.abstract)\n            return \"Cannot transition to abstract state '\" + state.name + \"'\";\n        if (!param_1.Param.validates(state.parameters(), this.params()))\n            return \"Param values not valid for state '\" + state.name + \"'\";\n        if (this.success === false)\n            return this._error;\n    };\n    /**\n     * A string representation of the Transition\n     *\n     * @returns A string representation of the Transition\n     */\n    Transition.prototype.toString = function () {\n        var fromStateOrName = this.from();\n        var toStateOrName = this.to();\n        var avoidEmptyHash = function (params) {\n            return (params[\"#\"] !== null && params[\"#\"] !== undefined) ? params : common_1.omit(params, \"#\");\n        };\n        // (X) means the to state is invalid.\n        var id = this.$id, from = predicates_1.isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName, fromParams = common_1.toJson(avoidEmptyHash(this._treeChanges.from.map(hof_1.prop('paramValues')).reduce(common_1.mergeR, {}))), toValid = this.valid() ? \"\" : \"(X) \", to = predicates_1.isObject(toStateOrName) ? toStateOrName.name : toStateOrName, toParams = common_1.toJson(avoidEmptyHash(this.params()));\n        return \"Transition#\" + id + \"( '\" + from + \"'\" + fromParams + \" -> \" + toValid + \"'\" + to + \"'\" + toParams + \" )\";\n    };\n    Transition.diToken = Transition;\n    return Transition;\n}());\nexports.Transition = Transition;\n//# sourceMappingURL=transition.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/transition/transition.js\n// module id = 11\n// module chunks = 0 1","\"use strict\";\n/**\n * UI-Router Transition Tracing\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"ui-router-ng2\"; // or \"angular-ui-router\"\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"angular-ui-router\").trace; // or \"ui-router-ng2\"\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"angular-ui-router\"].trace; // or \"ui-router-ng2\"\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @module trace\n */ /** for typedoc */\nvar hof_1 = require(\"../common/hof\");\nvar predicates_1 = require(\"../common/predicates\");\nvar strings_1 = require(\"./strings\");\n/** @hidden */\nfunction uiViewString(viewData) {\n    if (!viewData)\n        return 'ui-view (defunct)';\n    return (\"[ui-view#\" + viewData.id + \" tag \") +\n        (\"in template from '\" + (viewData.creationContext && viewData.creationContext.name || '(root)') + \"' state]: \") +\n        (\"fqn: '\" + viewData.fqn + \"', \") +\n        (\"name: '\" + viewData.name + \"@\" + viewData.creationContext + \"')\");\n}\n/** @hidden */\nvar viewConfigString = function (viewConfig) {\n    return (\"[ViewConfig#\" + viewConfig.$id + \" from '\" + (viewConfig.viewDecl.$context.name || '(root)') + \"' state]: target ui-view: '\" + viewConfig.viewDecl.$uiViewName + \"@\" + viewConfig.viewDecl.$uiViewContextAnchor + \"'\");\n};\n/** @hidden */\nfunction normalizedCat(input) {\n    return predicates_1.isNumber(input) ? Category[input] : Category[Category[input]];\n}\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\n(function (Category) {\n    Category[Category[\"RESOLVE\"] = 0] = \"RESOLVE\";\n    Category[Category[\"TRANSITION\"] = 1] = \"TRANSITION\";\n    Category[Category[\"HOOK\"] = 2] = \"HOOK\";\n    Category[Category[\"UIVIEW\"] = 3] = \"UIVIEW\";\n    Category[Category[\"VIEWCONFIG\"] = 4] = \"VIEWCONFIG\";\n})(exports.Category || (exports.Category = {}));\nvar Category = exports.Category;\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nvar Trace = (function () {\n    /** @hidden */\n    function Trace() {\n        /** @hidden */\n        this._enabled = {};\n        this.approximateDigests = 0;\n    }\n    /** @hidden */\n    Trace.prototype._set = function (enabled, categories) {\n        var _this = this;\n        if (!categories.length) {\n            categories = Object.keys(Category)\n                .map(function (k) { return parseInt(k, 10); })\n                .filter(function (k) { return !isNaN(k); })\n                .map(function (key) { return Category[key]; });\n        }\n        categories.map(normalizedCat).forEach(function (category) { return _this._enabled[category] = enabled; });\n    };\n    /**\n     * Enables a trace [[Category]]\n     *\n     * ```js\n     * trace.enable(\"TRANSITION\");\n     * ```\n     *\n     * @param categories categories to enable. If `categories` is omitted, all categories are enabled.\n     *        Also takes strings (category name) or ordinal (category position)\n     */\n    Trace.prototype.enable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i - 0] = arguments[_i];\n        }\n        this._set(true, categories);\n    };\n    /**\n     * Disables a trace [[Category]]\n     *\n     * ```js\n     * trace.disable(\"VIEWCONFIG\");\n     * ```\n     *\n     * @param categories categories to disable. If `categories` is omitted, all categories are disabled.\n     *        Also takes strings (category name) or ordinal (category position)\n     */\n    Trace.prototype.disable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i - 0] = arguments[_i];\n        }\n        this._set(false, categories);\n    };\n    /**\n     * Retrieves the enabled stateus of a [[Category]]\n     *\n     * ```js\n     * trace.enabled(\"VIEWCONFIG\"); // true or false\n     * ```\n     *\n     * @returns boolean true if the category is enabled\n     */\n    Trace.prototype.enabled = function (category) {\n        return !!this._enabled[normalizedCat(category)];\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionStart = function (transition) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        var tid = transition.$id, digest = this.approximateDigests, transitionStr = strings_1.stringify(transition);\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \": Started  -> \" + transitionStr);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionIgnored = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        var tid = trans && trans.$id, digest = this.approximateDigests, transitionStr = strings_1.stringify(trans);\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \": Ignored  <> \" + transitionStr);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookInvocation = function (step, options) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        var tid = hof_1.parse(\"transition.$id\")(options), digest = this.approximateDigests, event = hof_1.parse(\"traceData.hookType\")(options) || \"internal\", context = hof_1.parse(\"traceData.context.state.name\")(options) || hof_1.parse(\"traceData.context\")(options) || \"unknown\", name = strings_1.functionToString(step.eventHook.callback);\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \":   Hook -> \" + event + \" context: \" + context + \", \" + strings_1.maxLength(200, name));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookResult = function (hookResult, transitionOptions) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        var tid = hof_1.parse(\"transition.$id\")(transitionOptions), digest = this.approximateDigests, hookResultStr = strings_1.stringify(hookResult);\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \":   <- Hook returned: \" + strings_1.maxLength(200, hookResultStr));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvePath = function (path, when, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        var tid = trans && trans.$id, digest = this.approximateDigests, pathStr = path && path.toString();\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \":         Resolving \" + pathStr + \" (\" + when + \")\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvableResolved = function (resolvable, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        var tid = trans && trans.$id, digest = this.approximateDigests, resolvableStr = resolvable && resolvable.toString(), result = strings_1.stringify(resolvable.data);\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \":               <- Resolved  \" + resolvableStr + \" to: \" + strings_1.maxLength(200, result));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceError = function (reason, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        var tid = trans && trans.$id, digest = this.approximateDigests, transitionStr = strings_1.stringify(trans);\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \": <- Rejected \" + transitionStr + \", reason: \" + reason);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceSuccess = function (finalState, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        var tid = trans && trans.$id, digest = this.approximateDigests, state = finalState.name, transitionStr = strings_1.stringify(trans);\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \": <- Success  \" + transitionStr + \", final state: \" + state);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {\n        if (extra === void 0) { extra = \"\"; }\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        console.log(\"ui-view: \" + strings_1.padString(30, event) + \" \" + uiViewString(viewData) + extra);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent(\"Updating\", viewData, \" with ViewConfig from context='\" + context + \"'\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewFill = function (viewData, html) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent(\"Fill\", viewData, \" with: \" + strings_1.maxLength(200, html));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + viewConfigString(viewConfig));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + uiViewString(viewData));\n    };\n    return Trace;\n}());\nexports.Trace = Trace;\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"angular-ui-router\";\n * trace.enable(1, 5);\n * ```\n */\nvar trace = new Trace();\nexports.trace = trace;\n//# sourceMappingURL=trace.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/trace.js\n// module id = 12\n// module chunks = 0 1","\"use strict\";\nvar common_1 = require(\"../common/common\");\nvar strings_1 = require(\"../common/strings\");\nvar predicates_1 = require(\"../common/predicates\");\nvar hof_1 = require(\"../common/hof\");\nvar trace_1 = require(\"../common/trace\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar rejectFactory_1 = require(\"./rejectFactory\");\nvar targetState_1 = require(\"../state/targetState\");\nvar defaultOptions = {\n    async: true,\n    rejectIfSuperseded: true,\n    current: common_1.noop,\n    transition: null,\n    traceData: {},\n    bind: null\n};\n/** @hidden */\nvar TransitionHook = (function () {\n    function TransitionHook(transition, stateContext, eventHook, options) {\n        var _this = this;\n        this.transition = transition;\n        this.stateContext = stateContext;\n        this.eventHook = eventHook;\n        this.options = options;\n        this.isSuperseded = function () {\n            return _this.options.current() !== _this.options.transition;\n        };\n        this.options = common_1.defaults(options, defaultOptions);\n    }\n    TransitionHook.prototype.invokeHook = function () {\n        var _a = this, options = _a.options, eventHook = _a.eventHook;\n        trace_1.trace.traceHookInvocation(this, options);\n        if (options.rejectIfSuperseded && this.isSuperseded()) {\n            return rejectFactory_1.Rejection.superseded(options.current()).toPromise();\n        }\n        var synchronousHookResult = !eventHook._deregistered\n            ? eventHook.callback.call(options.bind, this.transition, this.stateContext)\n            : undefined;\n        return this.handleHookResult(synchronousHookResult);\n    };\n    /**\n     * This method handles the return value of a Transition Hook.\n     *\n     * A hook can return false (cancel), a TargetState (redirect),\n     * or a promise (which may later resolve to false or a redirect)\n     *\n     * This also handles \"transition superseded\" -- when a new transition\n     * was started while the hook was still running\n     */\n    TransitionHook.prototype.handleHookResult = function (result) {\n        // This transition is no longer current.\n        // Another transition started while this hook was still running.\n        if (this.isSuperseded()) {\n            // Abort this transition\n            return rejectFactory_1.Rejection.superseded(this.options.current()).toPromise();\n        }\n        // Hook returned a promise\n        if (predicates_1.isPromise(result)) {\n            // Wait for the promise, then reprocess the resolved value\n            return result.then(this.handleHookResult.bind(this));\n        }\n        trace_1.trace.traceHookResult(result, this.options);\n        // Hook returned false\n        if (result === false) {\n            // Abort this Transition\n            return rejectFactory_1.Rejection.aborted(\"Hook aborted transition\").toPromise();\n        }\n        var isTargetState = hof_1.is(targetState_1.TargetState);\n        // hook returned a TargetState\n        if (isTargetState(result)) {\n            // Halt the current Transition and start a redirected Transition (to the TargetState).\n            return rejectFactory_1.Rejection.redirected(result).toPromise();\n        }\n    };\n    TransitionHook.prototype.toString = function () {\n        var _a = this, options = _a.options, eventHook = _a.eventHook;\n        var event = hof_1.parse(\"traceData.hookType\")(options) || \"internal\", context = hof_1.parse(\"traceData.context.state.name\")(options) || hof_1.parse(\"traceData.context\")(options) || \"unknown\", name = strings_1.fnToString(eventHook.callback);\n        return event + \" context: \" + context + \", \" + strings_1.maxLength(200, name);\n    };\n    /**\n     * Run all TransitionHooks, ignoring their return value.\n     */\n    TransitionHook.runAllHooks = function (hooks) {\n        hooks.forEach(function (hook) {\n            try {\n                hook.invokeHook();\n            }\n            catch (exception) {\n                var errorHandler = hook.transition.router.stateService.defaultErrorHandler();\n                errorHandler(exception);\n            }\n        });\n    };\n    /**\n     * Given an array of TransitionHooks, runs each one synchronously and sequentially.\n     * Should any hook return a Rejection synchronously, the remaining hooks will not run.\n     *\n     * Returns a promise chain composed of any promises returned from each hook.invokeStep() call\n     */\n    TransitionHook.runSynchronousHooks = function (hooks) {\n        var results = [];\n        for (var _i = 0, hooks_1 = hooks; _i < hooks_1.length; _i++) {\n            var hook = hooks_1[_i];\n            try {\n                var hookResult = hook.invokeHook();\n                if (rejectFactory_1.Rejection.isTransitionRejectionPromise(hookResult)) {\n                    // Break on first thrown error or false/TargetState\n                    return hookResult;\n                }\n                results.push(hookResult);\n            }\n            catch (exception) {\n                return rejectFactory_1.Rejection.errored(exception).toPromise();\n            }\n        }\n        return results\n            .filter(predicates_1.isPromise)\n            .reduce(function (chain, promise) { return chain.then(hof_1.val(promise)); }, coreservices_1.services.$q.when());\n    };\n    return TransitionHook;\n}());\nexports.TransitionHook = TransitionHook;\n//# sourceMappingURL=transitionHook.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/transition/transitionHook.js\n// module id = 13\n// module chunks = 0 1","/** @module state */ /** for typedoc */\n\"use strict\";\nvar common_1 = require(\"../common/common\");\n/**\n * Encapsulate the target (destination) state/params/options of a [[Transition]].\n *\n * This class is frequently used to redirect a transition to a new destination.\n *\n * See:\n *\n * - [[HookResult]]\n * - [[TransitionHookFn]]\n * - [[TransitionService.onStart]]\n *\n * To create a `TargetState`, use [[StateService.target]].\n *\n * ---\n *\n * This class wraps:\n *\n * 1) an identifier for a state\n * 2) a set of parameters\n * 3) and transition options\n * 4) the registered state object (the [[StateDeclaration]])\n *\n * Many UI-Router APIs such as [[StateService.go]] take a [[StateOrName]] argument which can\n * either be a *state object* (a [[StateDeclaration]] or [[State]]) or a *state name* (a string).\n * The `TargetState` class normalizes those options.\n *\n * A `TargetState` may be valid (the state being targeted exists in the registry)\n * or invalid (the state being targeted is not registered).\n */\nvar TargetState = (function () {\n    /**\n     * The TargetState constructor\n     *\n     * Note: Do not construct a `TargetState` manually.\n     * To create a `TargetState`, use the [[StateService.target]] factory method.\n     *\n     * @param _identifier An identifier for a state.\n     *    Either a fully-qualified state name, or the object used to define the state.\n     * @param _definition The internal state representation, if exists.\n     * @param _params Parameters for the target state\n     * @param _options Transition options.\n     */\n    function TargetState(_identifier, _definition, _params, _options) {\n        if (_params === void 0) { _params = {}; }\n        if (_options === void 0) { _options = {}; }\n        this._identifier = _identifier;\n        this._definition = _definition;\n        this._options = _options;\n        this._params = _params || {};\n    }\n    TargetState.prototype.name = function () {\n        return this._definition && this._definition.name || this._identifier;\n    };\n    TargetState.prototype.identifier = function () {\n        return this._identifier;\n    };\n    TargetState.prototype.params = function () {\n        return this._params;\n    };\n    TargetState.prototype.$state = function () {\n        return this._definition;\n    };\n    TargetState.prototype.state = function () {\n        return this._definition && this._definition.self;\n    };\n    TargetState.prototype.options = function () {\n        return this._options;\n    };\n    TargetState.prototype.exists = function () {\n        return !!(this._definition && this._definition.self);\n    };\n    TargetState.prototype.valid = function () {\n        return !this.error();\n    };\n    TargetState.prototype.error = function () {\n        var base = this.options().relative;\n        if (!this._definition && !!base) {\n            var stateName = base.name ? base.name : base;\n            return \"Could not resolve '\" + this.name() + \"' from state '\" + stateName + \"'\";\n        }\n        if (!this._definition)\n            return \"No such state '\" + this.name() + \"'\";\n        if (!this._definition.self)\n            return \"State '\" + this.name() + \"' has an invalid definition\";\n    };\n    TargetState.prototype.toString = function () {\n        return \"'\" + this.name() + \"'\" + common_1.toJson(this.params());\n    };\n    return TargetState;\n}());\nexports.TargetState = TargetState;\n//# sourceMappingURL=targetState.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/targetState.js\n// module id = 14\n// module chunks = 0 1","\"use strict\";\n/** @internal @module transition */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar glob_1 = require(\"../common/glob\");\n/**\n * Determines if the given state matches the matchCriteria\n *\n * @hidden\n *\n * @param state a State Object to test against\n * @param criterion\n * - If a string, matchState uses the string as a glob-matcher against the state name\n * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n *   and returns a positive match if any of the globs match.\n * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n * @returns {boolean}\n */\nfunction matchState(state, criterion) {\n    var toMatch = predicates_1.isString(criterion) ? [criterion] : criterion;\n    function matchGlobs(_state) {\n        var globStrings = toMatch;\n        for (var i = 0; i < globStrings.length; i++) {\n            var glob = glob_1.Glob.fromString(globStrings[i]);\n            if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    var matchFn = (predicates_1.isFunction(toMatch) ? toMatch : matchGlobs);\n    return !!matchFn(state);\n}\nexports.matchState = matchState;\n/** @hidden */\nvar EventHook = (function () {\n    function EventHook(matchCriteria, callback, options) {\n        if (options === void 0) { options = {}; }\n        this.callback = callback;\n        this.matchCriteria = common_1.extend({ to: true, from: true, exiting: true, retained: true, entering: true }, matchCriteria);\n        this.priority = options.priority || 0;\n        this.bind = options.bind || null;\n        this._deregistered = false;\n    }\n    EventHook._matchingNodes = function (nodes, criterion) {\n        if (criterion === true)\n            return nodes;\n        var matching = nodes.filter(function (node) { return matchState(node.state, criterion); });\n        return matching.length ? matching : null;\n    };\n    /**\n     * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n     *\n     * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n     * are the matching [[PathNode]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n     */\n    EventHook.prototype.matches = function (treeChanges) {\n        var mc = this.matchCriteria, _matchingNodes = EventHook._matchingNodes;\n        var matches = {\n            to: _matchingNodes([common_1.tail(treeChanges.to)], mc.to),\n            from: _matchingNodes([common_1.tail(treeChanges.from)], mc.from),\n            exiting: _matchingNodes(treeChanges.exiting, mc.exiting),\n            retained: _matchingNodes(treeChanges.retained, mc.retained),\n            entering: _matchingNodes(treeChanges.entering, mc.entering),\n        };\n        // Check if all the criteria matched the TreeChanges object\n        var allMatched = [\"to\", \"from\", \"exiting\", \"retained\", \"entering\"]\n            .map(function (prop) { return matches[prop]; })\n            .reduce(common_1.allTrueR, true);\n        return allMatched ? matches : null;\n    };\n    return EventHook;\n}());\nexports.EventHook = EventHook;\n/** @hidden Return a registration function of the requested type. */\nfunction makeHookRegistrationFn(hooks, name) {\n    return function (matchObject, callback, options) {\n        if (options === void 0) { options = {}; }\n        var eventHook = new EventHook(matchObject, callback, options);\n        hooks[name].push(eventHook);\n        return function deregisterEventHook() {\n            eventHook._deregistered = true;\n            common_1.removeFrom(hooks[name])(eventHook);\n        };\n    };\n}\n/**\n * Mixin class acts as a Transition Hook registry.\n *\n * Holds the registered [[HookFn]] objects.\n * Exposes functions to register new hooks.\n *\n * This is a Mixin class which can be applied to other objects.\n *\n * The hook registration functions are [[onBefore]], [[onStart]], [[onEnter]], [[onRetain]], [[onExit]], [[onFinish]], [[onSuccess]], [[onError]].\n *\n * This class is mixed into both the [[TransitionService]] and every [[Transition]] object.\n * Global hooks are added to the [[TransitionService]].\n * Since each [[Transition]] is itself a `HookRegistry`, hooks can also be added to individual Transitions\n * (note: the hook criteria still must match the Transition).\n */\nvar HookRegistry = (function () {\n    function HookRegistry() {\n        var _this = this;\n        this._transitionEvents = {\n            onBefore: [], onStart: [], onEnter: [], onRetain: [], onExit: [], onFinish: [], onSuccess: [], onError: []\n        };\n        this.getHooks = function (name) { return _this._transitionEvents[name]; };\n        /** @inheritdoc */\n        this.onBefore = makeHookRegistrationFn(this._transitionEvents, \"onBefore\");\n        /** @inheritdoc */\n        this.onStart = makeHookRegistrationFn(this._transitionEvents, \"onStart\");\n        /** @inheritdoc */\n        this.onEnter = makeHookRegistrationFn(this._transitionEvents, \"onEnter\");\n        /** @inheritdoc */\n        this.onRetain = makeHookRegistrationFn(this._transitionEvents, \"onRetain\");\n        /** @inheritdoc */\n        this.onExit = makeHookRegistrationFn(this._transitionEvents, \"onExit\");\n        /** @inheritdoc */\n        this.onFinish = makeHookRegistrationFn(this._transitionEvents, \"onFinish\");\n        /** @inheritdoc */\n        this.onSuccess = makeHookRegistrationFn(this._transitionEvents, \"onSuccess\");\n        /** @inheritdoc */\n        this.onError = makeHookRegistrationFn(this._transitionEvents, \"onError\");\n    }\n    HookRegistry.mixin = function (source, target) {\n        Object.keys(source._transitionEvents).concat([\"getHooks\"]).forEach(function (key) { return target[key] = source[key]; });\n    };\n    return HookRegistry;\n}());\nexports.HookRegistry = HookRegistry;\n//# sourceMappingURL=hookRegistry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/transition/hookRegistry.js\n// module id = 15\n// module chunks = 0 1","/** @internal @module transition */ /** for typedoc */\n\"use strict\";\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar transitionHook_1 = require(\"./transitionHook\");\nvar resolveContext_1 = require(\"../resolve/resolveContext\");\n/**\n * This class returns applicable TransitionHooks for a specific Transition instance.\n *\n * Hooks (IEventHook) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n * myTransition.onEnter(...).  The HookBuilder finds matching IEventHooks (where the match criteria is\n * determined by the type of hook)\n *\n * The HookBuilder also converts IEventHooks objects to TransitionHook objects, which are used to run a Transition.\n *\n * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n * in the Transition class, so we must also provide the Transition's _treeChanges)\n *\n */\nvar HookBuilder = (function () {\n    function HookBuilder($transitions, transition, baseHookOptions) {\n        var _this = this;\n        this.$transitions = $transitions;\n        this.transition = transition;\n        this.baseHookOptions = baseHookOptions;\n        this.getOnBeforeHooks = function () { return _this._buildNodeHooks(\"onBefore\", \"to\", tupleSort(), { async: false }); };\n        this.getOnStartHooks = function () { return _this._buildNodeHooks(\"onStart\", \"to\", tupleSort()); };\n        this.getOnExitHooks = function () { return _this._buildNodeHooks(\"onExit\", \"exiting\", tupleSort(true), { stateHook: true }); };\n        this.getOnRetainHooks = function () { return _this._buildNodeHooks(\"onRetain\", \"retained\", tupleSort(false), { stateHook: true }); };\n        this.getOnEnterHooks = function () { return _this._buildNodeHooks(\"onEnter\", \"entering\", tupleSort(false), { stateHook: true }); };\n        this.getOnFinishHooks = function () { return _this._buildNodeHooks(\"onFinish\", \"to\", tupleSort()); };\n        this.getOnSuccessHooks = function () { return _this._buildNodeHooks(\"onSuccess\", \"to\", tupleSort(), { async: false, rejectIfSuperseded: false }); };\n        this.getOnErrorHooks = function () { return _this._buildNodeHooks(\"onError\", \"to\", tupleSort(), { async: false, rejectIfSuperseded: false }); };\n        this.treeChanges = transition.treeChanges();\n        this.toState = common_1.tail(this.treeChanges.to).state;\n        this.fromState = common_1.tail(this.treeChanges.from).state;\n        this.transitionOptions = transition.options();\n    }\n    HookBuilder.prototype.asyncHooks = function () {\n        var onStartHooks = this.getOnStartHooks();\n        var onExitHooks = this.getOnExitHooks();\n        var onRetainHooks = this.getOnRetainHooks();\n        var onEnterHooks = this.getOnEnterHooks();\n        var onFinishHooks = this.getOnFinishHooks();\n        var asyncHooks = [onStartHooks, onExitHooks, onRetainHooks, onEnterHooks, onFinishHooks];\n        return asyncHooks.reduce(common_1.unnestR, []).filter(common_1.identity);\n    };\n    /**\n     * Returns an array of newly built TransitionHook objects.\n     *\n     * - Finds all IEventHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n     * - Finds [[PathNode]] (or `PathNode[]`) to use as the TransitionHook context(s)\n     * - For each of the [[PathNode]]s, creates a TransitionHook\n     *\n     * @param hookType the name of the hook registration function, e.g., 'onEnter', 'onFinish'.\n     * @param matchingNodesProp selects which [[PathNode]]s from the [[IMatchingNodes]] object to create hooks for.\n     * @param getLocals a function which accepts a [[PathNode]] and returns additional locals to provide to the hook as injectables\n     * @param sortHooksFn a function which compares two HookTuple and returns <1, 0, or >1\n     * @param options any specific Transition Hook Options\n     */\n    HookBuilder.prototype._buildNodeHooks = function (hookType, matchingNodesProp, sortHooksFn, options) {\n        var _this = this;\n        // Find all the matching registered hooks for a given hook type\n        var matchingHooks = this._matchingHooks(hookType, this.treeChanges);\n        if (!matchingHooks)\n            return [];\n        var makeTransitionHooks = function (hook) {\n            // Fetch the Nodes that caused this hook to match.\n            var matches = hook.matches(_this.treeChanges);\n            // Select the PathNode[] that will be used as TransitionHook context objects\n            var matchingNodes = matches[matchingNodesProp];\n            // When invoking 'exiting' hooks, give them the \"from path\" for resolve data.\n            // Everything else gets the \"to path\"\n            var resolvePath = matchingNodesProp === 'exiting' ? _this.treeChanges.from : _this.treeChanges.to;\n            var resolveContext = new resolveContext_1.ResolveContext(resolvePath);\n            // Return an array of HookTuples\n            return matchingNodes.map(function (node) {\n                var _options = common_1.extend({ bind: hook.bind, traceData: { hookType: hookType, context: node } }, _this.baseHookOptions, options);\n                var state = _options.stateHook ? node.state : null;\n                var transitionHook = new transitionHook_1.TransitionHook(_this.transition, state, hook, _options);\n                return { hook: hook, node: node, transitionHook: transitionHook };\n            });\n        };\n        return matchingHooks.map(makeTransitionHooks)\n            .reduce(common_1.unnestR, [])\n            .sort(sortHooksFn)\n            .map(function (tuple) { return tuple.transitionHook; });\n    };\n    /**\n     * Finds all IEventHooks from:\n     * - The Transition object instance hook registry\n     * - The TransitionService ($transitions) global hook registry\n     *\n     * which matched:\n     * - the eventType\n     * - the matchCriteria (to, from, exiting, retained, entering)\n     *\n     * @returns an array of matched [[IEventHook]]s\n     */\n    HookBuilder.prototype._matchingHooks = function (hookName, treeChanges) {\n        return [this.transition, this.$transitions] // Instance and Global hook registries\n            .map(function (reg) { return reg.getHooks(hookName); }) // Get named hooks from registries\n            .filter(common_1.assertPredicate(predicates_1.isArray, \"broken event named: \" + hookName)) // Sanity check\n            .reduce(common_1.unnestR, []) // Un-nest IEventHook[][] to IEventHook[] array\n            .filter(function (hook) { return hook.matches(treeChanges); }); // Only those satisfying matchCriteria\n    };\n    return HookBuilder;\n}());\nexports.HookBuilder = HookBuilder;\n/**\n * A factory for a sort function for HookTuples.\n *\n * The sort function first compares the PathNode depth (how deep in the state tree a node is), then compares\n * the EventHook priority.\n *\n * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n * @returns a tuple sort function\n */\nfunction tupleSort(reverseDepthSort) {\n    if (reverseDepthSort === void 0) { reverseDepthSort = false; }\n    return function nodeDepthThenPriority(l, r) {\n        var factor = reverseDepthSort ? -1 : 1;\n        var depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n        return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n    };\n}\n//# sourceMappingURL=hookBuilder.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/transition/hookBuilder.js\n// module id = 16\n// module chunks = 0 1","\"use strict\";\n/** @module resolve */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar trace_1 = require(\"../common/trace\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar interface_1 = require(\"./interface\");\nvar resolvable_1 = require(\"./resolvable\");\nvar pathFactory_1 = require(\"../path/pathFactory\");\nvar strings_1 = require(\"../common/strings\");\nvar when = interface_1.resolvePolicies.when;\nvar ALL_WHENS = [when.EAGER, when.LAZY];\nvar EAGER_WHENS = [when.EAGER];\nexports.NATIVE_INJECTOR_TOKEN = \"Native Injector\";\n/**\n * Encapsulates Depenency Injection for a path of nodes\n *\n * UI-Router states are organized as a tree.\n * A nested state has a path of ancestors to the root of the tree.\n * When a state is being activated, each element in the path is wrapped as a [[PathNode]].\n * A `PathNode` is a stateful object that holds things like parameters and resolvables for the state being activated.\n *\n * The ResolveContext closes over the [[PathNode]]s, and provides DI for the last node in the path.\n */\nvar ResolveContext = (function () {\n    function ResolveContext(_path) {\n        this._path = _path;\n    }\n    /** Gets all the tokens found in the resolve context, de-duplicated */\n    ResolveContext.prototype.getTokens = function () {\n        return this._path.reduce(function (acc, node) { return acc.concat(node.resolvables.map(function (r) { return r.token; })); }, []).reduce(common_1.uniqR, []);\n    };\n    /**\n     * Gets the Resolvable that matches the token\n     *\n     * Gets the last Resolvable that matches the token in this context, or undefined.\n     * Throws an error if it doesn't exist in the ResolveContext\n     */\n    ResolveContext.prototype.getResolvable = function (token) {\n        var matching = this._path.map(function (node) { return node.resolvables; })\n            .reduce(common_1.unnestR, [])\n            .filter(function (r) { return r.token === token; });\n        return common_1.tail(matching);\n    };\n    /**\n     * Returns a ResolveContext that includes a portion of this one\n     *\n     * Given a state, this method creates a new ResolveContext from this one.\n     * The new context starts at the first node (root) and stops at the node for the `state` parameter.\n     *\n     * #### Why\n     *\n     * When a transition is created, the nodes in the \"To Path\" are injected from a ResolveContext.\n     * A ResolveContext closes over a path of [[PathNode]]s and processes the resolvables.\n     * The \"To State\" can inject values from its own resolvables, as well as those from all its ancestor state's (node's).\n     * This method is used to create a narrower context when injecting ancestor nodes.\n     *\n     * @example\n     * `let ABCD = new ResolveContext([A, B, C, D]);`\n     *\n     * Given a path `[A, B, C, D]`, where `A`, `B`, `C` and `D` are nodes for states `a`, `b`, `c`, `d`:\n     * When injecting `D`, `D` should have access to all resolvables from `A`, `B`, `C`, `D`.\n     * However, `B` should only be able to access resolvables from `A`, `B`.\n     *\n     * When resolving for the `B` node, first take the full \"To Path\" Context `[A,B,C,D]` and limit to the subpath `[A,B]`.\n     * `let AB = ABCD.subcontext(a)`\n     */\n    ResolveContext.prototype.subContext = function (state) {\n        return new ResolveContext(pathFactory_1.PathFactory.subPath(this._path, function (node) { return node.state === state; }));\n    };\n    /**\n     * Adds Resolvables to the node that matches the state\n     *\n     * This adds a [[Resolvable]] (generally one created on the fly; not declared on a [[StateDeclaration.resolve]] block).\n     * The resolvable is added to the node matching the `state` parameter.\n     *\n     * These new resolvables are not automatically fetched.\n     * The calling code should either fetch them, fetch something that depends on them,\n     * or rely on [[resolvePath]] being called when some state is being entered.\n     *\n     * Note: each resolvable's [[ResolvePolicy]] is merged with the state's policy, and the global default.\n     *\n     * @param newResolvables the new Resolvables\n     * @param state Used to find the node to put the resolvable on\n     */\n    ResolveContext.prototype.addResolvables = function (newResolvables, state) {\n        var node = common_1.find(this._path, hof_1.propEq('state', state));\n        var keys = newResolvables.map(function (r) { return r.token; });\n        node.resolvables = node.resolvables.filter(function (r) { return keys.indexOf(r.token) === -1; }).concat(newResolvables);\n    };\n    /**\n     * Returns a promise for an array of resolved path Element promises\n     *\n     * @param when\n     * @param trans\n     * @returns {Promise<any>|any}\n     */\n    ResolveContext.prototype.resolvePath = function (when, trans) {\n        var _this = this;\n        if (when === void 0) { when = \"LAZY\"; }\n        // This option determines which 'when' policy Resolvables we are about to fetch.\n        var whenOption = common_1.inArray(ALL_WHENS, when) ? when : \"LAZY\";\n        // If the caller specified EAGER, only the EAGER Resolvables are fetched.\n        // if the caller specified LAZY, both EAGER and LAZY Resolvables are fetched.`\n        var matchedWhens = whenOption === interface_1.resolvePolicies.when.EAGER ? EAGER_WHENS : ALL_WHENS;\n        // get the subpath to the state argument, if provided\n        trace_1.trace.traceResolvePath(this._path, when, trans);\n        var promises = this._path.reduce(function (acc, node) {\n            var matchesRequestedPolicy = function (resolvable) {\n                return common_1.inArray(matchedWhens, resolvable.getPolicy(node.state).when);\n            };\n            var nodeResolvables = node.resolvables.filter(matchesRequestedPolicy);\n            var subContext = _this.subContext(node.state);\n            // For the matching Resolvables, start their async fetch process.\n            var getResult = function (r) { return r.get(subContext, trans)\n                .then(function (value) { return ({ token: r.token, value: value }); }); };\n            return acc.concat(nodeResolvables.map(getResult));\n        }, []);\n        return coreservices_1.services.$q.all(promises);\n    };\n    ResolveContext.prototype.injector = function () {\n        return this._injector || (this._injector = new UIInjectorImpl(this));\n    };\n    ResolveContext.prototype.findNode = function (resolvable) {\n        return common_1.find(this._path, function (node) { return common_1.inArray(node.resolvables, resolvable); });\n    };\n    /**\n     * Gets the async dependencies of a Resolvable\n     *\n     * Given a Resolvable, returns its dependencies as a Resolvable[]\n     */\n    ResolveContext.prototype.getDependencies = function (resolvable) {\n        var _this = this;\n        var node = this.findNode(resolvable);\n        // Find which other resolvables are \"visible\" to the `resolvable` argument\n        // subpath stopping at resolvable's node, or the whole path (if the resolvable isn't in the path)\n        var subPath = pathFactory_1.PathFactory.subPath(this._path, function (x) { return x === node; }) || this._path;\n        var availableResolvables = subPath\n            .reduce(function (acc, node) { return acc.concat(node.resolvables); }, []) //all of subpath's resolvables\n            .filter(function (res) { return res !== resolvable; }); // filter out the `resolvable` argument\n        var getDependency = function (token) {\n            var matching = availableResolvables.filter(function (r) { return r.token === token; });\n            if (matching.length)\n                return common_1.tail(matching);\n            var fromInjector = _this.injector().getNative(token);\n            if (!fromInjector) {\n                throw new Error(\"Could not find Dependency Injection token: \" + strings_1.stringify(token));\n            }\n            return new resolvable_1.Resolvable(token, function () { return fromInjector; }, [], fromInjector);\n        };\n        return resolvable.deps.map(getDependency);\n    };\n    return ResolveContext;\n}());\nexports.ResolveContext = ResolveContext;\nvar UIInjectorImpl = (function () {\n    function UIInjectorImpl(context) {\n        this.context = context;\n        this.native = this.get(exports.NATIVE_INJECTOR_TOKEN) || coreservices_1.services.$injector;\n    }\n    UIInjectorImpl.prototype.get = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable) {\n            if (!resolvable.resolved) {\n                throw new Error(\"Resolvable async .get() not complete:\" + strings_1.stringify(resolvable.token));\n            }\n            return resolvable.data;\n        }\n        return this.native && this.native.get(token);\n    };\n    UIInjectorImpl.prototype.getAsync = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable)\n            return resolvable.get(this.context);\n        return coreservices_1.services.$q.when(this.native.get(token));\n    };\n    UIInjectorImpl.prototype.getNative = function (token) {\n        return this.native.get(token);\n    };\n    return UIInjectorImpl;\n}());\n//# sourceMappingURL=resolveContext.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/resolve/resolveContext.js\n// module id = 17\n// module chunks = 0 1","\"use strict\";\n/** @internalapi */\nexports.resolvePolicies = {\n    when: {\n        LAZY: \"LAZY\",\n        EAGER: \"EAGER\"\n    },\n    async: {\n        WAIT: \"WAIT\",\n        NOWAIT: \"NOWAIT\",\n        RXWAIT: \"RXWAIT\"\n    }\n};\n//# sourceMappingURL=interface.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/resolve/interface.js\n// module id = 18\n// module chunks = 0 1","\"use strict\";\n/** @module resolve */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar trace_1 = require(\"../common/trace\");\nvar strings_1 = require(\"../common/strings\");\nvar predicates_1 = require(\"../common/predicates\");\n// TODO: explicitly make this user configurable\nexports.defaultResolvePolicy = {\n    when: \"LAZY\",\n    async: \"WAIT\"\n};\n/**\n * The basic building block for the resolve system.\n *\n * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n * and the unwrapped-when-complete (.data) result of the resolveFn.\n *\n * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n * resolveFn) and returns the resulting promise.\n *\n * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n * parameter to those fns.\n */\nvar Resolvable = (function () {\n    function Resolvable(arg1, resolveFn, deps, policy, data) {\n        this.resolved = false;\n        this.promise = undefined;\n        if (arg1 instanceof Resolvable) {\n            common_1.extend(this, arg1);\n        }\n        else if (predicates_1.isFunction(resolveFn)) {\n            if (arg1 == null || arg1 == undefined)\n                throw new Error(\"new Resolvable(): token argument is required\");\n            if (!predicates_1.isFunction(resolveFn))\n                throw new Error(\"new Resolvable(): resolveFn argument must be a function\");\n            this.token = arg1;\n            this.policy = policy;\n            this.resolveFn = resolveFn;\n            this.deps = deps || [];\n            this.data = data;\n            this.resolved = data !== undefined;\n            this.promise = this.resolved ? coreservices_1.services.$q.when(this.data) : undefined;\n        }\n        else if (predicates_1.isObject(arg1) && arg1.token && predicates_1.isFunction(arg1.resolveFn)) {\n            var literal = arg1;\n            return new Resolvable(literal.token, literal.resolveFn, literal.deps, literal.policy, literal.data);\n        }\n    }\n    Resolvable.prototype.getPolicy = function (state) {\n        var thisPolicy = this.policy || {};\n        var statePolicy = state && state.resolvePolicy || {};\n        return {\n            when: thisPolicy.when || statePolicy.when || exports.defaultResolvePolicy.when,\n            async: thisPolicy.async || statePolicy.async || exports.defaultResolvePolicy.async,\n        };\n    };\n    /**\n     * Asynchronously resolve this Resolvable's data\n     *\n     * Given a ResolveContext that this Resolvable is found in:\n     * Wait for this Resolvable's dependencies, then invoke this Resolvable's function\n     * and update the Resolvable's state\n     */\n    Resolvable.prototype.resolve = function (resolveContext, trans) {\n        var _this = this;\n        var $q = coreservices_1.services.$q;\n        // Gets all dependencies from ResolveContext and wait for them to be resolved\n        var getResolvableDependencies = function () {\n            return $q.all(resolveContext.getDependencies(_this).map(function (r) {\n                return r.get(resolveContext, trans);\n            }));\n        };\n        // Invokes the resolve function passing the resolved dependencies as arguments\n        var invokeResolveFn = function (resolvedDeps) {\n            return _this.resolveFn.apply(null, resolvedDeps);\n        };\n        /**\n         * For RXWAIT policy:\n         *\n         * Given an observable returned from a resolve function:\n         * - enables .cache() mode (this allows multicast subscribers)\n         * - then calls toPromise() (this triggers subscribe() and thus fetches)\n         * - Waits for the promise, then return the cached observable (not the first emitted value).\n         */\n        var waitForRx = function (observable$) {\n            var cached = observable$.cache(1);\n            return cached.take(1).toPromise().then(function () { return cached; });\n        };\n        // If the resolve policy is RXWAIT, wait for the observable to emit something. otherwise pass through.\n        var node = resolveContext.findNode(this);\n        var state = node && node.state;\n        var maybeWaitForRx = this.getPolicy(state).async === \"RXWAIT\" ? waitForRx : common_1.identity;\n        // After the final value has been resolved, update the state of the Resolvable\n        var applyResolvedValue = function (resolvedValue) {\n            _this.data = resolvedValue;\n            _this.resolved = true;\n            trace_1.trace.traceResolvableResolved(_this, trans);\n            return _this.data;\n        };\n        // Sets the promise property first, then getsResolvableDependencies in the context of the promise chain. Always waits one tick.\n        return this.promise = $q.when()\n            .then(getResolvableDependencies)\n            .then(invokeResolveFn)\n            .then(maybeWaitForRx)\n            .then(applyResolvedValue);\n    };\n    /**\n     * Gets a promise for this Resolvable's data.\n     *\n     * Fetches the data and returns a promise.\n     * Returns the existing promise if it has already been fetched once.\n     */\n    Resolvable.prototype.get = function (resolveContext, trans) {\n        return this.promise || this.resolve(resolveContext, trans);\n    };\n    Resolvable.prototype.toString = function () {\n        return \"Resolvable(token: \" + strings_1.stringify(this.token) + \", requires: [\" + this.deps.map(strings_1.stringify) + \"])\";\n    };\n    Resolvable.prototype.clone = function () {\n        return new Resolvable(this);\n    };\n    Resolvable.fromData = function (token, data) {\n        return new Resolvable(token, function () { return data; }, null, null, data);\n    };\n    return Resolvable;\n}());\nexports.Resolvable = Resolvable;\n//# sourceMappingURL=resolvable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/resolve/resolvable.js\n// module id = 19\n// module chunks = 0 1","/** @module path */ /** for typedoc */\n\"use strict\";\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar targetState_1 = require(\"../state/targetState\");\nvar node_1 = require(\"../path/node\");\n/**\n * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n */\nvar PathFactory = (function () {\n    function PathFactory() {\n    }\n    /** Given a PathNode[], create an TargetState */\n    PathFactory.makeTargetState = function (path) {\n        var state = common_1.tail(path).state;\n        return new targetState_1.TargetState(state, state, path.map(hof_1.prop(\"paramValues\")).reduce(common_1.mergeR, {}));\n    };\n    PathFactory.buildPath = function (targetState) {\n        var toParams = targetState.params();\n        return targetState.$state().path.map(function (state) { return new node_1.PathNode(state).applyRawParams(toParams); });\n    };\n    /** Given a fromPath: PathNode[] and a TargetState, builds a toPath: PathNode[] */\n    PathFactory.buildToPath = function (fromPath, targetState) {\n        var toPath = PathFactory.buildPath(targetState);\n        if (targetState.options().inherit) {\n            return PathFactory.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n        }\n        return toPath;\n    };\n    /**\n     * Creates ViewConfig objects and adds to nodes.\n     *\n     * On each [[PathNode]], creates ViewConfig objects from the views: property of the node's state\n     */\n    PathFactory.applyViewConfigs = function ($view, path, states) {\n        // Only apply the viewConfigs to the nodes for the given states\n        path.filter(function (node) { return common_1.inArray(states, node.state); }).forEach(function (node) {\n            var viewDecls = common_1.values(node.state.views || {});\n            var subPath = PathFactory.subPath(path, function (n) { return n === node; });\n            var viewConfigs = viewDecls.map(function (view) { return $view.createViewConfig(subPath, view); });\n            node.views = viewConfigs.reduce(common_1.unnestR, []);\n        });\n    };\n    /**\n     * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n     *\n     * For a parameter in a node to be inherited from the from path:\n     * - The toPath's node must have a matching node in the fromPath (by state).\n     * - The parameter name must not be found in the toKeys parameter array.\n     *\n     * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n     * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n     * it is not inherited from the fromPath.\n     */\n    PathFactory.inheritParams = function (fromPath, toPath, toKeys) {\n        if (toKeys === void 0) { toKeys = []; }\n        function nodeParamVals(path, state) {\n            var node = common_1.find(path, hof_1.propEq('state', state));\n            return common_1.extend({}, node && node.paramValues);\n        }\n        /**\n         * Given an [[PathNode]] \"toNode\", return a new [[PathNode]] with param values inherited from the\n         * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n         */\n        function makeInheritedParamsNode(toNode) {\n            // All param values for the node (may include default key/vals, when key was not found in toParams)\n            var toParamVals = common_1.extend({}, toNode && toNode.paramValues);\n            // limited to only those keys found in toParams\n            var incomingParamVals = common_1.pick(toParamVals, toKeys);\n            toParamVals = common_1.omit(toParamVals, toKeys);\n            var fromParamVals = nodeParamVals(fromPath, toNode.state) || {};\n            // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n            var ownParamVals = common_1.extend(toParamVals, fromParamVals, incomingParamVals);\n            return new node_1.PathNode(toNode.state).applyRawParams(ownParamVals);\n        }\n        // The param keys specified by the incoming toParams\n        return toPath.map(makeInheritedParamsNode);\n    };\n    /**\n     * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n     */\n    PathFactory.treeChanges = function (fromPath, toPath, reloadState) {\n        var keep = 0, max = Math.min(fromPath.length, toPath.length);\n        var staticParams = function (state) {\n            return state.parameters({ inherit: false }).filter(hof_1.not(hof_1.prop('dynamic'))).map(hof_1.prop('id'));\n        };\n        var nodesMatch = function (node1, node2) {\n            return node1.equals(node2, staticParams(node1.state));\n        };\n        while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n            keep++;\n        }\n        /** Given a retained node, return a new node which uses the to node's param values */\n        function applyToParams(retainedNode, idx) {\n            var cloned = node_1.PathNode.clone(retainedNode);\n            cloned.paramValues = toPath[idx].paramValues;\n            return cloned;\n        }\n        var from, retained, exiting, entering, to;\n        from = fromPath;\n        retained = from.slice(0, keep);\n        exiting = from.slice(keep);\n        // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n        var retainedWithToParams = retained.map(applyToParams);\n        entering = toPath.slice(keep);\n        to = (retainedWithToParams).concat(entering);\n        return { from: from, to: to, retained: retained, exiting: exiting, entering: entering };\n    };\n    /**\n     * Return a subpath of a path, which stops at the first matching node\n     *\n     * Given an array of nodes, returns a subset of the array starting from the first node,\n     * stopping when the first node matches the predicate.\n     *\n     * @param path a path of [[PathNode]]s\n     * @param predicate a [[Predicate]] fn that matches [[PathNode]]s\n     * @returns a subpath up to the matching node, or undefined if no match is found\n     */\n    PathFactory.subPath = function (path, predicate) {\n        var node = common_1.find(path, predicate);\n        var elementIdx = path.indexOf(node);\n        return elementIdx === -1 ? undefined : path.slice(0, elementIdx + 1);\n    };\n    /** Gets the raw parameter values from a path */\n    PathFactory.paramValues = function (path) { return path.reduce(function (acc, node) { return common_1.extend(acc, node.paramValues); }, {}); };\n    return PathFactory;\n}());\nexports.PathFactory = PathFactory;\n//# sourceMappingURL=pathFactory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/path/pathFactory.js\n// module id = 20\n// module chunks = 0 1","\"use strict\";\n/** @module path */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar param_1 = require(\"../params/param\");\n/**\n * A node in a [[TreeChanges]] path\n *\n * For a [[TreeChanges]] path, this class holds the stateful information for a single node in the path.\n * Each PathNode corresponds to a state being entered, exited, or retained.\n * The stateful information includes parameter values and resolve data.\n */\nvar PathNode = (function () {\n    function PathNode(stateOrPath) {\n        if (stateOrPath instanceof PathNode) {\n            var node = stateOrPath;\n            this.state = node.state;\n            this.paramSchema = node.paramSchema.slice();\n            this.paramValues = common_1.extend({}, node.paramValues);\n            this.resolvables = node.resolvables.slice();\n            this.views = node.views && node.views.slice();\n        }\n        else {\n            var state = stateOrPath;\n            this.state = state;\n            this.paramSchema = state.parameters({ inherit: false });\n            this.paramValues = {};\n            this.resolvables = state.resolvables.map(function (res) { return res.clone(); });\n        }\n    }\n    /** Sets [[paramValues]] for the node, from the values of an object hash */\n    PathNode.prototype.applyRawParams = function (params) {\n        var getParamVal = function (paramDef) { return [paramDef.id, paramDef.value(params[paramDef.id])]; };\n        this.paramValues = this.paramSchema.reduce(function (memo, pDef) { return common_1.applyPairs(memo, getParamVal(pDef)); }, {});\n        return this;\n    };\n    /** Gets a specific [[Param]] metadata that belongs to the node */\n    PathNode.prototype.parameter = function (name) {\n        return common_1.find(this.paramSchema, hof_1.propEq(\"id\", name));\n    };\n    /**\n     * @returns true if the state and parameter values for another PathNode are\n     * equal to the state and param values for this PathNode\n     */\n    PathNode.prototype.equals = function (node, keys) {\n        var _this = this;\n        if (keys === void 0) { keys = this.paramSchema.map(function (p) { return p.id; }); }\n        var paramValsEq = function (key) {\n            return _this.parameter(key).type.equals(_this.paramValues[key], node.paramValues[key]);\n        };\n        return this.state === node.state && keys.map(paramValsEq).reduce(common_1.allTrueR, true);\n    };\n    /** Returns a clone of the PathNode */\n    PathNode.clone = function (node) {\n        return new PathNode(node);\n    };\n    /**\n     * Returns a new path which is a subpath of the first path which matched the second path.\n     *\n     * The new path starts from root and contains any nodes that match the nodes in the second path.\n     * Nodes are compared using their state property and parameter values.\n     *\n     * @param pathA the first path\n     * @param pathB the second path\n     * @param ignoreDynamicParams don't compare dynamic parameter values\n     */\n    PathNode.matching = function (pathA, pathB, ignoreDynamicParams) {\n        if (ignoreDynamicParams === void 0) { ignoreDynamicParams = true; }\n        var matching = [];\n        for (var i = 0; i < pathA.length && i < pathB.length; i++) {\n            var a = pathA[i], b = pathB[i];\n            if (a.state !== b.state)\n                break;\n            var changedParams = param_1.Param.changed(a.paramSchema, a.paramValues, b.paramValues)\n                .filter(function (param) { return !(ignoreDynamicParams && param.dynamic); });\n            if (changedParams.length)\n                break;\n            matching.push(a);\n        }\n        return matching;\n    };\n    return PathNode;\n}());\nexports.PathNode = PathNode;\n//# sourceMappingURL=node.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/path/node.js\n// module id = 21\n// module chunks = 0 1","\"use strict\";\n/** @module params */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar predicates_1 = require(\"../common/predicates\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar urlMatcherConfig_1 = require(\"../url/urlMatcherConfig\");\nvar type_1 = require(\"./type\");\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar isShorthand = function (cfg) {\n    return [\"value\", \"type\", \"squash\", \"array\", \"dynamic\"].filter(hasOwn.bind(cfg || {})).length === 0;\n};\n(function (DefType) {\n    DefType[DefType[\"PATH\"] = 0] = \"PATH\";\n    DefType[DefType[\"SEARCH\"] = 1] = \"SEARCH\";\n    DefType[DefType[\"CONFIG\"] = 2] = \"CONFIG\";\n})(exports.DefType || (exports.DefType = {}));\nvar DefType = exports.DefType;\nfunction unwrapShorthand(cfg) {\n    cfg = isShorthand(cfg) && { value: cfg } || cfg;\n    return common_1.extend(cfg, {\n        $$fn: predicates_1.isInjectable(cfg.value) ? cfg.value : function () { return cfg.value; }\n    });\n}\nfunction getType(cfg, urlType, location, id, paramTypes) {\n    if (cfg.type && urlType && urlType.name !== 'string')\n        throw new Error(\"Param '\" + id + \"' has two type configurations.\");\n    if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type))\n        return paramTypes.type(cfg.type);\n    if (urlType)\n        return urlType;\n    if (!cfg.type)\n        return (location === DefType.CONFIG ? paramTypes.type(\"any\") : paramTypes.type(\"string\"));\n    return cfg.type instanceof type_1.ParamType ? cfg.type : paramTypes.type(cfg.type);\n}\n/**\n * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n */\nfunction getSquashPolicy(config, isOptional) {\n    var squash = config.squash;\n    if (!isOptional || squash === false)\n        return false;\n    if (!predicates_1.isDefined(squash) || squash == null)\n        return urlMatcherConfig_1.matcherConfig.defaultSquashPolicy();\n    if (squash === true || predicates_1.isString(squash))\n        return squash;\n    throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n}\nfunction getReplace(config, arrayMode, isOptional, squash) {\n    var replace, configuredKeys, defaultPolicy = [\n        { from: \"\", to: (isOptional || arrayMode ? undefined : \"\") },\n        { from: null, to: (isOptional || arrayMode ? undefined : \"\") }\n    ];\n    replace = predicates_1.isArray(config.replace) ? config.replace : [];\n    if (predicates_1.isString(squash))\n        replace.push({ from: squash, to: undefined });\n    configuredKeys = common_1.map(replace, hof_1.prop(\"from\"));\n    return common_1.filter(defaultPolicy, function (item) { return configuredKeys.indexOf(item.from) === -1; }).concat(replace);\n}\nvar Param = (function () {\n    function Param(id, type, config, location, paramTypes) {\n        config = unwrapShorthand(config);\n        type = getType(config, type, location, id, paramTypes);\n        var arrayMode = getArrayMode();\n        type = arrayMode ? type.$asArray(arrayMode, location === DefType.SEARCH) : type;\n        var isOptional = config.value !== undefined;\n        var dynamic = predicates_1.isDefined(config.dynamic) ? !!config.dynamic : !!type.dynamic;\n        var squash = getSquashPolicy(config, isOptional);\n        var replace = getReplace(config, arrayMode, isOptional, squash);\n        // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n        function getArrayMode() {\n            var arrayDefaults = { array: (location === DefType.SEARCH ? \"auto\" : false) };\n            var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n            return common_1.extend(arrayDefaults, arrayParamNomenclature, config).array;\n        }\n        common_1.extend(this, { id: id, type: type, location: location, squash: squash, replace: replace, isOptional: isOptional, dynamic: dynamic, config: config, array: arrayMode });\n    }\n    Param.prototype.isDefaultValue = function (value) {\n        return this.isOptional && this.type.equals(this.value(), value);\n    };\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    Param.prototype.value = function (value) {\n        var _this = this;\n        /**\n         * [Internal] Get the default value of a parameter, which may be an injectable function.\n         */\n        var $$getDefaultValue = function () {\n            if (!coreservices_1.services.$injector)\n                throw new Error(\"Injectable functions cannot be called at configuration time\");\n            var defaultValue = coreservices_1.services.$injector.invoke(_this.config.$$fn);\n            if (defaultValue !== null && defaultValue !== undefined && !_this.type.is(defaultValue))\n                throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + _this.id + \"' is not an instance of ParamType (\" + _this.type.name + \")\");\n            return defaultValue;\n        };\n        var $replace = function (val) {\n            var replacement = common_1.map(common_1.filter(_this.replace, hof_1.propEq('from', val)), hof_1.prop(\"to\"));\n            return replacement.length ? replacement[0] : val;\n        };\n        value = $replace(value);\n        return !predicates_1.isDefined(value) ? $$getDefaultValue() : this.type.$normalize(value);\n    };\n    Param.prototype.isSearch = function () {\n        return this.location === DefType.SEARCH;\n    };\n    Param.prototype.validates = function (value) {\n        // There was no parameter value, but the param is optional\n        if ((!predicates_1.isDefined(value) || value === null) && this.isOptional)\n            return true;\n        // The value was not of the correct ParamType, and could not be decoded to the correct ParamType\n        var normalized = this.type.$normalize(value);\n        if (!this.type.is(normalized))\n            return false;\n        // The value was of the correct type, but when encoded, did not match the ParamType's regexp\n        var encoded = this.type.encode(normalized);\n        return !(predicates_1.isString(encoded) && !this.type.pattern.exec(encoded));\n    };\n    Param.prototype.toString = function () {\n        return \"{Param:\" + this.id + \" \" + this.type + \" squash: '\" + this.squash + \"' optional: \" + this.isOptional + \"}\";\n    };\n    /** Creates a new [[Param]] from a CONFIG block */\n    Param.fromConfig = function (id, type, config, paramTypes) {\n        return new Param(id, type, config, DefType.CONFIG, paramTypes);\n    };\n    /** Creates a new [[Param]] from a url PATH */\n    Param.fromPath = function (id, type, config, paramTypes) {\n        return new Param(id, type, config, DefType.PATH, paramTypes);\n    };\n    /** Creates a new [[Param]] from a url SEARCH */\n    Param.fromSearch = function (id, type, config, paramTypes) {\n        return new Param(id, type, config, DefType.SEARCH, paramTypes);\n    };\n    Param.values = function (params, values) {\n        if (values === void 0) { values = {}; }\n        return params.map(function (param) { return [param.id, param.value(values[param.id])]; }).reduce(common_1.applyPairs, {});\n    };\n    /**\n     * Finds [[Param]] objects which have different param values\n     *\n     * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n     *\n     * @param params: The list of Param objects to filter\n     * @param values1: The first set of parameter values\n     * @param values2: the second set of parameter values\n     *\n     * @returns any Param objects whose values were different between values1 and values2\n     */\n    Param.changed = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return params.filter(function (param) { return !param.type.equals(values1[param.id], values2[param.id]); });\n    };\n    /**\n     * Checks if two param value objects are equal (for a set of [[Param]] objects)\n     *\n     * @param params The list of [[Param]] objects to check\n     * @param values1 The first set of param values\n     * @param values2 The second set of param values\n     *\n     * @returns true if the param values in values1 and values2 are equal\n     */\n    Param.equals = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return Param.changed(params, values1, values2).length === 0;\n    };\n    /** Returns true if a the parameter values are valid, according to the Param definitions */\n    Param.validates = function (params, values) {\n        if (values === void 0) { values = {}; }\n        return params.map(function (param) { return param.validates(values[param.id]); }).reduce(common_1.allTrueR, true);\n    };\n    return Param;\n}());\nexports.Param = Param;\n//# sourceMappingURL=param.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/params/param.js\n// module id = 22\n// module chunks = 0 1","\"use strict\";\n/** @module url */ /** for typedoc */\nvar predicates_1 = require(\"../common/predicates\");\nvar MatcherConfig = (function () {\n    function MatcherConfig() {\n        this._isCaseInsensitive = false;\n        this._isStrictMode = true;\n        this._defaultSquashPolicy = false;\n    }\n    MatcherConfig.prototype.caseInsensitive = function (value) {\n        return this._isCaseInsensitive = predicates_1.isDefined(value) ? value : this._isCaseInsensitive;\n    };\n    MatcherConfig.prototype.strictMode = function (value) {\n        return this._isStrictMode = predicates_1.isDefined(value) ? value : this._isStrictMode;\n    };\n    MatcherConfig.prototype.defaultSquashPolicy = function (value) {\n        if (predicates_1.isDefined(value) && value !== true && value !== false && !predicates_1.isString(value))\n            throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n        return this._defaultSquashPolicy = predicates_1.isDefined(value) ? value : this._defaultSquashPolicy;\n    };\n    return MatcherConfig;\n}());\nexports.MatcherConfig = MatcherConfig;\n// TODO: Do not export global instance; create one in UIRouter() constructor\nexports.matcherConfig = new MatcherConfig();\n//# sourceMappingURL=urlMatcherConfig.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/url/urlMatcherConfig.js\n// module id = 23\n// module chunks = 0 1","\"use strict\";\n/** @module params */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\n/**\n * Wraps up a `ParamType` object to handle array values.\n */\nfunction ArrayType(type, mode) {\n    var _this = this;\n    // Wrap non-array value as array\n    function arrayWrap(val) {\n        return predicates_1.isArray(val) ? val : (predicates_1.isDefined(val) ? [val] : []);\n    }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n        switch (val.length) {\n            case 0: return undefined;\n            case 1: return mode === \"auto\" ? val[0] : val;\n            default: return val;\n        }\n    }\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n        return function handleArray(val) {\n            if (predicates_1.isArray(val) && val.length === 0)\n                return val;\n            var arr = arrayWrap(val);\n            var result = common_1.map(arr, callback);\n            return (allTruthyMode === true) ? common_1.filter(result, function (x) { return !x; }).length === 0 : arrayUnwrap(result);\n        };\n    }\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n        return function handleArray(val1, val2) {\n            var left = arrayWrap(val1), right = arrayWrap(val2);\n            if (left.length !== right.length)\n                return false;\n            for (var i = 0; i < left.length; i++) {\n                if (!callback(left[i], right[i]))\n                    return false;\n            }\n            return true;\n        };\n    }\n    ['encode', 'decode', 'equals', '$normalize'].forEach(function (name) {\n        var paramTypeFn = type[name].bind(type);\n        var wrapperFn = name === 'equals' ? arrayEqualsHandler : arrayHandler;\n        _this[name] = wrapperFn(paramTypeFn);\n    });\n    common_1.extend(this, {\n        dynamic: type.dynamic,\n        name: type.name,\n        pattern: type.pattern,\n        is: arrayHandler(type.is.bind(type), true),\n        $arrayMode: mode\n    });\n}\n/**\n * A class that implements Custom Parameter Type functionality.\n *\n * This class has naive implementations for all the [[ParamTypeDefinition]] methods.\n *\n * An instance of this class is created when a custom [[ParamTypeDefinition]] object is registered with the [[UrlMatcherFactory.type]].\n *\n * Used by [[UrlMatcher]] when matching or formatting URLs, or comparing and validating parameter values.\n *\n * @example\n * ```\n *\n * {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n * ```\n */\nvar ParamType = (function () {\n    /**\n     * @param def  A configuration object which contains the custom type definition.  The object's\n     *        properties will override the default methods and/or pattern in `ParamType`'s public interface.\n     * @returns a new ParamType object\n     */\n    function ParamType(def) {\n        this.pattern = /.*/;\n        common_1.extend(this, def);\n    }\n    // consider these four methods to be \"abstract methods\" that should be overridden\n    /** @inheritdoc */\n    ParamType.prototype.is = function (val, key) { return true; };\n    /** @inheritdoc */\n    ParamType.prototype.encode = function (val, key) { return val; };\n    /** @inheritdoc */\n    ParamType.prototype.decode = function (val, key) { return val; };\n    /** @inheritdoc */\n    ParamType.prototype.equals = function (a, b) { return a == b; };\n    ParamType.prototype.$subPattern = function () {\n        var sub = this.pattern.toString();\n        return sub.substr(1, sub.length - 2);\n    };\n    ParamType.prototype.toString = function () {\n        return \"{ParamType:\" + this.name + \"}\";\n    };\n    /** Given an encoded string, or a decoded object, returns a decoded object */\n    ParamType.prototype.$normalize = function (val) {\n        return this.is(val) ? val : this.decode(val);\n    };\n    /**\n     * Wraps an existing custom ParamType as an array of ParamType, depending on 'mode'.\n     * e.g.:\n     * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n     * - url: \"/path?queryParam=1&queryParam=2\n     * - $stateParams.queryParam will be [1, 2]\n     * if `mode` is \"auto\", then\n     * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n     * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n     */\n    ParamType.prototype.$asArray = function (mode, isSearch) {\n        if (!mode)\n            return this;\n        if (mode === \"auto\" && !isSearch)\n            throw new Error(\"'auto' array mode is for query parameters only\");\n        return new ArrayType(this, mode);\n    };\n    return ParamType;\n}());\nexports.ParamType = ParamType;\n//# sourceMappingURL=type.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/params/type.js\n// module id = 24\n// module chunks = 0 1","\"use strict\";\n/** @module core */ /** */\nvar urlMatcherFactory_1 = require(\"./url/urlMatcherFactory\");\nvar urlRouter_1 = require(\"./url/urlRouter\");\nvar urlRouter_2 = require(\"./url/urlRouter\");\nvar transitionService_1 = require(\"./transition/transitionService\");\nvar view_1 = require(\"./view/view\");\nvar stateRegistry_1 = require(\"./state/stateRegistry\");\nvar stateService_1 = require(\"./state/stateService\");\nvar globals_1 = require(\"./globals\");\n/**\n * The master class used to instantiate an instance of UI-Router.\n *\n * UI-Router (for a specific framework) will create an instance of this class during bootstrap.\n * This class instantiates and wires the UI-Router services together.\n *\n * After a new instance of the UIRouter class is created, it should be configured for your app.\n * For instance, app states should be registered with the [[stateRegistry]].\n *\n * Tell UI-Router to monitor the URL by calling `uiRouter.urlRouter.listen()` ([[UrlRouter.listen]])\n */\nvar UIRouter = (function () {\n    function UIRouter() {\n        this.viewService = new view_1.ViewService();\n        this.transitionService = new transitionService_1.TransitionService(this);\n        this.globals = new globals_1.Globals(this.transitionService);\n        this.urlMatcherFactory = new urlMatcherFactory_1.UrlMatcherFactory();\n        this.urlRouterProvider = new urlRouter_1.UrlRouterProvider(this.urlMatcherFactory, this.globals.params);\n        this.urlRouter = new urlRouter_2.UrlRouter(this.urlRouterProvider);\n        this.stateRegistry = new stateRegistry_1.StateRegistry(this.urlMatcherFactory, this.urlRouterProvider);\n        this.stateService = new stateService_1.StateService(this);\n        this.viewService.rootContext(this.stateRegistry.root());\n        this.globals.$current = this.stateRegistry.root();\n        this.globals.current = this.globals.$current.self;\n    }\n    return UIRouter;\n}());\nexports.UIRouter = UIRouter;\n//# sourceMappingURL=router.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/router.js\n// module id = 25\n// module chunks = 0 1","\"use strict\";\n/** @module url */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar urlMatcher_1 = require(\"./urlMatcher\");\nvar urlMatcherConfig_1 = require(\"./urlMatcherConfig\");\nvar param_1 = require(\"../params/param\");\nvar paramTypes_1 = require(\"../params/paramTypes\");\n/** @hidden */\nfunction getDefaultConfig() {\n    return {\n        strict: urlMatcherConfig_1.matcherConfig.strictMode(),\n        caseInsensitive: urlMatcherConfig_1.matcherConfig.caseInsensitive()\n    };\n}\n/**\n * Factory for [[UrlMatcher]] instances.\n *\n * The factory is available to ng1 services as\n * `$urlMatcherFactor` or ng1 providers as `$urlMatcherFactoryProvider`.\n */\nvar UrlMatcherFactory = (function () {\n    function UrlMatcherFactory() {\n        this.paramTypes = new paramTypes_1.ParamTypes();\n        common_1.extend(this, { UrlMatcher: urlMatcher_1.UrlMatcher, Param: param_1.Param });\n    }\n    /**\n     * Defines whether URL matching should be case sensitive (the default behavior), or not.\n     *\n     * @param value `false` to match URL in a case sensitive manner; otherwise `true`;\n     * @returns the current value of caseInsensitive\n     */\n    UrlMatcherFactory.prototype.caseInsensitive = function (value) {\n        return urlMatcherConfig_1.matcherConfig.caseInsensitive(value);\n    };\n    /**\n     * Defines whether URLs should match trailing slashes, or not (the default behavior).\n     *\n     * @param value `false` to match trailing slashes in URLs, otherwise `true`.\n     * @returns the current value of strictMode\n     */\n    UrlMatcherFactory.prototype.strictMode = function (value) {\n        return urlMatcherConfig_1.matcherConfig.strictMode(value);\n    };\n    /**\n     * Sets the default behavior when generating or matching URLs with default parameter values.\n     *\n     * @param value A string that defines the default parameter URL squashing behavior.\n     *    - `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n     *    - `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n     *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n     *    - any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n     *             the parameter value from the URL and replace it with this string.\n     * @returns the current value of defaultSquashPolicy\n     */\n    UrlMatcherFactory.prototype.defaultSquashPolicy = function (value) {\n        return urlMatcherConfig_1.matcherConfig.defaultSquashPolicy(value);\n    };\n    /**\n     * Creates a [[UrlMatcher]] for the specified pattern.\n     *\n     * @param pattern  The URL pattern.\n     * @param config  The config object hash.\n     * @returns The UrlMatcher.\n     */\n    UrlMatcherFactory.prototype.compile = function (pattern, config) {\n        return new urlMatcher_1.UrlMatcher(pattern, this.paramTypes, common_1.extend(getDefaultConfig(), config));\n    };\n    /**\n     * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n     *\n     * @param object  The object to perform the type check against.\n     * @returns `true` if the object matches the `UrlMatcher` interface, by\n     *          implementing all the same methods.\n     */\n    UrlMatcherFactory.prototype.isMatcher = function (object) {\n        // TODO: typeof?\n        if (!predicates_1.isObject(object))\n            return false;\n        var result = true;\n        common_1.forEach(urlMatcher_1.UrlMatcher.prototype, function (val, name) {\n            if (predicates_1.isFunction(val))\n                result = result && (predicates_1.isDefined(object[name]) && predicates_1.isFunction(object[name]));\n        });\n        return result;\n    };\n    ;\n    /**\n     * Creates and registers a custom [[ParamType]] object\n     *\n     * A [[ParamType]] can be used to generate URLs with typed parameters.\n     *\n     * @param name  The type name.\n     * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n     * @param definitionFn A function that is injected before the app runtime starts.\n     *        The result of this function should be a [[ParamTypeDefinition]].\n     *        The result is merged into the existing `definition`.\n     *        See [[ParamType]] for information on the values accepted.\n     *\n     * @returns - if a type was registered: the [[UrlMatcherFactory]]\n     *   - if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n     *\n     * Note: Register custom types *before using them* in a state definition.\n     *\n     * See [[ParamTypeDefinition]] for examples\n     */\n    UrlMatcherFactory.prototype.type = function (name, definition, definitionFn) {\n        var type = this.paramTypes.type(name, definition, definitionFn);\n        return !predicates_1.isDefined(definition) ? type : this;\n    };\n    ;\n    /** @hidden */\n    UrlMatcherFactory.prototype.$get = function () {\n        this.paramTypes.enqueue = false;\n        this.paramTypes._flushTypeQueue();\n        return this;\n    };\n    ;\n    return UrlMatcherFactory;\n}());\nexports.UrlMatcherFactory = UrlMatcherFactory;\n//# sourceMappingURL=urlMatcherFactory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/url/urlMatcherFactory.js\n// module id = 26\n// module chunks = 0 1","\"use strict\";\n/** @module url */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar predicates_1 = require(\"../common/predicates\");\nvar param_1 = require(\"../params/param\");\nvar predicates_2 = require(\"../common/predicates\");\nvar param_2 = require(\"../params/param\");\nvar common_2 = require(\"../common/common\");\nvar common_3 = require(\"../common/common\");\n/** @hidden */\nfunction quoteRegExp(string, param) {\n    var surroundPattern = ['', ''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n    if (!param)\n        return result;\n    switch (param.squash) {\n        case false:\n            surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')];\n            break;\n        case true:\n            result = result.replace(/\\/$/, '');\n            surroundPattern = ['(?:\\/(', ')|\\/)?'];\n            break;\n        default:\n            surroundPattern = [(\"(\" + param.squash + \"|\"), ')?'];\n            break;\n    }\n    return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n}\n/** @hidden */\nvar memoizeTo = function (obj, prop, fn) {\n    return obj[prop] = obj[prop] || fn();\n};\n/**\n * Matches URLs against patterns.\n *\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL.\n *\n * A URL pattern consists of a path pattern, optionally followed by '?' and a list of search (query)\n * parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by [[UrlMatcher.exec]].\n *\n * - *Path parameters* are defined using curly brace placeholders (`/somepath/{param}`)\n * or colon placeholders (`/somePath/:param`).\n *\n * - *A parameter RegExp* may be defined for a param after a colon\n * (`/somePath/{param:[a-zA-Z0-9]+}`) in a curly brace placeholder.\n * The regexp must match for the url to be matched.\n * Should the regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n * Note that a RegExp parameter will encode its value with `string` ParamType encoding: \"/\" as \"~2F\", and \"~\" as \"~~\".\n * When matching these characters, use the encoded versions in the regexp.\n * See issue [#2540](https://github.com/angular-ui/ui-router/issues/2540) for more information.\n *\n * - *Custom parameter types* may also be specified after a colon (`/somePath/{param:int}`)\n * in curly brace parameters.  See [[UrlMatcherFactory.type]] for more information.\n *\n * - *Catch-all parameters* are defined using an asterisk placeholder (`/somepath/*catchallparam`).  A catch-all\n * parameter value will contain the remainder of the URL.\n *\n * ---\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters).\n * A path parameter matches any number of characters other than '/'. For catch-all\n * placeholders the path parameter matches any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` ParamType matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n */\nvar UrlMatcher = (function () {\n    /**\n     * @param pattern The pattern to compile into a matcher.\n     * @param paramTypes The [[ParamTypes]] registry\n     * @param config  A configuration object\n     * - `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n     * - `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n     */\n    function UrlMatcher(pattern, paramTypes, config) {\n        var _this = this;\n        this.config = config;\n        /** @hidden */\n        this._cache = { path: [], pattern: null };\n        /** @hidden */\n        this._children = [];\n        /** @hidden */\n        this._params = [];\n        /** @hidden */\n        this._segments = [];\n        /** @hidden */\n        this._compiled = [];\n        this.pattern = pattern;\n        this.config = common_1.defaults(this.config, {\n            params: {},\n            strict: true,\n            caseInsensitive: false,\n            paramMap: common_1.identity\n        });\n        // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n        //   '*' name\n        //   ':' name\n        //   '{' name '}'\n        //   '{' name ':' regexp '}'\n        // The regular expression is somewhat complicated due to the need to allow curly braces\n        // inside the regular expression. The placeholder regexp breaks down as follows:\n        //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n        //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n        //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n        //    [^{}\\\\]+                       - anything other than curly braces or backslash\n        //    \\\\.                            - a backslash escape\n        //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n        var placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g, searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g, last = 0, m, patterns = [];\n        var checkParamErrors = function (id) {\n            if (!UrlMatcher.nameValidator.test(id))\n                throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n            if (common_1.find(_this._params, hof_1.propEq('id', id)))\n                throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n        };\n        // Split into static segments separated by path parameter placeholders.\n        // The number of segments is always 1 more than the number of parameters.\n        var matchDetails = function (m, isSearch) {\n            // IE[78] returns '' for unmatched groups instead of null\n            var id = m[2] || m[3], regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '.*' : null);\n            return {\n                id: id,\n                regexp: regexp,\n                cfg: _this.config.params[id],\n                segment: pattern.substring(last, m.index),\n                type: !regexp ? null : paramTypes.type(regexp || \"string\") || common_1.inherit(paramTypes.type(\"string\"), {\n                    pattern: new RegExp(regexp, _this.config.caseInsensitive ? 'i' : undefined)\n                })\n            };\n        };\n        var p, segment;\n        while ((m = placeholder.exec(pattern))) {\n            p = matchDetails(m, false);\n            if (p.segment.indexOf('?') >= 0)\n                break; // we're into the search part\n            checkParamErrors(p.id);\n            this._params.push(param_1.Param.fromPath(p.id, p.type, this.config.paramMap(p.cfg, false), paramTypes));\n            this._segments.push(p.segment);\n            patterns.push([p.segment, common_1.tail(this._params)]);\n            last = placeholder.lastIndex;\n        }\n        segment = pattern.substring(last);\n        // Find any search parameter names and remove them from the last segment\n        var i = segment.indexOf('?');\n        if (i >= 0) {\n            var search = segment.substring(i);\n            segment = segment.substring(0, i);\n            if (search.length > 0) {\n                last = 0;\n                while ((m = searchPlaceholder.exec(search))) {\n                    p = matchDetails(m, true);\n                    checkParamErrors(p.id);\n                    this._params.push(param_1.Param.fromSearch(p.id, p.type, this.config.paramMap(p.cfg, true), paramTypes));\n                    last = placeholder.lastIndex;\n                }\n            }\n        }\n        this._segments.push(segment);\n        common_1.extend(this, {\n            _compiled: patterns.map(function (pattern) { return quoteRegExp.apply(null, pattern); }).concat(quoteRegExp(segment)),\n            prefix: this._segments[0]\n        });\n        Object.freeze(this);\n    }\n    /**\n     * Creates a new concatenated UrlMatcher\n     *\n     * Builds a new UrlMatcher by appending another UrlMatcher to this one.\n     *\n     * @param url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n     */\n    UrlMatcher.prototype.append = function (url) {\n        this._children.push(url);\n        common_1.forEach(url._cache, function (val, key) { return url._cache[key] = predicates_1.isArray(val) ? [] : null; });\n        url._cache.path = this._cache.path.concat(this);\n        return url;\n    };\n    /** @hidden */\n    UrlMatcher.prototype.isRoot = function () {\n        return this._cache.path.length === 0;\n    };\n    /** Returns the input pattern string */\n    UrlMatcher.prototype.toString = function () {\n        return this.pattern;\n    };\n    /**\n     * Tests the specified url/path against this matcher.\n     *\n     * Tests if the given url matches this matcher's pattern, and returns an object containing the captured\n     * parameter values.  Returns null if the path does not match.\n     *\n     * The returned object contains the values\n     * of any search parameters that are mentioned in the pattern, but their value may be null if\n     * they are not present in `search`. This means that search parameters are always treated\n     * as optional.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n     *   x: '1', q: 'hello'\n     * });\n     * // returns { id: 'bob', q: 'hello', r: null }\n     * ```\n     *\n     * @param path    The URL path to match, e.g. `$location.path()`.\n     * @param search  URL search parameters, e.g. `$location.search()`.\n     * @param hash    URL hash e.g. `$location.hash()`.\n     * @param options\n     *\n     * @returns The captured parameter values.\n     */\n    UrlMatcher.prototype.exec = function (path, search, hash, options) {\n        var _this = this;\n        if (search === void 0) { search = {}; }\n        if (options === void 0) { options = {}; }\n        var match = memoizeTo(this._cache, 'pattern', function () {\n            return new RegExp([\n                '^',\n                common_1.unnest(_this._cache.path.concat(_this).map(hof_1.prop('_compiled'))).join(''),\n                _this.config.strict === false ? '\\/?' : '',\n                '$'\n            ].join(''), _this.config.caseInsensitive ? 'i' : undefined);\n        }).exec(path);\n        if (!match)\n            return null;\n        //options = defaults(options, { isolate: false });\n        var allParams = this.parameters(), pathParams = allParams.filter(function (param) { return !param.isSearch(); }), searchParams = allParams.filter(function (param) { return param.isSearch(); }), nPathSegments = this._cache.path.concat(this).map(function (urlm) { return urlm._segments.length - 1; }).reduce(function (a, x) { return a + x; }), values = {};\n        if (nPathSegments !== match.length - 1)\n            throw new Error(\"Unbalanced capture group in route '\" + this.pattern + \"'\");\n        function decodePathArray(string) {\n            var reverseString = function (str) { return str.split(\"\").reverse().join(\"\"); };\n            var unquoteDashes = function (str) { return str.replace(/\\\\-/g, \"-\"); };\n            var split = reverseString(string).split(/-(?!\\\\)/);\n            var allReversed = common_1.map(split, reverseString);\n            return common_1.map(allReversed, unquoteDashes).reverse();\n        }\n        for (var i = 0; i < nPathSegments; i++) {\n            var param = pathParams[i];\n            var value = match[i + 1];\n            // if the param value matches a pre-replace pair, replace the value before decoding.\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (value && param.array === true)\n                value = decodePathArray(value);\n            if (predicates_2.isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        }\n        searchParams.forEach(function (param) {\n            var value = search[param.id];\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (predicates_2.isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        });\n        if (hash)\n            values[\"#\"] = hash;\n        return values;\n    };\n    /**\n     * @hidden\n     * Returns all the [[Param]] objects of all path and search parameters of this pattern in order of appearance.\n     *\n     * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n     *    pattern has no parameters, an empty array is returned.\n     */\n    UrlMatcher.prototype.parameters = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        if (opts.inherit === false)\n            return this._params;\n        return common_1.unnest(this._cache.path.concat(this).map(hof_1.prop('_params')));\n    };\n    /**\n     * @hidden\n     * Returns a single parameter from this UrlMatcher by id\n     *\n     * @param id\n     * @param opts\n     * @returns {T|Param|any|boolean|UrlMatcher|null}\n     */\n    UrlMatcher.prototype.parameter = function (id, opts) {\n        if (opts === void 0) { opts = {}; }\n        var parent = common_1.tail(this._cache.path);\n        return (common_1.find(this._params, hof_1.propEq('id', id)) ||\n            (opts.inherit !== false && parent && parent.parameter(id)) ||\n            null);\n    };\n    /**\n     * Validates the input parameter values against this UrlMatcher\n     *\n     * Checks an object hash of parameters to validate their correctness according to the parameter\n     * types of this `UrlMatcher`.\n     *\n     * @param params The object hash of parameters to validate.\n     * @returns Returns `true` if `params` validates, otherwise `false`.\n     */\n    UrlMatcher.prototype.validates = function (params) {\n        var _this = this;\n        var validParamVal = function (param, val) {\n            return !param || param.validates(val);\n        };\n        return common_1.pairs(params || {}).map(function (_a) {\n            var key = _a[0], val = _a[1];\n            return validParamVal(_this.parameter(key), val);\n        }).reduce(common_1.allTrueR, true);\n    };\n    /**\n     * Given a set of parameter values, creates a URL from this UrlMatcher.\n     *\n     * Creates a URL that matches this pattern by substituting the specified values\n     * for the path and search parameters.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n     * // returns '/user/bob?q=yes'\n     * ```\n     *\n     * @param values  the values to substitute for the parameters in this pattern.\n     * @returns the formatted URL (path and optionally search part).\n     */\n    UrlMatcher.prototype.format = function (values) {\n        if (values === void 0) { values = {}; }\n        if (!this.validates(values))\n            return null;\n        // Build the full path of UrlMatchers (including all parent UrlMatchers)\n        var urlMatchers = this._cache.path.slice().concat(this);\n        // Extract all the static segments and Params into an ordered array\n        var pathSegmentsAndParams = urlMatchers.map(UrlMatcher.pathSegmentsAndParams).reduce(common_2.unnestR, []);\n        // Extract the query params into a separate array\n        var queryParams = urlMatchers.map(UrlMatcher.queryParams).reduce(common_2.unnestR, []);\n        /**\n         * Given a Param,\n         * Applies the parameter value, then returns details about it\n         */\n        function getDetails(param) {\n            // Normalize to typed value\n            var value = param.value(values[param.id]);\n            var isDefaultValue = param.isDefaultValue(value);\n            // Check if we're in squash mode for the parameter\n            var squash = isDefaultValue ? param.squash : false;\n            // Allow the Parameter's Type to encode the value\n            var encoded = param.type.encode(value);\n            return { param: param, value: value, isDefaultValue: isDefaultValue, squash: squash, encoded: encoded };\n        }\n        // Build up the path-portion from the list of static segments and parameters\n        var pathString = pathSegmentsAndParams.reduce(function (acc, x) {\n            // The element is a static segment (a raw string); just append it\n            if (predicates_1.isString(x))\n                return acc + x;\n            // Otherwise, it's a Param.  Fetch details about the parameter value\n            var _a = getDetails(x), squash = _a.squash, encoded = _a.encoded, param = _a.param;\n            // If squash is === true, try to remove a slash from the path\n            if (squash === true)\n                return (acc.match(/\\/$/)) ? acc.slice(0, -1) : acc;\n            // If squash is a string, use the string for the param value\n            if (predicates_1.isString(squash))\n                return acc + squash;\n            if (squash !== false)\n                return acc; // ?\n            if (encoded == null)\n                return acc;\n            // If this parameter value is an array, encode the value using encodeDashes\n            if (predicates_1.isArray(encoded))\n                return acc + common_1.map(encoded, UrlMatcher.encodeDashes).join(\"-\");\n            // If the parameter type is \"raw\", then do not encodeURIComponent\n            if (param.type.raw)\n                return acc + encoded;\n            // Encode the value\n            return acc + encodeURIComponent(encoded);\n        }, \"\");\n        // Build the query string by applying parameter values (array or regular)\n        // then mapping to key=value, then flattening and joining using \"&\"\n        var queryString = queryParams.map(function (param) {\n            var _a = getDetails(param), squash = _a.squash, encoded = _a.encoded, isDefaultValue = _a.isDefaultValue;\n            if (encoded == null || (isDefaultValue && squash !== false))\n                return;\n            if (!predicates_1.isArray(encoded))\n                encoded = [encoded];\n            if (encoded.length === 0)\n                return;\n            if (!param.type.raw)\n                encoded = common_1.map(encoded, encodeURIComponent);\n            return encoded.map(function (val) { return (param.id + \"=\" + val); });\n        }).filter(common_1.identity).reduce(common_2.unnestR, []).join(\"&\");\n        // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n        return pathString + (queryString ? \"?\" + queryString : \"\") + (values[\"#\"] ? \"#\" + values[\"#\"] : \"\");\n    };\n    /** @hidden */\n    UrlMatcher.encodeDashes = function (str) {\n        return encodeURIComponent(str).replace(/-/g, function (c) { return (\"%5C%\" + c.charCodeAt(0).toString(16).toUpperCase()); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's path segments and path params, in order */\n    UrlMatcher.pathSegmentsAndParams = function (matcher) {\n        var staticSegments = matcher._segments;\n        var pathParams = matcher._params.filter(function (p) { return p.location === param_2.DefType.PATH; });\n        return common_3.arrayTuples(staticSegments, pathParams.concat(undefined)).reduce(common_2.unnestR, []).filter(function (x) { return x !== \"\" && predicates_2.isDefined(x); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's query params */\n    UrlMatcher.queryParams = function (matcher) {\n        return matcher._params.filter(function (p) { return p.location === param_2.DefType.SEARCH; });\n    };\n    /** @hidden */\n    UrlMatcher.nameValidator = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n    return UrlMatcher;\n}());\nexports.UrlMatcher = UrlMatcher;\n//# sourceMappingURL=urlMatcher.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/url/urlMatcher.js\n// module id = 27\n// module chunks = 0 1","\"use strict\";\n/** @module params */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar hof_1 = require(\"../common/hof\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar type_1 = require(\"./type\");\n// Use tildes to pre-encode slashes.\n// If the slashes are simply URLEncoded, the browser can choose to pre-decode them,\n// and bidirectional encoding/decoding fails.\n// Tilde was chosen because it's not a RFC 3986 section 2.2 Reserved Character\nfunction valToString(val) { return val != null ? val.toString().replace(/(~|\\/)/g, function (m) { return ({ '~': '~~', '/': '~2F' }[m]); }) : val; }\nfunction valFromString(val) { return val != null ? val.toString().replace(/(~~|~2F)/g, function (m) { return ({ '~~': '~', '~2F': '/' }[m]); }) : val; }\nvar ParamTypes = (function () {\n    function ParamTypes() {\n        this.enqueue = true;\n        this.typeQueue = [];\n        this.defaultTypes = {\n            \"hash\": {\n                encode: valToString,\n                decode: valFromString,\n                is: hof_1.is(String),\n                pattern: /.*/,\n                equals: function (a, b) { return a == b; } // allow coersion for null/undefined/\"\"\n            },\n            \"string\": {\n                encode: valToString,\n                decode: valFromString,\n                is: hof_1.is(String),\n                pattern: /[^/]*/\n            },\n            \"int\": {\n                encode: valToString,\n                decode: function (val) { return parseInt(val, 10); },\n                is: function (val) { return predicates_1.isDefined(val) && this.decode(val.toString()) === val; },\n                pattern: /-?\\d+/\n            },\n            \"bool\": {\n                encode: function (val) { return val && 1 || 0; },\n                decode: function (val) { return parseInt(val, 10) !== 0; },\n                is: hof_1.is(Boolean),\n                pattern: /0|1/\n            },\n            \"date\": {\n                encode: function (val) {\n                    return !this.is(val) ? undefined : [\n                        val.getFullYear(),\n                        ('0' + (val.getMonth() + 1)).slice(-2),\n                        ('0' + val.getDate()).slice(-2)\n                    ].join(\"-\");\n                },\n                decode: function (val) {\n                    if (this.is(val))\n                        return val;\n                    var match = this.capture.exec(val);\n                    return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n                },\n                is: function (val) { return val instanceof Date && !isNaN(val.valueOf()); },\n                equals: function (l, r) {\n                    return ['getFullYear', 'getMonth', 'getDate']\n                        .reduce(function (acc, fn) { return acc && l[fn]() === r[fn](); }, true);\n                },\n                pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n                capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n            },\n            \"json\": {\n                encode: common_1.toJson,\n                decode: common_1.fromJson,\n                is: hof_1.is(Object),\n                equals: common_1.equals,\n                pattern: /[^/]*/\n            },\n            \"any\": {\n                encode: common_1.identity,\n                decode: common_1.identity,\n                equals: common_1.equals,\n                pattern: /.*/\n            }\n        };\n        // Register default types. Store them in the prototype of this.types.\n        var makeType = function (definition, name) { return new type_1.ParamType(common_1.extend({ name: name }, definition)); };\n        this.types = common_1.inherit(common_1.map(this.defaultTypes, makeType), {});\n    }\n    ParamTypes.prototype.type = function (name, definition, definitionFn) {\n        if (!predicates_1.isDefined(definition))\n            return this.types[name];\n        if (this.types.hasOwnProperty(name))\n            throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n        this.types[name] = new type_1.ParamType(common_1.extend({ name: name }, definition));\n        if (definitionFn) {\n            this.typeQueue.push({ name: name, def: definitionFn });\n            if (!this.enqueue)\n                this._flushTypeQueue();\n        }\n        return this;\n    };\n    ParamTypes.prototype._flushTypeQueue = function () {\n        while (this.typeQueue.length) {\n            var type = this.typeQueue.shift();\n            if (type.pattern)\n                throw new Error(\"You cannot override a type's .pattern at runtime.\");\n            common_1.extend(this.types[type.name], coreservices_1.services.$injector.invoke(type.def));\n        }\n    };\n    return ParamTypes;\n}());\nexports.ParamTypes = ParamTypes;\n//# sourceMappingURL=paramTypes.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/params/paramTypes.js\n// module id = 28\n// module chunks = 0 1","\"use strict\";\n/** @module url */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar coreservices_1 = require(\"../common/coreservices\");\n/** @hidden */\nvar $location = coreservices_1.services.location;\n/** @hidden Returns a string that is a prefix of all strings matching the RegExp */\nfunction regExpPrefix(re) {\n    var prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n    return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n}\n/** @hidden Interpolates matched values into a String.replace()-style pattern */\nfunction interpolate(pattern, match) {\n    return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n        return match[what === '$' ? 0 : Number(what)];\n    });\n}\n/** @hidden */\nfunction handleIfMatch($injector, $stateParams, handler, match) {\n    if (!match)\n        return false;\n    var result = $injector.invoke(handler, handler, { $match: match, $stateParams: $stateParams });\n    return predicates_1.isDefined(result) ? result : true;\n}\n/** @hidden */\nfunction appendBasePath(url, isHtml5, absolute) {\n    var baseHref = coreservices_1.services.locationConfig.baseHref();\n    if (baseHref === '/')\n        return url;\n    if (isHtml5)\n        return baseHref.slice(0, -1) + url;\n    if (absolute)\n        return baseHref.slice(1) + url;\n    return url;\n}\n// TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\n/** @hidden */\nfunction update(rules, otherwiseFn, evt) {\n    if (evt && evt.defaultPrevented)\n        return;\n    function check(rule) {\n        var handled = rule(coreservices_1.services.$injector, $location);\n        if (!handled)\n            return false;\n        if (predicates_1.isString(handled)) {\n            $location.setUrl(handled, true);\n        }\n        return true;\n    }\n    var n = rules.length;\n    for (var i = 0; i < n; i++) {\n        if (check(rules[i]))\n            return;\n    }\n    // always check otherwise last to allow dynamic updates to the set of rules\n    if (otherwiseFn)\n        check(otherwiseFn);\n}\n/**\n * Manages rules for client-side URL\n *\n * This class manages the router rules for what to do when the URL changes.\n */\nvar UrlRouterProvider = (function () {\n    function UrlRouterProvider($urlMatcherFactory, $stateParams) {\n        /** @hidden */\n        this.rules = [];\n        /** @hidden */\n        this.interceptDeferred = false;\n        this.$urlMatcherFactory = $urlMatcherFactory;\n        this.$stateParams = $stateParams;\n    }\n    /**\n     * Registers a url handler function.\n     *\n     * Registers a low level url handler (a `rule`). A rule detects specific URL patterns and returns\n     * a redirect, or performs some action.\n     *\n     * If a rule returns a string, the URL is replaced with the string, and all rules are fired again.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Here's an example of how you might allow case insensitive urls\n     *   $urlRouterProvider.rule(function ($injector, $location) {\n     *     var path = $location.path(),\n     *         normalized = path.toLowerCase();\n     *\n     *     if (path !== normalized) {\n     *       return normalized;\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param rule\n     * Handler function that takes `$injector` and `$location` services as arguments.\n     * You can use them to detect a url and return a different url as a string.\n     *\n     * @return [[$urlRouterProvider]] (`this`)\n     */\n    UrlRouterProvider.prototype.rule = function (rule) {\n        if (!predicates_1.isFunction(rule))\n            throw new Error(\"'rule' must be a function\");\n        this.rules.push(rule);\n        return this;\n    };\n    ;\n    /**\n     * Remove a rule previously registered\n     *\n     * @param rule the matcher rule that was previously registered using [[rule]]\n     * @return true if the rule was found (and removed)\n     */\n    UrlRouterProvider.prototype.removeRule = function (rule) {\n        return this.rules.length !== common_1.removeFrom(this.rules, rule).length;\n    };\n    /**\n     * Defines the path or behavior to use when no url can be matched.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // if the path doesn't match any of the urls you configured\n     *   // otherwise will take care of routing the user to the\n     *   // specified url\n     *   $urlRouterProvider.otherwise('/index');\n     *\n     *   // Example of using function rule as param\n     *   $urlRouterProvider.otherwise(function ($injector, $location) {\n     *     return '/a/valid/url';\n     *   });\n     * });\n     * ```\n     *\n     * @param rule\n     * The url path you want to redirect to or a function rule that returns the url path or performs a `$state.go()`.\n     * The function version is passed two params: `$injector` and `$location` services, and should return a url string.\n     *\n     * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n     */\n    UrlRouterProvider.prototype.otherwise = function (rule) {\n        if (!predicates_1.isFunction(rule) && !predicates_1.isString(rule))\n            throw new Error(\"'rule' must be a string or function\");\n        this.otherwiseFn = predicates_1.isString(rule) ? function () { return rule; } : rule;\n        return this;\n    };\n    ;\n    /**\n     * Registers a handler for a given url matching.\n     *\n     * If the handler is a string, it is\n     * treated as a redirect, and is interpolated according to the syntax of match\n     * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n     *\n     * If the handler is a function, it is injectable.\n     * It gets invoked if `$location` matches.\n     * You have the option of inject the match object as `$match`.\n     *\n     * The handler can return\n     *\n     * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n     *   will continue trying to find another one that matches.\n     * - **string** which is treated as a redirect and passed to `$location.url()`\n     * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n     *\n     * @example\n     * ```js\n     *\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n     *     if ($state.$current.navigable !== state ||\n     *         !equalForKeys($match, $stateParams) {\n     *      $state.transitionTo(state, $match, false);\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param what A pattern string to match, compiled as a [[UrlMatcher]].\n     * @param handler The path (or function that returns a path) that you want to redirect your user to.\n     * @param ruleCallback [optional] A callback that receives the `rule` registered with [[UrlMatcher.rule]]\n     *\n     * Note: the handler may also invoke arbitrary code, such as `$state.go()`\n     */\n    UrlRouterProvider.prototype.when = function (what, handler, ruleCallback) {\n        if (ruleCallback === void 0) { ruleCallback = function (rule) { }; }\n        var _a = this, $urlMatcherFactory = _a.$urlMatcherFactory, $stateParams = _a.$stateParams;\n        var redirect, handlerIsString = predicates_1.isString(handler);\n        // @todo Queue this\n        if (predicates_1.isString(what))\n            what = $urlMatcherFactory.compile(what);\n        if (!handlerIsString && !predicates_1.isFunction(handler) && !predicates_1.isArray(handler))\n            throw new Error(\"invalid 'handler' in when()\");\n        var strategies = {\n            matcher: function (_what, _handler) {\n                if (handlerIsString) {\n                    redirect = $urlMatcherFactory.compile(_handler);\n                    _handler = ['$match', redirect.format.bind(redirect)];\n                }\n                return common_1.extend(function () {\n                    return handleIfMatch(coreservices_1.services.$injector, $stateParams, _handler, _what.exec($location.path(), $location.search(), $location.hash()));\n                }, {\n                    prefix: predicates_1.isString(_what.prefix) ? _what.prefix : ''\n                });\n            },\n            regex: function (_what, _handler) {\n                if (_what.global || _what.sticky)\n                    throw new Error(\"when() RegExp must not be global or sticky\");\n                if (handlerIsString) {\n                    redirect = _handler;\n                    _handler = ['$match', function ($match) { return interpolate(redirect, $match); }];\n                }\n                return common_1.extend(function () {\n                    return handleIfMatch(coreservices_1.services.$injector, $stateParams, _handler, _what.exec($location.path()));\n                }, {\n                    prefix: regExpPrefix(_what)\n                });\n            }\n        };\n        var check = {\n            matcher: $urlMatcherFactory.isMatcher(what),\n            regex: what instanceof RegExp\n        };\n        for (var n in check) {\n            if (check[n]) {\n                var rule = strategies[n](what, handler);\n                ruleCallback(rule);\n                return this.rule(rule);\n            }\n        }\n        throw new Error(\"invalid 'what' in when()\");\n    };\n    ;\n    /**\n     * Disables monitoring of the URL.\n     *\n     * Call this method before UI-Router has bootstrapped.\n     * It will stop UI-Router from performing the initial url sync.\n     *\n     * This can be useful to perform some asynchronous initialization before the router starts.\n     * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Prevent $urlRouter from automatically intercepting URL changes;\n     *   $urlRouterProvider.deferIntercept();\n     * })\n     *\n     * app.run(function (MyService, $urlRouter, $http) {\n     *   $http.get(\"/stuff\").then(function(resp) {\n     *     MyService.doStuff(resp.data);\n     *     $urlRouter.listen();\n     *     $urlRouter.sync();\n     *   });\n     * });\n     * ```\n     *\n     * @param defer Indicates whether to defer location change interception. Passing\n     *        no parameter is equivalent to `true`.\n     */\n    UrlRouterProvider.prototype.deferIntercept = function (defer) {\n        if (defer === undefined)\n            defer = true;\n        this.interceptDeferred = defer;\n    };\n    ;\n    return UrlRouterProvider;\n}());\nexports.UrlRouterProvider = UrlRouterProvider;\nvar UrlRouter = (function () {\n    /** @hidden */\n    function UrlRouter(urlRouterProvider) {\n        this.urlRouterProvider = urlRouterProvider;\n        common_1.bindFunctions(UrlRouter.prototype, this, this);\n    }\n    /**\n     * Checks the current URL for a matching rule\n     *\n     * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n     * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n     * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n     * with the transition by calling `$urlRouter.sync()`.\n     *\n     * #### Example:\n     * ```js\n     * angular.module('app', ['ui.router'])\n     *   .run(function($rootScope, $urlRouter) {\n     *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n     *       // Halt state change from even starting\n     *       evt.preventDefault();\n     *       // Perform custom logic\n     *       var meetsRequirement = ...\n     *       // Continue with the update and state transition if logic allows\n     *       if (meetsRequirement) $urlRouter.sync();\n     *     });\n     * });\n     * ```\n     */\n    UrlRouter.prototype.sync = function () {\n        update(this.urlRouterProvider.rules, this.urlRouterProvider.otherwiseFn);\n    };\n    /**\n     * Starts listening for URL changes\n     *\n     * Call this sometime after calling [[deferIntercept]] to start monitoring the url.\n     * This causes [[UrlRouter]] to start listening for changes to the URL, if it wasn't already listening.\n     */\n    UrlRouter.prototype.listen = function () {\n        var _this = this;\n        return this.listener = this.listener || $location.onChange(function (evt) { return update(_this.urlRouterProvider.rules, _this.urlRouterProvider.otherwiseFn, evt); });\n    };\n    /**\n     * Internal API.\n     */\n    UrlRouter.prototype.update = function (read) {\n        if (read) {\n            this.location = $location.path();\n            return;\n        }\n        if ($location.path() === this.location)\n            return;\n        $location.setUrl(this.location, true);\n    };\n    /**\n     * Internal API.\n     *\n     * Pushes a new location to the browser history.\n     *\n     * @param urlMatcher\n     * @param params\n     * @param options\n     */\n    UrlRouter.prototype.push = function (urlMatcher, params, options) {\n        var replace = options && !!options.replace;\n        $location.setUrl(urlMatcher.format(params || {}), replace);\n    };\n    /**\n     * Builds and returns a URL with interpolated parameters\n     *\n     * #### Example:\n     * ```js\n     * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n     *   person: \"bob\"\n     * });\n     * // $bob == \"/about/bob\";\n     * ```\n     *\n     * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n     * @param params An object of parameter values to fill the matcher's required parameters.\n     * @param options Options object. The options are:\n     *\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     *\n     * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n     */\n    UrlRouter.prototype.href = function (urlMatcher, params, options) {\n        if (!urlMatcher.validates(params))\n            return null;\n        var url = urlMatcher.format(params);\n        options = options || { absolute: false };\n        var cfg = coreservices_1.services.locationConfig;\n        var isHtml5 = cfg.html5Mode();\n        if (!isHtml5 && url !== null) {\n            url = \"#\" + cfg.hashPrefix() + url;\n        }\n        url = appendBasePath(url, isHtml5, options.absolute);\n        if (!options.absolute || !url) {\n            return url;\n        }\n        var slash = (!isHtml5 && url ? '/' : ''), port = cfg.port();\n        port = (port === 80 || port === 443 ? '' : ':' + port);\n        return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n    };\n    return UrlRouter;\n}());\nexports.UrlRouter = UrlRouter;\n//# sourceMappingURL=urlRouter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/url/urlRouter.js\n// module id = 29\n// module chunks = 0 1","\"use strict\";\nvar transition_1 = require(\"./transition\");\nvar hookRegistry_1 = require(\"./hookRegistry\");\nvar resolve_1 = require(\"../hooks/resolve\");\nvar views_1 = require(\"../hooks/views\");\nvar url_1 = require(\"../hooks/url\");\nvar redirectTo_1 = require(\"../hooks/redirectTo\");\nvar onEnterExitRetain_1 = require(\"../hooks/onEnterExitRetain\");\nvar lazyLoadStates_1 = require(\"../hooks/lazyLoadStates\");\n/**\n * The default [[Transition]] options.\n *\n * Include this object when applying custom defaults:\n * let reloadOpts = { reload: true, notify: true }\n * let options = defaults(theirOpts, customDefaults, defaultOptions);\n */\nexports.defaultTransOpts = {\n    location: true,\n    relative: null,\n    inherit: false,\n    notify: true,\n    reload: false,\n    custom: {},\n    current: function () { return null; },\n    source: \"unknown\"\n};\n/**\n * This class provides services related to Transitions.\n *\n * - Most importantly, it allows global Transition Hooks to be registered.\n * - It allows the default transition error handler to be set.\n * - It also has a factory function for creating new [[Transition]] objects, (used internally by the [[StateService]]).\n *\n * At bootstrap, [[UIRouter]] creates a single instance (singleton) of this class.\n */\nvar TransitionService = (function () {\n    function TransitionService(_router) {\n        this._router = _router;\n        this.$view = _router.viewService;\n        hookRegistry_1.HookRegistry.mixin(new hookRegistry_1.HookRegistry(), this);\n        this._deregisterHookFns = {};\n        this.registerTransitionHooks();\n    }\n    /** @hidden */\n    TransitionService.prototype.registerTransitionHooks = function () {\n        var fns = this._deregisterHookFns;\n        // Wire up redirectTo hook\n        fns.redirectTo = redirectTo_1.registerRedirectToHook(this);\n        // Wire up onExit/Retain/Enter state hooks\n        fns.onExit = onEnterExitRetain_1.registerOnExitHook(this);\n        fns.onRetain = onEnterExitRetain_1.registerOnRetainHook(this);\n        fns.onEnter = onEnterExitRetain_1.registerOnEnterHook(this);\n        // Wire up Resolve hooks\n        fns.eagerResolve = resolve_1.registerEagerResolvePath(this);\n        fns.lazyResolve = resolve_1.registerLazyResolveState(this);\n        // Wire up the View management hooks\n        fns.loadViews = views_1.registerLoadEnteringViews(this);\n        fns.activateViews = views_1.registerActivateViews(this);\n        // After globals.current is updated at priority: 10000\n        fns.updateUrl = url_1.registerUpdateUrl(this);\n        // Lazy load state trees\n        fns.lazyLoad = lazyLoadStates_1.registerLazyLoadHook(this);\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onBefore = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    TransitionService.prototype.onStart = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    TransitionService.prototype.onExit = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    TransitionService.prototype.onRetain = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    TransitionService.prototype.onEnter = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    TransitionService.prototype.onFinish = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    TransitionService.prototype.onSuccess = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    TransitionService.prototype.onError = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /**\n     * Creates a new [[Transition]] object\n     *\n     * This is a factory function for creating new Transition objects.\n     * It is used internally by the [[StateService]] and should generally not be called by application code.\n     *\n     * @param fromPath the path to the current state (the from state)\n     * @param targetState the target state (destination)\n     * @returns a Transition\n     */\n    TransitionService.prototype.create = function (fromPath, targetState) {\n        return new transition_1.Transition(fromPath, targetState, this._router);\n    };\n    return TransitionService;\n}());\nexports.TransitionService = TransitionService;\n//# sourceMappingURL=transitionService.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/transition/transitionService.js\n// module id = 30\n// module chunks = 0 1","\"use strict\";\n/** @module hooks */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar resolveContext_1 = require(\"../resolve/resolveContext\");\nvar hof_1 = require(\"../common/hof\");\n/**\n * A [[TransitionHookFn]] which resolves all EAGER Resolvables in the To Path\n *\n * Registered using `transitionService.onStart({}, eagerResolvePath);`\n *\n * When a Transition starts, this hook resolves all the EAGER Resolvables, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar eagerResolvePath = function (trans) {\n    return new resolveContext_1.ResolveContext(trans.treeChanges().to)\n        .resolvePath(\"EAGER\", trans)\n        .then(common_1.noop);\n};\nexports.registerEagerResolvePath = function (transitionService) {\n    return transitionService.onStart({}, eagerResolvePath, { priority: 1000 });\n};\n/**\n * A [[TransitionHookFn]] which resolves all LAZY Resolvables for the state (and all its ancestors) in the To Path\n *\n * Registered using `transitionService.onEnter({ entering: () => true }, lazyResolveState);`\n *\n * When a State is being entered, this hook resolves all the Resolvables for this state, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar lazyResolveState = function (trans, state) {\n    return new resolveContext_1.ResolveContext(trans.treeChanges().to)\n        .subContext(state)\n        .resolvePath(\"LAZY\", trans)\n        .then(common_1.noop);\n};\nexports.registerLazyResolveState = function (transitionService) {\n    return transitionService.onEnter({ entering: hof_1.val(true) }, lazyResolveState, { priority: 1000 });\n};\n//# sourceMappingURL=resolve.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/hooks/resolve.js\n// module id = 31\n// module chunks = 0 1","\"use strict\";\n/** @module hooks */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar coreservices_1 = require(\"../common/coreservices\");\n/**\n * A [[TransitionHookFn]] which waits for the views to load\n *\n * Registered using `transitionService.onStart({}, loadEnteringViews);`\n *\n * Allows the views to do async work in [[ViewConfig.load]] before the transition continues.\n * In angular 1, this includes loading the templates.\n */\nvar loadEnteringViews = function (transition) {\n    var enteringViews = transition.views(\"entering\");\n    if (!enteringViews.length)\n        return;\n    return coreservices_1.services.$q.all(enteringViews.map(function (view) { return view.load(); })).then(common_1.noop);\n};\nexports.registerLoadEnteringViews = function (transitionService) {\n    return transitionService.onStart({}, loadEnteringViews);\n};\n/**\n * A [[TransitionHookFn]] which activates the new views when a transition is successful.\n *\n * Registered using `transitionService.onSuccess({}, activateViews);`\n *\n * After a transition is complete, this hook deactivates the old views from the previous state,\n * and activates the new views from the destination state.\n *\n * See [[ViewService]]\n */\nvar activateViews = function (transition) {\n    var enteringViews = transition.views(\"entering\");\n    var exitingViews = transition.views(\"exiting\");\n    if (!enteringViews.length && !exitingViews.length)\n        return;\n    var $view = transition.router.viewService;\n    exitingViews.forEach(function (vc) { return $view.deactivateViewConfig(vc); });\n    enteringViews.forEach(function (vc) { return $view.activateViewConfig(vc); });\n    $view.sync();\n};\nexports.registerActivateViews = function (transitionService) {\n    return transitionService.onSuccess({}, activateViews);\n};\n//# sourceMappingURL=views.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/hooks/views.js\n// module id = 32\n// module chunks = 0 1","\"use strict\";\n/**\n * A [[TransitionHookFn]] which updates the URL after a successful transition\n *\n * Registered using `transitionService.onSuccess({}, updateUrl);`\n */\nvar updateUrl = function (transition) {\n    var options = transition.options();\n    var $state = transition.router.stateService;\n    var $urlRouter = transition.router.urlRouter;\n    // Dont update the url in these situations:\n    // The transition was triggered by a URL sync (options.source === 'url')\n    // The user doesn't want the url to update (options.location === false)\n    // The destination state, and all parents have no navigable url\n    if (options.source !== 'url' && options.location && $state.$current.navigable) {\n        var urlOptions = { replace: options.location === 'replace' };\n        $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions);\n    }\n    $urlRouter.update(true);\n};\nexports.registerUpdateUrl = function (transitionService) {\n    return transitionService.onSuccess({}, updateUrl, { priority: 9999 });\n};\n//# sourceMappingURL=url.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/hooks/url.js\n// module id = 33\n// module chunks = 0 1","\"use strict\";\n/** @module hooks */ /** */\nvar predicates_1 = require(\"../common/predicates\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar targetState_1 = require(\"../state/targetState\");\n/**\n * A [[TransitionHookFn]] that redirects to a different state or params\n *\n * Registered using `transitionService.onStart({ to: (state) => !!state.redirectTo }, redirectHook);`\n *\n * See [[StateDeclaration.redirectTo]]\n */\nvar redirectToHook = function (trans) {\n    var redirect = trans.to().redirectTo;\n    if (!redirect)\n        return;\n    function handleResult(result) {\n        var $state = trans.router.stateService;\n        if (result instanceof targetState_1.TargetState)\n            return result;\n        if (predicates_1.isString(result))\n            return $state.target(result, trans.params(), trans.options());\n        if (result['state'] || result['params'])\n            return $state.target(result['state'] || trans.to(), result['params'] || trans.params(), trans.options());\n    }\n    if (predicates_1.isFunction(redirect)) {\n        return coreservices_1.services.$q.when(redirect(trans)).then(handleResult);\n    }\n    return handleResult(redirect);\n};\nexports.registerRedirectToHook = function (transitionService) {\n    return transitionService.onStart({ to: function (state) { return !!state.redirectTo; } }, redirectToHook);\n};\n//# sourceMappingURL=redirectTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/hooks/redirectTo.js\n// module id = 34\n// module chunks = 0 1","\"use strict\";\n/**\n * A factory which creates an onEnter, onExit or onRetain transition hook function\n *\n * The returned function invokes the (for instance) state.onEnter hook when the\n * state is being entered.\n *\n * @hidden\n */\nfunction makeEnterExitRetainHook(hookName) {\n    return function (transition, state) {\n        var hookFn = state[hookName];\n        return hookFn(transition, state);\n    };\n}\n/**\n * The [[TransitionStateHookFn]] for onExit\n *\n * When the state is being exited, the state's .onExit function is invoked.\n *\n * Registered using `transitionService.onExit({ exiting: (state) => !!state.onExit }, onExitHook);`\n *\n * See: [[IHookRegistry.onExit]]\n */\nvar onExitHook = makeEnterExitRetainHook('onExit');\nexports.registerOnExitHook = function (transitionService) {\n    return transitionService.onExit({ exiting: function (state) { return !!state.onExit; } }, onExitHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onRetain\n *\n * When the state was already entered, and is not being exited or re-entered, the state's .onRetain function is invoked.\n *\n * Registered using `transitionService.onRetain({ retained: (state) => !!state.onRetain }, onRetainHook);`\n *\n * See: [[IHookRegistry.onRetain]]\n */\nvar onRetainHook = makeEnterExitRetainHook('onRetain');\nexports.registerOnRetainHook = function (transitionService) {\n    return transitionService.onRetain({ retained: function (state) { return !!state.onRetain; } }, onRetainHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onEnter\n *\n * When the state is being entered, the state's .onEnter function is invoked.\n *\n * Registered using `transitionService.onEnter({ entering: (state) => !!state.onEnter }, onEnterHook);`\n *\n * See: [[IHookRegistry.onEnter]]\n */\nvar onEnterHook = makeEnterExitRetainHook('onEnter');\nexports.registerOnEnterHook = function (transitionService) {\n    return transitionService.onEnter({ entering: function (state) { return !!state.onEnter; } }, onEnterHook);\n};\n//# sourceMappingURL=onEnterExitRetain.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/hooks/onEnterExitRetain.js\n// module id = 35\n// module chunks = 0 1","\"use strict\";\nvar coreservices_1 = require(\"../common/coreservices\");\n/**\n * A [[TransitionHookFn]] that lazy loads a state tree.\n *\n * When transitioning to a state \"abc\" which has a `lazyLoad` function defined:\n * - Invoke the `lazyLoad` function\n *   - The function should return a promise for an array of lazy loaded [[StateDeclaration]]s\n * - Wait for the promise to resolve\n * - Deregister the original state \"abc\"\n *   - The original state definition is a placeholder for the lazy loaded states\n * - Register the new states\n * - Retry the transition\n *\n * See [[StateDeclaration.lazyLoad]]\n */\nvar lazyLoadHook = function (transition) {\n    var toState = transition.to();\n    var registry = transition.router.stateRegistry;\n    function retryOriginalTransition() {\n        if (transition.options().source === 'url') {\n            var loc = coreservices_1.services.location, path_1 = loc.path(), search_1 = loc.search(), hash_1 = loc.hash();\n            var matchState = function (state) { return [state, state.url && state.url.exec(path_1, search_1, hash_1)]; };\n            var matches = registry.get().map(function (s) { return s.$$state(); }).map(matchState).filter(function (_a) {\n                var state = _a[0], params = _a[1];\n                return !!params;\n            });\n            if (matches.length) {\n                var _a = matches[0], state = _a[0], params = _a[1];\n                return transition.router.stateService.target(state, params, transition.options());\n            }\n            transition.router.urlRouter.sync();\n        }\n        // The original transition was not triggered via url sync\n        // The lazy state should be loaded now, so re-try the original transition\n        var orig = transition.targetState();\n        return transition.router.stateService.target(orig.identifier(), orig.params(), orig.options());\n    }\n    /**\n     * Replace the placeholder state with the newly loaded states from the NgModule.\n     */\n    function updateStateRegistry(result) {\n        // deregister placeholder state\n        registry.deregister(transition.$to());\n        if (result && Array.isArray(result.states)) {\n            result.states.forEach(function (state) { return registry.register(state); });\n        }\n    }\n    var hook = toState.lazyLoad;\n    // Store/get the lazy load promise on/from the hookfn so it doesn't get re-invoked\n    var promise = hook['_promise'];\n    if (!promise) {\n        promise = hook['_promise'] = hook(transition).then(updateStateRegistry);\n        var cleanup = function () { return delete hook['_promise']; };\n        promise.then(cleanup, cleanup);\n    }\n    return promise.then(retryOriginalTransition);\n};\nexports.registerLazyLoadHook = function (transitionService) {\n    return transitionService.onBefore({ to: function (state) { return !!state.lazyLoad; } }, lazyLoadHook);\n};\n//# sourceMappingURL=lazyLoadStates.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/hooks/lazyLoadStates.js\n// module id = 36\n// module chunks = 0 1","\"use strict\";\n/** @module view */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar predicates_1 = require(\"../common/predicates\");\nvar trace_1 = require(\"../common/trace\");\n/**\n * The View service\n */\nvar ViewService = (function () {\n    function ViewService() {\n        var _this = this;\n        this.uiViews = [];\n        this.viewConfigs = [];\n        this._viewConfigFactories = {};\n        this.sync = function () {\n            var uiViewsByFqn = _this.uiViews.map(function (uiv) { return [uiv.fqn, uiv]; }).reduce(common_1.applyPairs, {});\n            /**\n             * Given a ui-view and a ViewConfig, determines if they \"match\".\n             *\n             * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n             * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n             *\n             * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n             * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n             *\n             * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n             *\n             * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n             * - the ui-view's name matches the ViewConfig's target name\n             * - the ui-view's context matches the ViewConfig's anchor\n             *\n             * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n             * - There exists a parent ui-view where:\n             *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n             *    - the parent ui-view's context matches the ViewConfig's anchor\n             * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n             *\n             * Example:\n             *\n             * DOM:\n             * <div ui-view>                        <!-- created in the root context (name: \"\") -->\n             *   <div ui-view=\"foo\">                <!-- created in the context named: \"A\"      -->\n             *     <div ui-view>                    <!-- created in the context named: \"A.B\"    -->\n             *       <div ui-view=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n             *       </div>\n             *     </div>\n             *   </div>\n             * </div>\n             *\n             * uiViews: [\n             *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n             *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n             *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n             *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n             * ]\n             *\n             * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n             *\n             * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n             * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n             * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n             * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n             *\n             * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n             * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n             * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n             *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n             *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n             * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n             *   the tail of the ui-view's fqn \"default.bar\"\n             */\n            var matches = function (uiView) { return function (viewConfig) {\n                // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n                if (uiView.$type !== viewConfig.viewDecl.$type)\n                    return false;\n                // Split names apart from both viewConfig and uiView into segments\n                var vc = viewConfig.viewDecl;\n                var vcSegments = vc.$uiViewName.split(\".\");\n                var uivSegments = uiView.fqn.split(\".\");\n                // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n                // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n                if (!common_1.equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n                    return false;\n                // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n                // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n                var negOffset = (1 - vcSegments.length) || undefined;\n                var fqnToFirstSegment = uivSegments.slice(0, negOffset).join(\".\");\n                var uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n                return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n            }; };\n            // Return the number of dots in the fully qualified name\n            function uiViewDepth(uiView) {\n                return uiView.fqn.split(\".\").length;\n            }\n            // Return the ViewConfig's context's depth in the context tree.\n            function viewConfigDepth(config) {\n                var context = config.viewDecl.$context, count = 0;\n                while (++count && context.parent)\n                    context = context.parent;\n                return count;\n            }\n            // Given a depth function, returns a compare function which can return either ascending or descending order\n            var depthCompare = hof_1.curry(function (depthFn, posNeg, left, right) { return posNeg * (depthFn(left) - depthFn(right)); });\n            var matchingConfigPair = function (uiView) {\n                var matchingConfigs = _this.viewConfigs.filter(matches(uiView));\n                if (matchingConfigs.length > 1)\n                    matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n                return [uiView, matchingConfigs[0]];\n            };\n            var configureUIView = function (_a) {\n                var uiView = _a[0], viewConfig = _a[1];\n                // If a parent ui-view is reconfigured, it could destroy child ui-views.\n                // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n                if (_this.uiViews.indexOf(uiView) !== -1)\n                    uiView.configUpdated(viewConfig);\n            };\n            _this.uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair).forEach(configureUIView);\n        };\n    }\n    ViewService.prototype.rootContext = function (context) {\n        return this._rootContext = context || this._rootContext;\n    };\n    ;\n    ViewService.prototype.viewConfigFactory = function (viewType, factory) {\n        this._viewConfigFactories[viewType] = factory;\n    };\n    ViewService.prototype.createViewConfig = function (path, decl) {\n        var cfgFactory = this._viewConfigFactories[decl.$type];\n        if (!cfgFactory)\n            throw new Error(\"ViewService: No view config factory registered for type \" + decl.$type);\n        var cfgs = cfgFactory(path, decl);\n        return predicates_1.isArray(cfgs) ? cfgs : [cfgs];\n    };\n    /**\n     * De-registers a ViewConfig.\n     *\n     * @param viewConfig The ViewConfig view to deregister.\n     */\n    ViewService.prototype.deactivateViewConfig = function (viewConfig) {\n        trace_1.trace.traceViewServiceEvent(\"<- Removing\", viewConfig);\n        common_1.removeFrom(this.viewConfigs, viewConfig);\n    };\n    ;\n    ViewService.prototype.activateViewConfig = function (viewConfig) {\n        trace_1.trace.traceViewServiceEvent(\"-> Registering\", viewConfig);\n        this.viewConfigs.push(viewConfig);\n    };\n    ;\n    /**\n     * Allows a `ui-view` element to register its canonical name with a callback that allows it to\n     * be updated with a template, controller, and local variables.\n     *\n     * @param {String} name The fully-qualified name of the `ui-view` object being registered.\n     * @param {Function} configUpdatedCallback A callback that receives updates to the content & configuration\n     *                   of the view.\n     * @return {Function} Returns a de-registration function used when the view is destroyed.\n     */\n    ViewService.prototype.registerUIView = function (uiView) {\n        trace_1.trace.traceViewServiceUIViewEvent(\"-> Registering\", uiView);\n        var uiViews = this.uiViews;\n        var fqnMatches = function (uiv) { return uiv.fqn === uiView.fqn; };\n        if (uiViews.filter(fqnMatches).length)\n            trace_1.trace.traceViewServiceUIViewEvent(\"!!!! duplicate uiView named:\", uiView);\n        uiViews.push(uiView);\n        this.sync();\n        return function () {\n            var idx = uiViews.indexOf(uiView);\n            if (idx === -1) {\n                trace_1.trace.traceViewServiceUIViewEvent(\"Tried removing non-registered uiView\", uiView);\n                return;\n            }\n            trace_1.trace.traceViewServiceUIViewEvent(\"<- Deregistering\", uiView);\n            common_1.removeFrom(uiViews)(uiView);\n        };\n    };\n    ;\n    /**\n     * Returns the list of views currently available on the page, by fully-qualified name.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.available = function () {\n        return this.uiViews.map(hof_1.prop(\"fqn\"));\n    };\n    /**\n     * Returns the list of views on the page containing loaded content.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.active = function () {\n        return this.uiViews.filter(hof_1.prop(\"$config\")).map(hof_1.prop(\"name\"));\n    };\n    /**\n     * Normalizes a view's name from a state.views configuration block.\n     *\n     * @param context the context object (state declaration) that the view belongs to\n     * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n     *\n     * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n     */\n    ViewService.normalizeUIViewTarget = function (context, rawViewName) {\n        if (rawViewName === void 0) { rawViewName = \"\"; }\n        // TODO: Validate incoming view name with a regexp to allow:\n        // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n        // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n        var viewAtContext = rawViewName.split(\"@\");\n        var uiViewName = viewAtContext[0] || \"$default\"; // default to unnamed view\n        var uiViewContextAnchor = predicates_1.isString(viewAtContext[1]) ? viewAtContext[1] : \"^\"; // default to parent context\n        // Handle relative view-name sugar syntax.\n        // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n        var relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n        if (relativeViewNameSugar) {\n            // Clobbers existing contextAnchor (rawViewName validation will fix this)\n            uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n            uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n        }\n        if (uiViewName.charAt(0) === '!') {\n            uiViewName = uiViewName.substr(1);\n            uiViewContextAnchor = \"\"; // target absolutely from root\n        }\n        // handle parent relative targeting \"^.^.^\"\n        var relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n        if (relativeMatch.exec(uiViewContextAnchor)) {\n            var anchor = uiViewContextAnchor.split(\".\").reduce((function (anchor, x) { return anchor.parent; }), context);\n            uiViewContextAnchor = anchor.name;\n        }\n        return { uiViewName: uiViewName, uiViewContextAnchor: uiViewContextAnchor };\n    };\n    return ViewService;\n}());\nexports.ViewService = ViewService;\n//# sourceMappingURL=view.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/view/view.js\n// module id = 37\n// module chunks = 0 1","/** @module state */ /** for typedoc */\n\"use strict\";\nvar stateMatcher_1 = require(\"./stateMatcher\");\nvar stateBuilder_1 = require(\"./stateBuilder\");\nvar stateQueueManager_1 = require(\"./stateQueueManager\");\nvar common_1 = require(\"../common/common\");\nvar StateRegistry = (function () {\n    function StateRegistry(urlMatcherFactory, urlRouterProvider) {\n        this.urlRouterProvider = urlRouterProvider;\n        this.states = {};\n        this.listeners = [];\n        this.matcher = new stateMatcher_1.StateMatcher(this.states);\n        this.builder = new stateBuilder_1.StateBuilder(this.matcher, urlMatcherFactory);\n        this.stateQueue = new stateQueueManager_1.StateQueueManager(this.states, this.builder, urlRouterProvider, this.listeners);\n        var rootStateDef = {\n            name: '',\n            url: '^',\n            views: null,\n            params: {\n                '#': { value: null, type: 'hash', dynamic: true }\n            },\n            abstract: true\n        };\n        var _root = this._root = this.stateQueue.register(rootStateDef);\n        _root.navigable = null;\n    }\n    /**\n     * Listen for a State Registry events\n     *\n     * Adds a callback that is invoked when states are registered or deregistered with the StateRegistry.\n     *\n     * #### Example:\n     * ```js\n     * let allStates = registry.get();\n     *\n     * // Later, invoke deregisterFn() to remove the listener\n     * let deregisterFn = registry.onStatesChanged((event, states) => {\n     *   switch(event) {\n     *     case: 'registered':\n     *       states.forEach(state => allStates.push(state));\n     *       break;\n     *     case: 'deregistered':\n     *       states.forEach(state => {\n     *         let idx = allStates.indexOf(state);\n     *         if (idx !== -1) allStates.splice(idx, 1);\n     *       });\n     *       break;\n     *   }\n     * });\n     * ```\n     *\n     * @param listener a callback function invoked when the registered states changes.\n     *        The function receives two parameters, `event` and `state`.\n     *        See [[StateRegistryListener]]\n     * @return a function that deregisters the listener\n     */\n    StateRegistry.prototype.onStatesChanged = function (listener) {\n        this.listeners.push(listener);\n        return function deregisterListener() {\n            common_1.removeFrom(this.listeners)(listener);\n        }.bind(this);\n    };\n    /**\n     * Gets the implicit root state\n     *\n     * Gets the root of the state tree.\n     * The root state is implicitly created by UI-Router.\n     * Note: this returns the internal [[State]] representation, not a [[StateDeclaration]]\n     *\n     * @return the root [[State]]\n     */\n    StateRegistry.prototype.root = function () {\n        return this._root;\n    };\n    /**\n     * Adds a state to the registry\n     *\n     * Registers a [[StateDeclaration]] or queues it for registration.\n     *\n     * Note: a state will be queued if the state's parent isn't yet registered.\n     * It will also be queued if the queue is not yet in [[StateQueueManager.autoFlush]] mode.\n     *\n     * @param stateDefinition the definition of the state to register.\n     * @returns the internal [[State]] object.\n     *          If the state was successfully registered, then the object is fully built (See: [[StateBuilder]]).\n     *          If the state was only queued, then the object is not fully built.\n     */\n    StateRegistry.prototype.register = function (stateDefinition) {\n        return this.stateQueue.register(stateDefinition);\n    };\n    /** @hidden */\n    StateRegistry.prototype._deregisterTree = function (state) {\n        var _this = this;\n        var all = this.get().map(function (s) { return s.$$state(); });\n        var getChildren = function (states) {\n            var children = all.filter(function (s) { return states.indexOf(s.parent) !== -1; });\n            return children.length === 0 ? children : children.concat(getChildren(children));\n        };\n        var children = getChildren([state]);\n        var deregistered = [state].concat(children).reverse();\n        deregistered.forEach(function (state) {\n            _this.urlRouterProvider.removeRule(state._urlRule);\n            delete _this.states[state.name];\n        });\n        return deregistered;\n    };\n    /**\n     * Removes a state from the registry\n     *\n     * This removes a state from the registry.\n     * If the state has children, they are are also removed from the registry.\n     *\n     * @param stateOrName the state's name or object representation\n     * @returns {State[]} a list of removed states\n     */\n    StateRegistry.prototype.deregister = function (stateOrName) {\n        var _state = this.get(stateOrName);\n        if (!_state)\n            throw new Error(\"Can't deregister state; not found: \" + stateOrName);\n        var deregisteredStates = this._deregisterTree(_state.$$state());\n        this.listeners.forEach(function (listener) { return listener(\"deregistered\", deregisteredStates.map(function (s) { return s.self; })); });\n        return deregisteredStates;\n    };\n    StateRegistry.prototype.get = function (stateOrName, base) {\n        var _this = this;\n        if (arguments.length === 0)\n            return Object.keys(this.states).map(function (name) { return _this.states[name].self; });\n        var found = this.matcher.find(stateOrName, base);\n        return found && found.self || null;\n    };\n    StateRegistry.prototype.decorator = function (name, func) {\n        return this.builder.builder(name, func);\n    };\n    return StateRegistry;\n}());\nexports.StateRegistry = StateRegistry;\n//# sourceMappingURL=stateRegistry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/stateRegistry.js\n// module id = 38\n// module chunks = 0 1","\"use strict\";\n/** @module state */ /** for typedoc */\nvar predicates_1 = require(\"../common/predicates\");\nvar glob_1 = require(\"../common/glob\");\nvar common_1 = require(\"../common/common\");\nvar StateMatcher = (function () {\n    function StateMatcher(_states) {\n        this._states = _states;\n    }\n    StateMatcher.prototype.isRelative = function (stateName) {\n        stateName = stateName || \"\";\n        return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n    };\n    StateMatcher.prototype.find = function (stateOrName, base) {\n        if (!stateOrName && stateOrName !== \"\")\n            return undefined;\n        var isStr = predicates_1.isString(stateOrName);\n        var name = isStr ? stateOrName : stateOrName.name;\n        if (this.isRelative(name))\n            name = this.resolvePath(name, base);\n        var state = this._states[name];\n        if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n            return state;\n        }\n        else if (isStr) {\n            var matches = common_1.values(this._states)\n                .filter(function (state) { return new glob_1.Glob(state.name).matches(name); });\n            if (matches.length > 1) {\n                console.log(\"stateMatcher.find: Found multiple matches for \" + name + \" using glob: \", matches.map(function (match) { return match.name; }));\n            }\n            return matches[0];\n        }\n        return undefined;\n    };\n    StateMatcher.prototype.resolvePath = function (name, base) {\n        if (!base)\n            throw new Error(\"No reference point given for path '\" + name + \"'\");\n        var baseState = this.find(base);\n        var splitName = name.split(\".\"), i = 0, pathLength = splitName.length, current = baseState;\n        for (; i < pathLength; i++) {\n            if (splitName[i] === \"\" && i === 0) {\n                current = baseState;\n                continue;\n            }\n            if (splitName[i] === \"^\") {\n                if (!current.parent)\n                    throw new Error(\"Path '\" + name + \"' not valid for state '\" + baseState.name + \"'\");\n                current = current.parent;\n                continue;\n            }\n            break;\n        }\n        var relName = splitName.slice(i).join(\".\");\n        return current.name + (current.name && relName ? \".\" : \"\") + relName;\n    };\n    return StateMatcher;\n}());\nexports.StateMatcher = StateMatcher;\n//# sourceMappingURL=stateMatcher.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/stateMatcher.js\n// module id = 39\n// module chunks = 0 1","\"use strict\";\n/** @module state */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar strings_1 = require(\"../common/strings\");\nvar hof_1 = require(\"../common/hof\");\nvar param_1 = require(\"../params/param\");\nvar resolvable_1 = require(\"../resolve/resolvable\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar parseUrl = function (url) {\n    if (!predicates_1.isString(url))\n        return false;\n    var root = url.charAt(0) === '^';\n    return { val: root ? url.substring(1) : url, root: root };\n};\nfunction nameBuilder(state) {\n    if (state.lazyLoad)\n        state.name = state.self.name + \".**\";\n    return state.name;\n}\nfunction selfBuilder(state) {\n    state.self.$$state = function () { return state; };\n    return state.self;\n}\nfunction dataBuilder(state) {\n    if (state.parent && state.parent.data) {\n        state.data = state.self.data = common_1.inherit(state.parent.data, state.data);\n    }\n    return state.data;\n}\nvar getUrlBuilder = function ($urlMatcherFactoryProvider, root) {\n    return function urlBuilder(state) {\n        var stateDec = state;\n        if (stateDec && stateDec.url && stateDec.lazyLoad) {\n            stateDec.url += \"{remainder:any}\"; // match any path (.*)\n        }\n        var parsed = parseUrl(stateDec.url), parent = state.parent;\n        var url = !parsed ? stateDec.url : $urlMatcherFactoryProvider.compile(parsed.val, {\n            params: state.params || {},\n            paramMap: function (paramConfig, isSearch) {\n                if (stateDec.reloadOnSearch === false && isSearch)\n                    paramConfig = common_1.extend(paramConfig || {}, { dynamic: true });\n                return paramConfig;\n            }\n        });\n        if (!url)\n            return null;\n        if (!$urlMatcherFactoryProvider.isMatcher(url))\n            throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n        return (parsed && parsed.root) ? url : ((parent && parent.navigable) || root()).url.append(url);\n    };\n};\nvar getNavigableBuilder = function (isRoot) {\n    return function navigableBuilder(state) {\n        return !isRoot(state) && state.url ? state : (state.parent ? state.parent.navigable : null);\n    };\n};\nvar getParamsBuilder = function (paramTypes) {\n    return function paramsBuilder(state) {\n        var makeConfigParam = function (config, id) { return param_1.Param.fromConfig(id, null, config, paramTypes); };\n        var urlParams = (state.url && state.url.parameters({ inherit: false })) || [];\n        var nonUrlParams = common_1.values(common_1.mapObj(common_1.omit(state.params || {}, urlParams.map(hof_1.prop('id'))), makeConfigParam));\n        return urlParams.concat(nonUrlParams).map(function (p) { return [p.id, p]; }).reduce(common_1.applyPairs, {});\n    };\n};\nfunction pathBuilder(state) {\n    return state.parent ? state.parent.path.concat(state) : [state];\n}\nfunction includesBuilder(state) {\n    var includes = state.parent ? common_1.extend({}, state.parent.includes) : {};\n    includes[state.name] = true;\n    return includes;\n}\n/**\n * This is a [[StateBuilder.builder]] function for the `resolve:` block on a [[StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[State]] object from a raw [[StateDeclaration]], this builder\n * validates the `resolve` property and converts it to a [[Resolvable]] array.\n *\n * resolve: input value can be:\n *\n * {\n *   // analyzed but not injected\n *   myFooResolve: function() { return \"myFooData\"; },\n *\n *   // function.toString() parsed, \"DependencyName\" dep as string (not min-safe)\n *   myBarResolve: function(DependencyName) { return DependencyName.fetchSomethingAsPromise() },\n *\n *   // Array split; \"DependencyName\" dep as string\n *   myBazResolve: [ \"DependencyName\", function(dep) { return dep.fetchSomethingAsPromise() },\n *\n *   // Array split; DependencyType dep as token (compared using ===)\n *   myQuxResolve: [ DependencyType, function(dep) { return dep.fetchSometingAsPromise() },\n *\n *   // val.$inject used as deps\n *   // where:\n *   //     corgeResolve.$inject = [\"DependencyName\"];\n *   //     function corgeResolve(dep) { dep.fetchSometingAsPromise() }\n *   // then \"DependencyName\" dep as string\n *   myCorgeResolve: corgeResolve,\n *\n *  // inject service by name\n *  // When a string is found, desugar creating a resolve that injects the named service\n *   myGraultResolve: \"SomeService\"\n * }\n *\n * or:\n *\n * [\n *   new Resolvable(\"myFooResolve\", function() { return \"myFooData\" }),\n *   new Resolvable(\"myBarResolve\", function(dep) { return dep.fetchSomethingAsPromise() }, [ \"DependencyName\" ]),\n *   { provide: \"myBazResolve\", useFactory: function(dep) { dep.fetchSomethingAsPromise() }, deps: [ \"DependencyName\" ] }\n * ]\n */\nfunction resolvablesBuilder(state) {\n    /** convert resolve: {} and resolvePolicy: {} objects to an array of tuples */\n    var objects2Tuples = function (resolveObj, resolvePolicies) {\n        return Object.keys(resolveObj || {}).map(function (token) { return ({ token: token, val: resolveObj[token], deps: undefined, policy: resolvePolicies[token] }); });\n    };\n    /** fetch DI annotations from a function or ng1-style array */\n    var annotate = function (fn) {\n        return fn['$inject'] || coreservices_1.services.$injector.annotate(fn, coreservices_1.services.$injector.strictDi);\n    };\n    /** true if the object has both `token` and `resolveFn`, and is probably a [[ResolveLiteral]] */\n    var isResolveLiteral = function (obj) { return !!(obj.token && obj.resolveFn); };\n    /** true if the object looks like a provide literal, or a ng2 Provider */\n    var isLikeNg2Provider = function (obj) { return !!((obj.provide || obj.token) && (obj.useValue || obj.useFactory || obj.useExisting || obj.useClass)); };\n    /** true if the object looks like a tuple from obj2Tuples */\n    var isTupleFromObj = function (obj) { return !!(obj && obj.val && (predicates_1.isString(obj.val) || predicates_1.isArray(obj.val) || predicates_1.isFunction(obj.val))); };\n    /** extracts the token from a Provider or provide literal */\n    var token = function (p) { return p.provide || p.token; };\n    /** Given a literal resolve or provider object, returns a Resolvable */\n    var literal2Resolvable = hof_1.pattern([\n        [hof_1.prop('resolveFn'), function (p) { return new resolvable_1.Resolvable(token(p), p.resolveFn, p.deps, p.policy); }],\n        [hof_1.prop('useFactory'), function (p) { return new resolvable_1.Resolvable(token(p), p.useFactory, (p.deps || p.dependencies), p.policy); }],\n        [hof_1.prop('useClass'), function (p) { return new resolvable_1.Resolvable(token(p), function () { return new p.useClass(); }, [], p.policy); }],\n        [hof_1.prop('useValue'), function (p) { return new resolvable_1.Resolvable(token(p), function () { return p.useValue; }, [], p.policy, p.useValue); }],\n        [hof_1.prop('useExisting'), function (p) { return new resolvable_1.Resolvable(token(p), common_1.identity, [p.useExisting], p.policy); }],\n    ]);\n    var tuple2Resolvable = hof_1.pattern([\n        [hof_1.pipe(hof_1.prop(\"val\"), predicates_1.isString), function (tuple) { return new resolvable_1.Resolvable(tuple.token, common_1.identity, [tuple.val], tuple.policy); }],\n        [hof_1.pipe(hof_1.prop(\"val\"), predicates_1.isArray), function (tuple) { return new resolvable_1.Resolvable(tuple.token, common_1.tail(tuple.val), tuple.val.slice(0, -1), tuple.policy); }],\n        [hof_1.pipe(hof_1.prop(\"val\"), predicates_1.isFunction), function (tuple) { return new resolvable_1.Resolvable(tuple.token, tuple.val, annotate(tuple.val), tuple.policy); }],\n    ]);\n    var item2Resolvable = hof_1.pattern([\n        [hof_1.is(resolvable_1.Resolvable), function (r) { return r; }],\n        [isResolveLiteral, literal2Resolvable],\n        [isLikeNg2Provider, literal2Resolvable],\n        [isTupleFromObj, tuple2Resolvable],\n        [hof_1.val(true), function (obj) { throw new Error(\"Invalid resolve value: \" + strings_1.stringify(obj)); }]\n    ]);\n    // If resolveBlock is already an array, use it as-is.\n    // Otherwise, assume it's an object and convert to an Array of tuples\n    var decl = state.resolve;\n    var items = predicates_1.isArray(decl) ? decl : objects2Tuples(decl, state.resolvePolicy || {});\n    return items.map(item2Resolvable);\n}\nexports.resolvablesBuilder = resolvablesBuilder;\n/**\n * @internalapi A internal global service\n *\n * StateBuilder is a factory for the internal [[State]] objects.\n *\n * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n * [[State]] object, which has an API and is used internally.\n *\n * Custom properties or API may be added to the internal [[State]] object by registering a decorator function\n * using the [[builder]] method.\n */\nvar StateBuilder = (function () {\n    function StateBuilder(matcher, $urlMatcherFactoryProvider) {\n        this.matcher = matcher;\n        var self = this;\n        var root = function () { return matcher.find(\"\"); };\n        var isRoot = function (state) { return state.name === \"\"; };\n        function parentBuilder(state) {\n            if (isRoot(state))\n                return null;\n            return matcher.find(self.parentName(state)) || root();\n        }\n        this.builders = {\n            name: [nameBuilder],\n            self: [selfBuilder],\n            parent: [parentBuilder],\n            data: [dataBuilder],\n            // Build a URLMatcher if necessary, either via a relative or absolute URL\n            url: [getUrlBuilder($urlMatcherFactoryProvider, root)],\n            // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n            navigable: [getNavigableBuilder(isRoot)],\n            params: [getParamsBuilder($urlMatcherFactoryProvider.paramTypes)],\n            // Each framework-specific ui-router implementation should define its own `views` builder\n            // e.g., src/ng1/statebuilders/views.ts\n            views: [],\n            // Keep a full path from the root down to this state as this is needed for state activation.\n            path: [pathBuilder],\n            // Speed up $state.includes() as it's used a lot\n            includes: [includesBuilder],\n            resolvables: [resolvablesBuilder]\n        };\n    }\n    /**\n     * Registers a [[BuilderFunction]] for a specific [[State]] property (e.g., `parent`, `url`, or `path`).\n     * More than one BuilderFunction can be registered for a given property.\n     *\n     * The BuilderFunction(s) will be used to define the property on any subsequently built [[State]] objects.\n     *\n     * @param name The name of the State property being registered for.\n     * @param fn The BuilderFunction which will be used to build the State property\n     * @returns a function which deregisters the BuilderFunction\n     */\n    StateBuilder.prototype.builder = function (name, fn) {\n        var builders = this.builders;\n        var array = builders[name] || [];\n        // Backwards compat: if only one builder exists, return it, else return whole arary.\n        if (predicates_1.isString(name) && !predicates_1.isDefined(fn))\n            return array.length > 1 ? array : array[0];\n        if (!predicates_1.isString(name) || !predicates_1.isFunction(fn))\n            return;\n        builders[name] = array;\n        builders[name].push(fn);\n        return function () { return builders[name].splice(builders[name].indexOf(fn, 1)) && null; };\n    };\n    /**\n     * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n     * properties and API built.\n     *\n     * @param state an uninitialized State object\n     * @returns the built State object\n     */\n    StateBuilder.prototype.build = function (state) {\n        var _a = this, matcher = _a.matcher, builders = _a.builders;\n        var parent = this.parentName(state);\n        if (parent && !matcher.find(parent))\n            return null;\n        for (var key in builders) {\n            if (!builders.hasOwnProperty(key))\n                continue;\n            var chain = builders[key].reduce(function (parentFn, step) { return function (_state) { return step(_state, parentFn); }; }, common_1.noop);\n            state[key] = chain(state);\n        }\n        return state;\n    };\n    StateBuilder.prototype.parentName = function (state) {\n        var name = state.name || \"\";\n        var segments = name.split('.');\n        if (segments.length > 1) {\n            if (state.parent) {\n                throw new Error(\"States that specify the 'parent:' property should not have a '.' in their name (\" + name + \")\");\n            }\n            var lastSegment = segments.pop();\n            if (lastSegment === '**')\n                segments.pop();\n            return segments.join(\".\");\n        }\n        if (!state.parent)\n            return \"\";\n        return predicates_1.isString(state.parent) ? state.parent : state.parent.name;\n    };\n    StateBuilder.prototype.name = function (state) {\n        var name = state.name;\n        if (name.indexOf('.') !== -1 || !state.parent)\n            return name;\n        var parentName = predicates_1.isString(state.parent) ? state.parent : state.parent.name;\n        return parentName ? parentName + \".\" + name : name;\n    };\n    return StateBuilder;\n}());\nexports.StateBuilder = StateBuilder;\n//# sourceMappingURL=stateBuilder.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/stateBuilder.js\n// module id = 40\n// module chunks = 0 1","\"use strict\";\n/** @module state */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar stateObject_1 = require(\"./stateObject\");\nvar StateQueueManager = (function () {\n    function StateQueueManager(states, builder, $urlRouterProvider, listeners) {\n        this.states = states;\n        this.builder = builder;\n        this.$urlRouterProvider = $urlRouterProvider;\n        this.listeners = listeners;\n        this.queue = [];\n    }\n    StateQueueManager.prototype.register = function (config) {\n        var _a = this, states = _a.states, queue = _a.queue, $state = _a.$state;\n        // Wrap a new object around the state so we can store our private details easily.\n        // @TODO: state = new State(extend({}, config, { ... }))\n        var state = common_1.inherit(new stateObject_1.State(), common_1.extend({}, config, {\n            self: config,\n            resolve: config.resolve || [],\n            toString: function () { return config.name; }\n        }));\n        if (!predicates_1.isString(state.name))\n            throw new Error(\"State must have a valid name\");\n        if (states.hasOwnProperty(state.name) || common_1.pluck(queue, 'name').indexOf(state.name) !== -1)\n            throw new Error(\"State '\" + state.name + \"' is already defined\");\n        queue.push(state);\n        if (this.$state) {\n            this.flush($state);\n        }\n        return state;\n    };\n    StateQueueManager.prototype.flush = function ($state) {\n        var _a = this, queue = _a.queue, states = _a.states, builder = _a.builder;\n        var registered = [], // states that got registered\n        orphans = [], // states that dodn't yet have a parent registered\n        previousQueueLength = {}; // keep track of how long the queue when an orphan was first encountered\n        while (queue.length > 0) {\n            var state = queue.shift();\n            var result = builder.build(state);\n            var orphanIdx = orphans.indexOf(state);\n            if (result) {\n                if (states.hasOwnProperty(state.name))\n                    throw new Error(\"State '\" + name + \"' is already defined\");\n                states[state.name] = state;\n                this.attachRoute($state, state);\n                if (orphanIdx >= 0)\n                    orphans.splice(orphanIdx, 1);\n                registered.push(state);\n                continue;\n            }\n            var prev = previousQueueLength[state.name];\n            previousQueueLength[state.name] = queue.length;\n            if (orphanIdx >= 0 && prev === queue.length) {\n                // Wait until two consecutive iterations where no additional states were dequeued successfully.\n                // throw new Error(`Cannot register orphaned state '${state.name}'`);\n                queue.push(state);\n                return states;\n            }\n            else if (orphanIdx < 0) {\n                orphans.push(state);\n            }\n            queue.push(state);\n        }\n        if (registered.length) {\n            this.listeners.forEach(function (listener) { return listener(\"registered\", registered.map(function (s) { return s.self; })); });\n        }\n        return states;\n    };\n    StateQueueManager.prototype.autoFlush = function ($state) {\n        this.$state = $state;\n        this.flush($state);\n    };\n    StateQueueManager.prototype.attachRoute = function ($state, state) {\n        var $urlRouterProvider = this.$urlRouterProvider;\n        if (state.abstract || !state.url)\n            return;\n        $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\n                if ($state.$current.navigable !== state || !common_1.equalForKeys($match, $stateParams)) {\n                    $state.transitionTo(state, $match, { inherit: true, source: \"url\" });\n                }\n            }], function (rule) { return state._urlRule = rule; });\n    };\n    return StateQueueManager;\n}());\nexports.StateQueueManager = StateQueueManager;\n//# sourceMappingURL=stateQueueManager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/stateQueueManager.js\n// module id = 41\n// module chunks = 0 1","/** @module state */ /** for typedoc */\n\"use strict\";\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\n/**\n * Internal representation of a UI-Router state.\n *\n * Instances of this class are created when a [[StateDeclaration]] is registered with the [[StateRegistry]].\n *\n * A registered [[StateDeclaration]] is augmented with a getter ([[StateDeclaration.$$state]]) which returns the corresponding [[State]] object.\n *\n * This class prototypally inherits from the corresponding [[StateDeclaration]].\n * Each of its own properties (i.e., `hasOwnProperty`) are built using builders from the [[StateBuilder]].\n */\nvar State = (function () {\n    function State(config) {\n        common_1.extend(this, config);\n        // Object.freeze(this);\n    }\n    /**\n     * Returns true if the provided parameter is the same state.\n     *\n     * Compares the identity of the state against the passed value, which is either an object\n     * reference to the actual `State` instance, the original definition object passed to\n     * `$stateProvider.state()`, or the fully-qualified name.\n     *\n     * @param ref Can be one of (a) a `State` instance, (b) an object that was passed\n     *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n     * @returns Returns `true` if `ref` matches the current `State` instance.\n     */\n    State.prototype.is = function (ref) {\n        return this === ref || this.self === ref || this.fqn() === ref;\n    };\n    /**\n     * @deprecated this does not properly handle dot notation\n     * @returns Returns a dot-separated name of the state.\n     */\n    State.prototype.fqn = function () {\n        if (!this.parent || !(this.parent instanceof this.constructor))\n            return this.name;\n        var name = this.parent.fqn();\n        return name ? name + \".\" + this.name : this.name;\n    };\n    /**\n     * Returns the root node of this state's tree.\n     *\n     * @returns The root of this state's tree.\n     */\n    State.prototype.root = function () {\n        return this.parent && this.parent.root() || this;\n    };\n    /**\n     * Gets the state's `Param`eters\n     *\n     * Gets [[Param]] information that is owned by the state.\n     * If `opts.inherit` is true, it also includes the ancestor states' [[Param]] information.\n     *\n     * @param opts options\n     */\n    State.prototype.parameters = function (opts) {\n        opts = common_1.defaults(opts, { inherit: true });\n        var inherited = opts.inherit && this.parent && this.parent.parameters() || [];\n        return inherited.concat(common_1.values(this.params));\n    };\n    /**\n     * Returns a single [[Param]] that is owned by the state\n     *\n     * If `opts.inherit` is true, it also searches the ancestor states` [[Param]] information.\n     * @param id the name of the [[Param]] to return\n     * @param opts options\n     */\n    State.prototype.parameter = function (id, opts) {\n        if (opts === void 0) { opts = {}; }\n        return (this.url && this.url.parameter(id, opts) ||\n            common_1.find(common_1.values(this.params), hof_1.propEq('id', id)) ||\n            opts.inherit && this.parent && this.parent.parameter(id));\n    };\n    State.prototype.toString = function () {\n        return this.fqn();\n    };\n    return State;\n}());\nexports.State = State;\n//# sourceMappingURL=stateObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/stateObject.js\n// module id = 42\n// module chunks = 0 1","\"use strict\";\n/** @module state */ /** */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar queue_1 = require(\"../common/queue\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar pathFactory_1 = require(\"../path/pathFactory\");\nvar node_1 = require(\"../path/node\");\nvar transitionService_1 = require(\"../transition/transitionService\");\nvar rejectFactory_1 = require(\"../transition/rejectFactory\");\nvar targetState_1 = require(\"./targetState\");\nvar param_1 = require(\"../params/param\");\nvar glob_1 = require(\"../common/glob\");\nvar common_2 = require(\"../common/common\");\nvar common_3 = require(\"../common/common\");\nvar resolveContext_1 = require(\"../resolve/resolveContext\");\n/**\n * Provides state related service functions\n *\n * This class provides services related to ui-router states.\n * An instance of this class is located on the global [[UIRouter]] object.\n */\nvar StateService = (function () {\n    /** @internalapi */\n    function StateService(router) {\n        this.router = router;\n        /** @internalapi */\n        this.invalidCallbacks = [];\n        /** @hidden */\n        this._defaultErrorHandler = function $defaultErrorHandler($error$) {\n            if ($error$ instanceof Error && $error$.stack) {\n                console.error($error$);\n                console.error($error$.stack);\n            }\n            else if ($error$ instanceof rejectFactory_1.Rejection) {\n                console.error($error$.toString());\n                if ($error$.detail && $error$.detail.stack)\n                    console.error($error$.detail.stack);\n            }\n            else {\n                console.error($error$);\n            }\n        };\n        var getters = ['current', '$current', 'params', 'transition'];\n        var boundFns = Object.keys(StateService.prototype).filter(function (key) { return getters.indexOf(key) === -1; });\n        common_3.bindFunctions(StateService.prototype, this, this, boundFns);\n    }\n    Object.defineProperty(StateService.prototype, \"transition\", {\n        /**\n         * The [[Transition]] currently in progress (or null)\n         *\n         * This is a passthrough through to [[UIRouterGlobals.transition]]\n         */\n        get: function () { return this.router.globals.transition; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"params\", {\n        /**\n         * The latest successful state parameters\n         *\n         * This is a passthrough through to [[UIRouterGlobals.params]]\n         */\n        get: function () { return this.router.globals.params; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"current\", {\n        /**\n         * The current [[StateDeclaration]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.current]]\n         */\n        get: function () { return this.router.globals.current; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"$current\", {\n        /**\n         * The current [[State]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.$current]]\n         */\n        get: function () { return this.router.globals.$current; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Handler for when [[transitionTo]] is called with an invalid state.\n     *\n     * Invokes the [[onInvalid]] callbacks, in natural order.\n     * Each callback's return value is checked in sequence until one of them returns an instance of TargetState.\n     * The results of the callbacks are wrapped in $q.when(), so the callbacks may return promises.\n     *\n     * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and the result returned.\n     *\n     * @internalapi\n     */\n    StateService.prototype._handleInvalidTargetState = function (fromPath, toState) {\n        var _this = this;\n        var fromState = pathFactory_1.PathFactory.makeTargetState(fromPath);\n        var globals = this.router.globals;\n        var latestThing = function () { return globals.transitionHistory.peekTail(); };\n        var latest = latestThing();\n        var callbackQueue = new queue_1.Queue(this.invalidCallbacks.slice());\n        var injector = new resolveContext_1.ResolveContext(fromPath).injector();\n        var checkForRedirect = function (result) {\n            if (!(result instanceof targetState_1.TargetState)) {\n                return;\n            }\n            var target = result;\n            // Recreate the TargetState, in case the state is now defined.\n            target = _this.target(target.identifier(), target.params(), target.options());\n            if (!target.valid())\n                return rejectFactory_1.Rejection.invalid(target.error()).toPromise();\n            if (latestThing() !== latest)\n                return rejectFactory_1.Rejection.superseded().toPromise();\n            return _this.transitionTo(target.identifier(), target.params(), target.options());\n        };\n        function invokeNextCallback() {\n            var nextCallback = callbackQueue.dequeue();\n            if (nextCallback === undefined)\n                return rejectFactory_1.Rejection.invalid(toState.error()).toPromise();\n            var callbackResult = coreservices_1.services.$q.when(nextCallback(toState, fromState, injector));\n            return callbackResult.then(checkForRedirect).then(function (result) { return result || invokeNextCallback(); });\n        }\n        return invokeNextCallback();\n    };\n    /**\n     * Registers an Invalid State handler\n     *\n     * Registers a [[OnInvalidCallback]] function to be invoked when [[StateService.transitionTo]]\n     * has been called with an invalid state reference parameter\n     *\n     * Example:\n     * ```js\n     * stateService.onInvalid(function(to, from, injector) {\n     *   if (to.name() === 'foo') {\n     *     let lazyLoader = injector.get('LazyLoadService');\n     *     return lazyLoader.load('foo')\n     *         .then(() => stateService.target('foo'));\n     *   }\n     * });\n     * ```\n     *\n     * @param {function} callback invoked when the toState is invalid\n     *   This function receives the (invalid) toState, the fromState, and an injector.\n     *   The function may optionally return a [[TargetState]] or a Promise for a TargetState.\n     *   If one is returned, it is treated as a redirect.\n     *\n     * @returns a function which deregisters the callback\n     */\n    StateService.prototype.onInvalid = function (callback) {\n        this.invalidCallbacks.push(callback);\n        return function deregisterListener() {\n            common_1.removeFrom(this.invalidCallbacks)(callback);\n        }.bind(this);\n    };\n    /**\n     * Reloads the current state\n     *\n     * A method that force reloads the current state, or a partial state hierarchy.\n     * All resolves are re-resolved, and components reinstantiated.\n     *\n     * #### Example:\n     * ```js\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * ```\n     *\n     * Note: `reload()` is just an alias for:\n     *\n     * ```js\n     * $state.transitionTo($state.current, $state.params, {\n     *   reload: true, inherit: false\n     * });\n     * ```\n     *\n     * @param reloadState A state name or a state object.\n     *    If present, this state and all its children will be reloaded, but ancestors will not reload.\n     *\n     * #### Example:\n     * ```js\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n     * //and current state is 'contacts.detail.item'\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * ```\n     *\n     * @returns A promise representing the state of the new transition. See [[StateService.go]]\n     */\n    StateService.prototype.reload = function (reloadState) {\n        return this.transitionTo(this.current, this.params, {\n            reload: predicates_1.isDefined(reloadState) ? reloadState : true,\n            inherit: false,\n            notify: false\n        });\n    };\n    ;\n    /**\n     * Transition to a different state or parameters\n     *\n     * Convenience method for transitioning to a new state.\n     *\n     * `$state.go` calls `$state.transitionTo` internally but automatically sets options to\n     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`.\n     * This allows you to easily use an absolute or relative to path and specify\n     * only the parameters you'd like to update (while letting unspecified parameters\n     * inherit from the currently active ancestor states).\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     *\n     * @param to Absolute state name, state object, or relative state path. Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to a parent state\n     * - `$state.go('^.sibling')` - will go to a sibling state\n     * - `$state.go('.child.grandchild')` - will go to grandchild state\n     *\n     * @param params A map of the parameters that will be sent to the state, will populate $stateParams.\n     *\n     *    Any parameters that are not specified will be inherited from currently defined parameters (because of `inherit: true`).\n     *    This allows, for example, going to a sibling state that shares parameters specified in a parent state.\n     *\n     *    Parameter inheritance only works between common ancestor states, I.e.\n     *    transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n     *    will get you all current parameters, etc.\n     *\n     * @param options Transition options\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     *\n     * - Possible success values:\n     *    - $state.current\n     *\n     * - Possible rejection reasons:\n     *   - transition superseded - when a newer transition has been started after this one\n     *   - transition aborted - when the transition is cancelled by a Transition Hook returning `false`\n     *   - transition failed - when a transition hook errors\n     *   - resolve error - when a resolve has errored or rejected\n     *\n     */\n    StateService.prototype.go = function (to, params, options) {\n        var defautGoOpts = { relative: this.$current, inherit: true };\n        var transOpts = common_1.defaults(options, defautGoOpts, transitionService_1.defaultTransOpts);\n        return this.transitionTo(to, params, transOpts);\n    };\n    ;\n    /**\n     * Creates a [[TargetState]]\n     *\n     * This is a factory method for creating a TargetState\n     *\n     * This may be returned from a Transition Hook to redirect a transition, for example.\n     */\n    StateService.prototype.target = function (identifier, params, options) {\n        if (options === void 0) { options = {}; }\n        // If we're reloading, find the state object to reload from\n        if (predicates_1.isObject(options.reload) && !options.reload.name)\n            throw new Error('Invalid reload state object');\n        var reg = this.router.stateRegistry;\n        options.reloadState = options.reload === true ? reg.root() : reg.matcher.find(options.reload, options.relative);\n        if (options.reload && !options.reloadState)\n            throw new Error(\"No such reload state '\" + (predicates_1.isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        var stateDefinition = reg.matcher.find(identifier, options.relative);\n        return new targetState_1.TargetState(identifier, stateDefinition, params, options);\n    };\n    ;\n    /**\n     * Low-level method for transitioning to a new state.\n     *\n     * The [[go]] method (which uses `transitionTo` internally) is recommended in most situations.\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to State name or state object.\n     * @param toParams A map of the parameters that will be sent to the state,\n     *      will populate $stateParams.\n     * @param options Transition options\n     *\n     * @returns A promise representing the state of the new transition. See [[go]]\n     */\n    StateService.prototype.transitionTo = function (to, toParams, options) {\n        var _this = this;\n        if (toParams === void 0) { toParams = {}; }\n        if (options === void 0) { options = {}; }\n        var router = this.router;\n        var globals = router.globals;\n        var transHistory = globals.transitionHistory;\n        options = common_1.defaults(options, transitionService_1.defaultTransOpts);\n        options = common_1.extend(options, { current: transHistory.peekTail.bind(transHistory) });\n        var ref = this.target(to, toParams, options);\n        var latestSuccess = globals.successfulTransitions.peekTail();\n        var rootPath = function () { return [new node_1.PathNode(_this.router.stateRegistry.root())]; };\n        var currentPath = latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n        if (!ref.exists())\n            return this._handleInvalidTargetState(currentPath, ref);\n        if (!ref.valid())\n            return common_1.silentRejection(ref.error());\n        /**\n         * Special handling for Ignored, Aborted, and Redirected transitions\n         *\n         * The semantics for the transition.run() promise and the StateService.transitionTo()\n         * promise differ. For instance, the run() promise may be rejected because it was\n         * IGNORED, but the transitionTo() promise is resolved because from the user perspective\n         * no error occurred.  Likewise, the transition.run() promise may be rejected because of\n         * a Redirect, but the transitionTo() promise is chained to the new Transition's promise.\n         */\n        var rejectedTransitionHandler = function (transition) { return function (error) {\n            if (error instanceof rejectFactory_1.Rejection) {\n                if (error.type === rejectFactory_1.RejectType.IGNORED) {\n                    // Consider ignored `Transition.run()` as a successful `transitionTo`\n                    router.urlRouter.update();\n                    return coreservices_1.services.$q.when(globals.current);\n                }\n                var detail = error.detail;\n                if (error.type === rejectFactory_1.RejectType.SUPERSEDED && error.redirected && detail instanceof targetState_1.TargetState) {\n                    // If `Transition.run()` was redirected, allow the `transitionTo()` promise to resolve successfully\n                    // by returning the promise for the new (redirect) `Transition.run()`.\n                    var redirect = transition.redirect(detail);\n                    return redirect.run().catch(rejectedTransitionHandler(redirect));\n                }\n                if (error.type === rejectFactory_1.RejectType.ABORTED) {\n                    router.urlRouter.update();\n                }\n            }\n            var errorHandler = _this.defaultErrorHandler();\n            errorHandler(error);\n            return coreservices_1.services.$q.reject(error);\n        }; };\n        var transition = this.router.transitionService.create(currentPath, ref);\n        var transitionToPromise = transition.run().catch(rejectedTransitionHandler(transition));\n        common_1.silenceUncaughtInPromise(transitionToPromise); // issue #2676\n        // Return a promise for the transition, which also has the transition object on it.\n        return common_1.extend(transitionToPromise, { transition: transition });\n    };\n    ;\n    /**\n     * Checks if the current state *is* the provided state\n     *\n     * Similar to [[includes]] but only checks for the full state name.\n     * If params is supplied then it will be tested for strict equality against the current\n     * active params object, so all params must match with none missing and no extras.\n     *\n     * #### Example:\n     * ```js\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     * ```\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * ```html\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * ```\n     *\n     * @param stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns Returns true if it is the state.\n     */\n    StateService.prototype.is = function (stateOrName, params, options) {\n        options = common_1.defaults(options, { relative: this.$current });\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!predicates_1.isDefined(state))\n            return undefined;\n        if (this.$current !== state)\n            return false;\n        return predicates_1.isDefined(params) && params !== null ? param_1.Param.equals(state.parameters(), this.params, params) : true;\n    };\n    ;\n    /**\n     * Checks if the current state *includes* the provided state\n     *\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * #### Example when `$state.$current.name === 'contacts.details.item'`\n     * ```js\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     * ```\n     *\n     * #### Glob Examples when `* $state.$current.name === 'contacts.details.item.url'`:\n     * ```js\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * ```\n     *\n     * @param stateOrName A partial name, relative name, glob pattern,\n     *   or state object to be searched for within the current state name.\n     * @param params A param object, e.g. `{sectionId: section.id}`,\n     *   that you'd like to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    StateService.prototype.includes = function (stateOrName, params, options) {\n        options = common_1.defaults(options, { relative: this.$current });\n        var glob = predicates_1.isString(stateOrName) && glob_1.Glob.fromString(stateOrName);\n        if (glob) {\n            if (!glob.matches(this.$current.name))\n                return false;\n            stateOrName = this.$current.name;\n        }\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n        if (!predicates_1.isDefined(state))\n            return undefined;\n        if (!predicates_1.isDefined(include[state.name]))\n            return false;\n        // @TODO Replace with Param.equals() ?\n        return params ? common_2.equalForKeys(param_1.Param.values(state.parameters(), params), this.params, Object.keys(params)) : true;\n    };\n    ;\n    /**\n     * Generates a URL for a state and parameters\n     *\n     * Returns the url for the given state populated with the given params.\n     *\n     * #### Example:\n     * ```js\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * ```\n     *\n     * @param stateOrName The state name or state object you'd like to generate a url from.\n     * @param params An object of parameter values to fill the state's required parameters.\n     * @param options Options object. The options are:\n     *\n     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n     *    ancestor with a valid url).\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'),\n     *    defines which state to be relative from.\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     *\n     * @returns {string} compiled state url\n     */\n    StateService.prototype.href = function (stateOrName, params, options) {\n        var defaultHrefOpts = {\n            lossy: true,\n            inherit: true,\n            absolute: false,\n            relative: this.$current\n        };\n        options = common_1.defaults(options, defaultHrefOpts);\n        params = params || {};\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!predicates_1.isDefined(state))\n            return null;\n        if (options.inherit)\n            params = this.params.$inherit(params, this.$current, state);\n        var nav = (state && options.lossy) ? state.navigable : state;\n        if (!nav || nav.url === undefined || nav.url === null) {\n            return null;\n        }\n        return this.router.urlRouter.href(nav.url, param_1.Param.values(state.parameters(), params), {\n            absolute: options.absolute\n        });\n    };\n    ;\n    /**\n     * Sets or gets the default [[transitionTo]] error handler.\n     *\n     * The error handler is called when a [[Transition]] is rejected or when any error occurred during the Transition.\n     * This includes errors caused by resolves and transition hooks.\n     *\n     * Note:\n     * This handler does not receive certain Transition rejections.\n     * Redirected and Ignored Transitions are not considered to be errors by [[StateService.transitionTo]].\n     *\n     * The built-in default error handler logs the error to the console.\n     *\n     * You can provide your own custom handler.\n     *\n     * #### Example:\n     * ```js\n     * stateService.defaultErrorHandler(function() {\n     *   // Do not log transitionTo errors\n     * });\n     * ```\n     *\n     * @param handler a global error handler function\n     * @returns the current global error handler\n     */\n    StateService.prototype.defaultErrorHandler = function (handler) {\n        return this._defaultErrorHandler = handler || this._defaultErrorHandler;\n    };\n    StateService.prototype.get = function (stateOrName, base) {\n        var reg = this.router.stateRegistry;\n        if (arguments.length === 0)\n            return reg.get();\n        return reg.get(stateOrName, base || this.$current);\n    };\n    return StateService;\n}());\nexports.StateService = StateService;\n//# sourceMappingURL=stateService.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/stateService.js\n// module id = 43\n// module chunks = 0 1","\"use strict\";\n/** @module core */ /** */\nvar stateParams_1 = require(\"./params/stateParams\");\nvar queue_1 = require(\"./common/queue\");\nvar common_1 = require(\"./common/common\");\n/**\n * Global mutable state\n */\nvar Globals = (function () {\n    function Globals(transitionService) {\n        var _this = this;\n        this.params = new stateParams_1.StateParams();\n        this.transitionHistory = new queue_1.Queue([], 1);\n        this.successfulTransitions = new queue_1.Queue([], 1);\n        var beforeNewTransition = function ($transition$) {\n            _this.transition = $transition$;\n            _this.transitionHistory.enqueue($transition$);\n            var updateGlobalState = function () {\n                _this.successfulTransitions.enqueue($transition$);\n                _this.$current = $transition$.$to();\n                _this.current = _this.$current.self;\n                common_1.copy($transition$.params(), _this.params);\n            };\n            $transition$.onSuccess({}, updateGlobalState, { priority: 10000 });\n            var clearCurrentTransition = function () { if (_this.transition === $transition$)\n                _this.transition = null; };\n            $transition$.promise.then(clearCurrentTransition, clearCurrentTransition);\n        };\n        transitionService.onBefore({}, beforeNewTransition);\n    }\n    return Globals;\n}());\nexports.Globals = Globals;\n//# sourceMappingURL=globals.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/globals.js\n// module id = 44\n// module chunks = 0 1","\"use strict\";\n/** @module params */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar StateParams = (function () {\n    function StateParams(params) {\n        if (params === void 0) { params = {}; }\n        common_1.extend(this, params);\n    }\n    /**\n     * Merges a set of parameters with all parameters inherited between the common parents of the\n     * current state and a given destination state.\n     *\n     * @param {Object} newParams The set of parameters which will be composited with inherited params.\n     * @param {Object} $current Internal definition of object representing the current state.\n     * @param {Object} $to Internal definition of object representing state to transition to.\n     */\n    StateParams.prototype.$inherit = function (newParams, $current, $to) {\n        var parents = common_1.ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n        for (var i in parents) {\n            if (!parents[i] || !parents[i].params)\n                continue;\n            parentParams = Object.keys(parents[i].params);\n            if (!parentParams.length)\n                continue;\n            for (var j in parentParams) {\n                if (inheritList.indexOf(parentParams[j]) >= 0)\n                    continue;\n                inheritList.push(parentParams[j]);\n                inherited[parentParams[j]] = this[parentParams[j]];\n            }\n        }\n        return common_1.extend({}, inherited, newParams);\n    };\n    ;\n    return StateParams;\n}());\nexports.StateParams = StateParams;\n//# sourceMappingURL=stateParams.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/params/stateParams.js\n// module id = 45\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/**\n * This module contains code for State Parameters.\n *\n * See [[ParamDeclaration]]\n *\n * @preferred @module params\n */ /** for typedoc */\n__export(require(\"./param\"));\n__export(require(\"./paramTypes\"));\n__export(require(\"./stateParams\"));\n__export(require(\"./type\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/params/module.js\n// module id = 46\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/** @module path */ /** for typedoc */\n__export(require(\"./node\"));\n__export(require(\"./pathFactory\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/path/module.js\n// module id = 47\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/** @module resolve */ /** for typedoc */\n__export(require(\"./interface\"));\n__export(require(\"./resolvable\"));\n__export(require(\"./resolveContext\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/resolve/module.js\n// module id = 48\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/**\n * The state subsystem\n *\n * This subsystem implements the ui-router state tree\n *\n * - The [[StateService]] has state-related service methods such as:\n *   - [[StateService.get]]: Get a registered [[StateDeclaration]] object\n *   - [[StateService.go]]: Transition from the current state to a new state\n *   - [[StateService.reload]]: Reload the current state\n *   - [[StateService.target]]: Get a [[TargetState]] (useful when redirecting from a Transition Hook)\n *   - [[StateService.onInvalid]]: Register a callback for when a transition to an invalid state is started\n *   - [[StateService.defaultErrorHandler]]: Register a global callback for when a transition errors\n * - The [[StateDeclaration]] interface defines the shape of a state declaration\n * - The [[StateRegistry]] contains all the registered states\n *   - States can be added/removed using the [[StateRegistry.register]] and [[StateRegistry.deregister]]\n *     - Note: Bootstrap state registration differs by front-end framework.\n *   - Get notified of state registration/deregistration using [[StateRegistry.onStatesChanged]].\n *\n * @preferred @module state\n */ /** for typedoc */\n__export(require(\"./stateBuilder\"));\n__export(require(\"./stateObject\"));\n__export(require(\"./stateMatcher\"));\n__export(require(\"./stateQueueManager\"));\n__export(require(\"./stateRegistry\"));\n__export(require(\"./stateService\"));\n__export(require(\"./targetState\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/module.js\n// module id = 49\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/**\n * This module contains APIs related to a Transition.\n *\n * See:\n * - [[TransitionService]]\n * - [[Transition]]\n * - [[HookFn]], [[TransitionHookFn]], [[TransitionStateHookFn]], [[HookMatchCriteria]], [[HookResult]]\n *\n * @internal @preferred @module transition\n */ /** for typedoc */\n__export(require(\"./hookBuilder\"));\n__export(require(\"./hookRegistry\"));\n__export(require(\"./rejectFactory\"));\n__export(require(\"./transition\"));\n__export(require(\"./transitionHook\"));\n__export(require(\"./transitionService\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/transition/module.js\n// module id = 50\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/** @module url */ /** for typedoc */\n__export(require(\"./urlMatcher\"));\n__export(require(\"./urlMatcherConfig\"));\n__export(require(\"./urlMatcherFactory\"));\n__export(require(\"./urlRouter\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/url/module.js\n// module id = 51\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/** @module view */ /** for typedoc */\n__export(require(\"./view\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/view/module.js\n// module id = 52\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/**\n * Naive, pure JS implementation of core ui-router services\n *\n * @module justjs\n */ /** */\n__export(require(\"./index\"));\nvar coreservices_1 = require(\"./common/coreservices\");\nvar strings_1 = require(\"./common/strings\");\nvar predicates_1 = require(\"./common/predicates\");\nvar common_1 = require(\"./common/common\");\n/** $q-like promise api */\ncoreservices_1.services.$q = (function (executor) { return new Promise(executor); });\ncoreservices_1.services.$q.when = function (val) { return Promise.resolve(val); };\ncoreservices_1.services.$q.reject = function (val) { return Promise.reject(val); };\ncoreservices_1.services.$q.defer = function () {\n    var deferred = {};\n    deferred.promise = new Promise(function (resolve, reject) {\n        deferred.resolve = resolve;\n        deferred.reject = reject;\n    });\n    return deferred;\n};\ncoreservices_1.services.$q.all = function (promises) {\n    if (predicates_1.isArray(promises)) {\n        return Promise.all(promises);\n    }\n    if (predicates_1.isObject(promises)) {\n        var p = promises;\n        // Convert promises map to promises array.\n        // When each promise resolves, map it to a tuple { key: key, val: val }\n        var objectToTuples = Object.keys(promises)\n            .map(function (key) { return p[key].then(function (val) { return ({ key: key, val: val }); }); });\n        var tuplesToObject = function (values) {\n            return values.reduce(function (acc, tuple) { acc[tuple.key] = tuple.val; return acc; }, {});\n        };\n        // Then wait for all promises to resolve, and convert them back to an object\n        return coreservices_1.services.$q.all(objectToTuples).then(tuplesToObject);\n    }\n};\n// angular1-like injector api\n// globally available injectables\nvar globals = {};\ncoreservices_1.services.$injector = {\n    get: function (name) { return globals[name]; },\n    has: function (name) { return coreservices_1.services.$injector.get(name) != null; },\n    invoke: function (fn, context, locals) {\n        var all = common_1.extend({}, globals, locals || {});\n        var params = coreservices_1.services.$injector.annotate(fn);\n        var ensureExist = common_1.assertPredicate(function (key) { return all.hasOwnProperty(key); }, function (key) { return (\"Could not find Dependency Injection token: \" + strings_1.stringify(key)); });\n        var args = params.filter(ensureExist).map(function (x) { return all[x]; });\n        if (predicates_1.isFunction(fn))\n            return fn.apply(context, args);\n        return fn.slice(-1)[0].apply(context, args);\n    },\n    // http://stackoverflow.com/questions/1007981\n    annotate: function (fn) {\n        var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n        var ARGUMENT_NAMES = /([^\\s,]+)/g;\n        if (!predicates_1.isInjectable(fn))\n            throw new Error(\"Not an injectable function: \" + fn);\n        if (fn && fn['$inject'])\n            return fn['$inject'];\n        if (predicates_1.isArray(fn))\n            return fn.slice(0, -1);\n        var fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n        var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n        return result || [];\n    }\n};\nvar loc = coreservices_1.services.location;\nloc.hash = function () { return \"\"; };\nloc.path = function () { return location.hash.replace(/^#/, \"\"); };\nloc.search = function () { return location.search; };\nloc.setUrl = function (url, replace) {\n    if (replace === void 0) { replace = true; }\n    if (url)\n        location.hash = url;\n};\nloc.onChange = function (cb) {\n    window.addEventListener(\"hashchange\", cb, false);\n};\nvar locCfg = coreservices_1.services.locationConfig;\nlocCfg.port = function () { return location.port; };\nlocCfg.protocol = function () { return location.protocol; };\nlocCfg.host = function () { return location.host; };\nlocCfg.baseHref = function () { return \"\"; };\nlocCfg.html5Mode = function () { return false; };\nlocCfg.hashPrefix = function () { return \"\"; };\n//# sourceMappingURL=justjs.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/justjs.js\n// module id = 53\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/of.js\n// module id = 54\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Registers handlers for handling emitted values, error and completions from the observable, and\n     *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n     * @method subscribe\n     * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n     * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled\n     * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this);\n        }\n        else {\n            sink.add(this._subscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.$$observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observable.js\n// module id = 55\n// module chunks = 0 1","\"use strict\";\nvar objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n};\nexports.root = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);\nvar freeGlobal = objectTypes[typeof global] && global;\nif (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    exports.root = freeGlobal;\n}\n//# sourceMappingURL=root.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/root.js\n// module id = 56\n// module chunks = 0 1","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.$$rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber();\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/toSubscriber.js\n// module id = 57\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parent, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parent = _parent;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            context = observerOrNext;\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (isFunction_1.isFunction(context.unsubscribe)) {\n                this.add(context.unsubscribe.bind(context));\n            }\n            context.unsubscribe = this.unsubscribe.bind(this);\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parent = this._parent;\n            if (!_parent.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parent, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._error) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parent.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parent.syncErrorValue = err;\n                _parent.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._complete) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._complete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._complete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parent = this._parent;\n        this._context = null;\n        this._parent = null;\n        _parent.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscriber.js\n// module id = 58\n// module chunks = 0 1","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isFunction.js\n// module id = 59\n// module chunks = 0 1","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this._subscriptions = null;\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                (errors = errors || []).push(errorObject_1.errorObject.e);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(err.errors);\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var sub = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                sub = new Subscription(teardown);\n            case 'object':\n                if (sub.closed || typeof sub.unsubscribe !== 'function') {\n                    break;\n                }\n                else if (this.closed) {\n                    sub.unsubscribe();\n                }\n                else {\n                    (this._subscriptions || (this._subscriptions = [])).push(sub);\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        return sub;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        // HACK: This might be redundant because of the logic in `add()`\n        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {\n            return;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\n//# sourceMappingURL=Subscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscription.js\n// module id = 60\n// module chunks = 0 1","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isArray.js\n// module id = 61\n// module chunks = 0 1","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isObject.js\n// module id = 62\n// module chunks = 0 1","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/tryCatch.js\n// module id = 63\n// module chunks = 0 1","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/errorObject.js\n// module id = 64\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/UnsubscriptionError.js\n// module id = 65\n// module chunks = 0 1","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observer.js\n// module id = 66\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n//# sourceMappingURL=rxSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/rxSubscriber.js\n// module id = 67\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.$$observable = getSymbolObservable(root_1.root);\n//# sourceMappingURL=observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/observable.js\n// module id = 68\n// module chunks = 0 1","\"use strict\";\nvar ArrayObservable_1 = require('./ArrayObservable');\nexports.of = ArrayObservable_1.ArrayObservable.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/of.js\n// module id = 69\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` Scheduler, which means the `next`\n     * notifications are sent synchronously, although with a different Scheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nexports.ArrayObservable = ArrayObservable;\n//# sourceMappingURL=ArrayObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/ArrayObservable.js\n// module id = 70\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nexports.ScalarObservable = ScalarObservable;\n//# sourceMappingURL=ScalarObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/ScalarObservable.js\n// module id = 71\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nexports.EmptyObservable = EmptyObservable;\n//# sourceMappingURL=EmptyObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/EmptyObservable.js\n// module id = 72\n// module chunks = 0 1","\"use strict\";\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isScheduler.js\n// module id = 73\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar combineLatest_1 = require('../../observable/combineLatest');\nObservable_1.Observable.combineLatest = combineLatest_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/combineLatest.js\n// module id = 74\n// module chunks = 0 1","\"use strict\";\nvar isScheduler_1 = require('../util/isScheduler');\nvar isArray_1 = require('../util/isArray');\nvar ArrayObservable_1 = require('./ArrayObservable');\nvar combineLatest_1 = require('../operator/combineLatest');\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable, in order, and\n * collecting an array of each of the most recent values any time any of the\n * input Observables emits, then either taking that array and passing it as\n * arguments to an optional `project` function and emitting the return value of\n * that, or just emitting the array of recent values directly if there is no\n * `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} observable1 An input Observable to combine with the\n * source Observable.\n * @param {Observable} observable2 An input Observable to combine with the\n * source Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    var scheduler = null;\n    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/combineLatest.js\n// module id = 75\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar isArray_1 = require('../util/isArray');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar none = {};\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    observables.unshift(this);\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n/* tslint:enable:max-line-length */\nvar CombineLatestOperator = (function () {\n    function CombineLatestOperator(project) {\n        this.project = project;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new CombineLatestSubscriber(subscriber, this.project));\n    };\n    return CombineLatestOperator;\n}());\nexports.CombineLatestOperator = CombineLatestOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = (function (_super) {\n    __extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, project) {\n        _super.call(this, destination);\n        this.project = project;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(none);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === none ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.project) {\n                this._tryProject(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryProject = function (values) {\n        var result;\n        try {\n            result = this.project.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.CombineLatestSubscriber = CombineLatestSubscriber;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/combineLatest.js\n// module id = 76\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nexports.OuterSubscriber = OuterSubscriber;\n//# sourceMappingURL=OuterSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/OuterSubscriber.js\n// module id = 77\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('./root');\nvar isArray_1 = require('./isArray');\nvar isPromise_1 = require('./isPromise');\nvar Observable_1 = require('../Observable');\nvar iterator_1 = require('../symbol/iterator');\nvar InnerSubscriber_1 = require('../InnerSubscriber');\nvar observable_1 = require('../symbol/observable');\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            return result.subscribe(destination);\n        }\n    }\n    if (isArray_1.isArray(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root_1.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (typeof result[iterator_1.$$iterator] === 'function') {\n        var iterator = result[iterator_1.$$iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (typeof result[observable_1.$$observable] === 'function') {\n        var obs = result[observable_1.$$observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new Error('invalid observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        destination.error(new TypeError('unknown type returned'));\n    }\n    return null;\n}\nexports.subscribeToResult = subscribeToResult;\n//# sourceMappingURL=subscribeToResult.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/subscribeToResult.js\n// module id = 78\n// module chunks = 0 1","\"use strict\";\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nexports.isPromise = isPromise;\n//# sourceMappingURL=isPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isPromise.js\n// module id = 79\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nif (typeof Symbol === 'function') {\n    if (Symbol.iterator) {\n        exports.$$iterator = Symbol.iterator;\n    }\n    else if (typeof Symbol.for === 'function') {\n        exports.$$iterator = Symbol.for('iterator');\n    }\n}\nelse {\n    if (root_1.root.Set && typeof new root_1.root.Set()['@@iterator'] === 'function') {\n        // Bug for mozilla version\n        exports.$$iterator = '@@iterator';\n    }\n    else if (root_1.root.Map) {\n        // es6-shim specific logic\n        var keys = Object.getOwnPropertyNames(root_1.root.Map.prototype);\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (key !== 'entries' && key !== 'size' && root_1.root.Map.prototype[key] === root_1.root.Map.prototype['entries']) {\n                exports.$$iterator = key;\n                break;\n            }\n        }\n    }\n    else {\n        exports.$$iterator = '@@iterator';\n    }\n}\n//# sourceMappingURL=iterator.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/iterator.js\n// module id = 80\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nexports.InnerSubscriber = InnerSubscriber;\n//# sourceMappingURL=InnerSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/InnerSubscriber.js\n// module id = 81\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromPromise_1 = require('../../observable/fromPromise');\nObservable_1.Observable.fromPromise = fromPromise_1.fromPromise;\n//# sourceMappingURL=fromPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/fromPromise.js\n// module id = 82\n// module chunks = 0 1","\"use strict\";\nvar PromiseObservable_1 = require('./PromiseObservable');\nexports.fromPromise = PromiseObservable_1.PromiseObservable.create;\n//# sourceMappingURL=fromPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/fromPromise.js\n// module id = 83\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PromiseObservable = (function (_super) {\n    __extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {Promise<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional Scheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable_1.Observable));\nexports.PromiseObservable = PromiseObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/PromiseObservable.js\n// module id = 84\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar switchMap_1 = require('../../operator/switchMap');\nObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/switchMap.js\n// module id = 85\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return this.lift(new SwitchMapOperator(project, resultSelector));\n}\nexports.switchMap = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/switchMap.js\n// module id = 86\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeMap_1 = require('../../operator/mergeMap');\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/mergeMap.js\n// module id = 87\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/mergeMap.js\n// module id = 88\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concat_1 = require('../../operator/concat');\nObservable_1.Observable.prototype.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/concat.js\n// module id = 89\n// module chunks = 0 1","\"use strict\";\nvar isScheduler_1 = require('../util/isScheduler');\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar mergeAll_1 = require('./mergeAll');\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return concatStatic.apply(void 0, [this].concat(observables));\n}\nexports.concat = concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins multiple Observables together by subscribing to them one at a time and\n * merging their results into the output Observable. Will wait for each\n * Observable to complete before moving on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} input1 An input Observable to concatenate with others.\n * @param {Observable} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concatStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var scheduler = null;\n    var args = observables;\n    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n        scheduler = args.pop();\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatStatic = concatStatic;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/concat.js\n// module id = 90\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return this.lift(new MergeAllOperator(concurrent));\n}\nexports.mergeAll = mergeAll;\nvar MergeAllOperator = (function () {\n    function MergeAllOperator(concurrent) {\n        this.concurrent = concurrent;\n    }\n    MergeAllOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new MergeAllSubscriber(observer, this.concurrent));\n    };\n    return MergeAllOperator;\n}());\nexports.MergeAllOperator = MergeAllOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeAllSubscriber = (function (_super) {\n    __extends(MergeAllSubscriber, _super);\n    function MergeAllSubscriber(destination, concurrent) {\n        _super.call(this, destination);\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n    }\n    MergeAllSubscriber.prototype._next = function (observable) {\n        if (this.active < this.concurrent) {\n            this.active++;\n            this.add(subscribeToResult_1.subscribeToResult(this, observable));\n        }\n        else {\n            this.buffer.push(observable);\n        }\n    };\n    MergeAllSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeAllSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeAllSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeAllSubscriber = MergeAllSubscriber;\n//# sourceMappingURL=mergeAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/mergeAll.js\n// module id = 91\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/map.js\n// module id = 92\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    if (typeof project !== 'function') {\n        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return this.lift(new MapOperator(project, thisArg));\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/map.js\n// module id = 93\n// module chunks = 0 1","/** @ng2api @module core */ /** */\r\nimport {NgModuleFactoryLoader, NgModuleRef, Injector, NgModuleFactory, Type, Compiler} from \"@angular/core\";\r\nimport {Transition, LazyLoadResult, UIRouter, Resolvable, NATIVE_INJECTOR_TOKEN, isString} from \"ui-router-core\";\r\nimport {RootModule, StatesModule, UIROUTER_ROOT_MODULE, UIROUTER_MODULE_TOKEN} from \"./uiRouterNgModule\";\r\nimport {applyModuleConfig} from \"./uiRouterConfig\";\r\n\r\nexport type ModuleTypeCallback = () => Type<any> | Promise<Type<any>>;\r\nexport type NgModuleToLoad = string | ModuleTypeCallback;\r\n\r\n/**\r\n * Returns a function which lazy loads a nested module\r\n *\r\n * Use this function as a [[StateDeclaration.lazyLoad]] property to lazy load an NgModule and its state.\r\n *\r\n * Example using `System.import()`:\r\n * ```js\r\n * {\r\n *   name: 'home',\r\n *   url: '/home',\r\n *   lazyLoad: loadNgModule(() => System.import('./home.module').then(result => result.HomeModule))\r\n * }\r\n * ```\r\n *\r\n * Example using `NgModuleFactoryLoader`:\r\n * ```js\r\n * {\r\n *   name: 'home',\r\n *   url: '/home',\r\n *   lazyLoad: loadNgModule('./home.module')\r\n * }\r\n * ```\r\n *\r\n * @param moduleToLoad\r\n *    If a string, it should be the path to the NgModule code, which will then be loaded by the `NgModuleFactoryLoader`.\r\n *    If a function, the function should load the NgModule code and return a reference to the `NgModule` class being loaded.\r\n *\r\n * @returns A function which takes a transition, which:\r\n * - Gets the Injector (scoped properly for the destination state)\r\n * - Loads and creates the NgModule\r\n * - Finds the \"replacement state\" for the target state, and adds the new NgModule Injector to it (as a resolve)\r\n * - Returns the new states array\r\n */\r\nexport function loadNgModule(moduleToLoad: NgModuleToLoad): (transition: Transition) => Promise<LazyLoadResult> {\r\n  return (transition: Transition) => {\r\n    const ng2Injector = transition.injector().get(NATIVE_INJECTOR_TOKEN);\r\n\r\n    const createModule = (factory: NgModuleFactory<any>) =>\r\n        factory.create(ng2Injector);\r\n\r\n    const applyModule = (moduleRef: NgModuleRef<any>) =>\r\n        applyNgModule(transition, moduleRef);\r\n\r\n    return loadModuleFactory(moduleToLoad, ng2Injector)\r\n        .then(createModule)\r\n        .then(applyModule);\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the module factory that can be used to instantiate a module\r\n *\r\n * For strings this:\r\n * - Finds the correct NgModuleFactoryLoader\r\n * - Loads the new NgModuleFactory from the path string (async)\r\n *\r\n * For a Type<any> or Promise<Type<any>> this:\r\n * - Compiles the component type (if not running with AOT)\r\n * - Returns the NgModuleFactory resulting from compilation (or direct loading if using AOT) as a Promise\r\n *\r\n * @internalapi\r\n */\r\nexport function loadModuleFactory(moduleToLoad: NgModuleToLoad, ng2Injector: Injector): Promise<NgModuleFactory<any>> {\r\n  if (isString(moduleToLoad)) {\r\n    return ng2Injector.get(NgModuleFactoryLoader).load(moduleToLoad);\r\n  }\r\n\r\n  const compiler: Compiler = ng2Injector.get(Compiler);\r\n  const offlineMode = compiler instanceof Compiler;\r\n  const loadChildrenPromise = Promise.resolve(moduleToLoad());\r\n  const compileAsync = (moduleType: Type<any>) =>\r\n      compiler.compileModuleAsync(moduleType);\r\n\r\n  return offlineMode ? loadChildrenPromise : loadChildrenPromise.then(compileAsync);\r\n}\r\n\r\n/**\r\n * Apply the UI-Router Modules found in the lazy loaded module.\r\n *\r\n * Apply the Lazy Loaded NgModule's newly created Injector to the right state in the state tree.\r\n *\r\n * Lazy loading uses a placeholder state which is removed (and replaced) after the module is loaded.\r\n * The NgModule should include a state with the same name as the placeholder.\r\n *\r\n * Find the *newly loaded state* with the same name as the *placeholder state*.\r\n * The NgModule's Injector (and ComponentFactoryResolver) will be added to that state.\r\n * The Injector/Factory are used when creating Components for the `replacement` state and all its children.\r\n *\r\n * @internalapi\r\n */\r\nexport function applyNgModule(transition: Transition, ng2Module: NgModuleRef<any>): LazyLoadResult {\r\n  let injector = ng2Module.injector;\r\n  let parentInjector = <Injector> ng2Module.injector['parent'];\r\n  let uiRouter: UIRouter = injector.get(UIRouter);\r\n\r\n  let originalName = transition.to().name;\r\n  let originalState = uiRouter.stateRegistry.get(originalName);\r\n\r\n  let newRootModules: RootModule[] = multiProviderParentChildDelta(parentInjector, injector, UIROUTER_ROOT_MODULE);\r\n\r\n  if (newRootModules.length) {\r\n    console.log(newRootModules);\r\n    throw new Error('Lazy loaded modules should not contain a UIRouterModule.forRoot() module');\r\n  }\r\n\r\n  let newModules: RootModule[] = multiProviderParentChildDelta(parentInjector, injector, UIROUTER_MODULE_TOKEN);\r\n  newModules.forEach(module => applyModuleConfig(uiRouter, injector, module));\r\n\r\n  let replacementState = uiRouter.stateRegistry.get(originalName);\r\n  if (replacementState === originalState) {\r\n    throw new Error(`The Future State named '${originalName}' lazy loaded an NgModule. That NgModule should also have a UIRouterModule.forChild() state named '${originalName}' to replace the Future State, but it did not.`);\r\n  }\r\n\r\n  // Supply the newly loaded states with the Injector from the lazy loaded NgModule\r\n  replacementState.$$state().resolvables.push(Resolvable.fromData(NATIVE_INJECTOR_TOKEN, injector));\r\n\r\n  return {};\r\n}\r\n\r\n/**\r\n * Returns the new dependency injection values from the Child Injector\r\n *\r\n * When a DI token is defined as multi: true, the child injector\r\n * can add new values for the token.\r\n *\r\n * This function returns the values added by the child injector,  and excludes all values from the parent injector.\r\n *\r\n * @internalapi\r\n */\r\nexport function multiProviderParentChildDelta(parent: Injector, child: Injector, token: any) {\r\n  let childVals: RootModule[] = child.get(token);\r\n  let parentVals: RootModule[] = parent.get(token);\r\n  return childVals.filter(val => parentVals.indexOf(val) === -1);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/lazyLoadNgModule.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_95__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"@angular/core\",\"amd\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"commonjs\":\"@angular/core\"}\n// module id = 95\n// module chunks = 0 1","/** @ng2api @module core */ /** */\r\nimport {Ng2StateDeclaration} from \"./interface\";\r\nimport {NgModule, OpaqueToken, ModuleWithProviders, ANALYZE_FOR_ENTRY_COMPONENTS, Provider, Type} from \"@angular/core\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {_UIROUTER_DIRECTIVES} from \"./directives/directives\";\r\nimport {UIView} from \"./directives/uiView\";\r\nimport {RawParams} from \"ui-router-core\";\r\nimport {identity} from \"ui-router-core\";\r\nimport {LocationStrategy, HashLocationStrategy, PathLocationStrategy} from \"@angular/common\";\r\nimport {_UIROUTER_INSTANCE_PROVIDERS, _UIROUTER_SERVICE_PROVIDERS} from \"./providers\";\r\n\r\nexport function makeRootProviders(module: StatesModule): Provider[] {\r\n    return [\r\n        { provide: UIROUTER_ROOT_MODULE, useValue: module, multi: true},\r\n        { provide: UIROUTER_MODULE_TOKEN,        useValue: module,              multi: true },\r\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: module.states || [], multi: true },\r\n    ];\r\n}\r\n\r\nexport function makeChildProviders(module: StatesModule): Provider[] {\r\n    return [\r\n        { provide: UIROUTER_MODULE_TOKEN,        useValue: module,              multi: true },\r\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: module.states || [], multi: true },\r\n    ];\r\n}\r\n\r\nexport function locationStrategy(useHash) {\r\n    return { provide: LocationStrategy, useClass: useHash ? HashLocationStrategy : PathLocationStrategy };\r\n}\r\n\r\n/**\r\n * Creates UI-Router Modules\r\n *\r\n * This class has two static factory methods which create UIRouter Modules.\r\n * A UI-Router Module is an [Angular 2 NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\r\n * with support for UI-Router.\r\n *\r\n * ### UIRouter Directives\r\n *\r\n * When a UI-Router Module is imported into a `NgModule`, that module's components\r\n * can use the UIRouter Directives such as [[UIView]], [[UISref]], [[UISrefActive]].\r\n *\r\n * ### State Definitions\r\n *\r\n * State definitions found in the `states:` property are provided to the Dependency Injector.\r\n * This enables UI-Router to automatically register the states with the [[StateRegistry]] at bootstrap (and during lazy load).\r\n *\r\n * ### Entry Components\r\n *\r\n * Any routed components are added as `entryComponents:` so they will get compiled.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [_UIROUTER_DIRECTIVES],\r\n  exports: [_UIROUTER_DIRECTIVES],\r\n  entryComponents: [UIView],\r\n})\r\nexport class UIRouterModule {\r\n  /**\r\n   * Creates a UI-Router Module for the root (bootstrapped) application module to import\r\n   *\r\n   * This factory function creates an [Angular 2 NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\r\n   * with UI-Router support.\r\n   *\r\n   * The `forRoot` module should be added to the `imports:` of the `NgModule` being bootstrapped.\r\n   * An application should only create and import a single `NgModule` using `forRoot()`.\r\n   * All other modules should be created using [[UIRouterModule.forChild]].\r\n   *\r\n   * Unlike `forChild`, an `NgModule` returned by this factory provides the [[UIRouter]] singleton object.\r\n   * This factory also accepts root-level router configuration.\r\n   * These are the only differences between `forRoot` and `forChild`.\r\n   *\r\n   * Example:\r\n   * ```js\r\n   * let routerConfig = {\r\n   *   otherwise: '/home',\r\n   *   states: [homeState, aboutState]\r\n   * };\r\n   *\r\n   * @ NgModule({\r\n   *   imports: [\r\n   *     BrowserModule,\r\n   *     UIRouterModule.forRoot(routerConfig),\r\n   *     FeatureModule1\r\n   *   ]\r\n   * })\r\n   * class MyRootAppModule {}\r\n   *\r\n   * browserPlatformDynamic.bootstrapModule(MyRootAppModule);\r\n   * ```\r\n   *\r\n   * @param config declarative UI-Router configuration\r\n   * @returns an `NgModule` which provides the [[UIRouter]] singleton instance\r\n   */\r\n  static forRoot(config: RootModule = {}): ModuleWithProviders {\r\n    return {\r\n      ngModule: UIRouterModule,\r\n      providers: [\r\n        _UIROUTER_INSTANCE_PROVIDERS,\r\n        _UIROUTER_SERVICE_PROVIDERS,\r\n        locationStrategy(config.useHash),\r\n        ...makeRootProviders(config),\r\n      ]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates an `NgModule` for a UIRouter module\r\n   *\r\n   * This function creates an [Angular 2 NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\r\n   * with UI-Router support.\r\n   *\r\n   * #### Example:\r\n   * ```js\r\n   * var homeState = { name: 'home', url: '/home', component: Home };\r\n   * var aboutState = { name: 'about', url: '/about', component: About };\r\n   *\r\n   * @ NgModule({\r\n   *   imports: [\r\n   *     UIRouterModule.forChild({ states: [ homeState, aboutState ] }),\r\n   *     SharedModule,\r\n   *   ],\r\n   *   declarations: [ Home, About ],\r\n   * })\r\n   * export class AppModule {};\r\n   * ```\r\n   *\r\n   * @param module UI-Router module options\r\n   * @returns an `NgModule`\r\n   */\r\n  static forChild(module: StatesModule = {}): ModuleWithProviders {\r\n    return {\r\n      ngModule: UIRouterModule,\r\n      providers: makeChildProviders(module),\r\n    }\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * UI-Router declarative configuration which can be provided to [[UIRouterModule.forRoot]]\r\n */\r\nexport interface RootModule extends StatesModule {\r\n  /**\r\n   * Chooses a `LocationStrategy`.\r\n   *\r\n   * The location strategy enables either HTML5 Push State\r\n   * (Requires server-side support) or \"HashBang\" URLs.\r\n   *\r\n   * When `false`, uses [`PathLocationStrategy`](https://angular.io/docs/ts/latest/api/common/index/PathLocationStrategy-class.html)\r\n   * When `true`, uses [`HashLocationStrategy`](https://angular.io/docs/ts/latest/api/common/index/HashLocationStrategy-class.html)\r\n   *\r\n   * Defaults to `false`\r\n   */\r\n  useHash?: boolean\r\n\r\n  /**\r\n   * Sets [[UrlRouterProvider.otherwise]].\r\n   */\r\n  otherwise?: (string | Function | { state: string, params?: RawParams })\r\n\r\n  /**\r\n   * Sets [[UrlRouterProvider.deferIntercept]]\r\n   */\r\n  deferIntercept?: boolean;\r\n}\r\n\r\n/**\r\n * UI-Router Module declarative configuration which can be passed to [[UIRouterModule.forChild]]\r\n */\r\nexport interface StatesModule {\r\n  /**\r\n   * The module's UI-Router states\r\n   *\r\n   * This list of [[Ng2StateDeclaration]] objects will be registered with the [[StateRegistry]].\r\n   * Also, the components that the states route to will be added to `entryComponents` so they will be compiled.\r\n   */\r\n  states?: Ng2StateDeclaration[];\r\n\r\n  /**\r\n   * A UI-Router Module's imperative configuration\r\n   *\r\n   * If a UI-Router Module needs to perform some configuration (such as registering parameter types or Transition Hooks)\r\n   * a `configClass` should be supplied.\r\n   *\r\n   * Mark the class as `@Injectable()` and inject any required dependencies.\r\n   * When the module is being loaded, an instance will be created and injected.\r\n   *\r\n   * Example:\r\n   * ```js\r\n   * @Injectable()\r\n   * export class MyUIRouterConfig {\r\n   *   // The constructor may be injected\r\n   *   constructor(uiRouter: UIRouter) {\r\n   *     const requireAuthentication = (transition: Transition) => {\r\n   *       let injector = transition.injector();\r\n   *       if (!injector.get(AuthService).isAuthenticated()) {\r\n   *         return uiRouter.stateService.target('login');\r\n   *       }\r\n   *     }\r\n   *\r\n   *     uiRouter.transitionService.onBefore({ to: (state) => state.requiresAuth }, requireAuthentication);\r\n   *\r\n   *     let builtInStringType = urlMatcherFactory.type('string');\r\n   *     let slugType = Object.assign({}, builtInStringType, { encode: (str) => str, decode: (str) => str });\r\n   *     uiRouter.urlMatcherFactory.type('slug', slugType);\r\n   *   }\r\n   * }\r\n   * ```\r\n   *\r\n   * ```js\r\n   * @NgModule({\r\n   *   imports: [\r\n   *     UIRouterModule.forChild({ states: STATES, configClass: MyUIRouterConfig });\r\n   *   ]\r\n   * })\r\n   * class MyModule {}\r\n   * ```\r\n   */\r\n  configClass?: Type<any>;\r\n}\r\n\r\n/** @hidden */\r\nexport const UIROUTER_ROOT_MODULE = new OpaqueToken(\"UIRouter Root Module\");\r\n\r\n/** @hidden */\r\nexport const UIROUTER_MODULE_TOKEN = new OpaqueToken(\"UIRouter Module\");\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/uiRouterNgModule.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_97__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"@angular/common\",\"amd\":\"@angular/common\",\"commonjs2\":\"@angular/common\",\"commonjs\":\"@angular/common\"}\n// module id = 97\n// module chunks = 0 1","/**\r\n * The UI-Router Angular 2 directives:\r\n *\r\n * - [[UIView]]: A viewport for routed components\r\n * - [[UISref]]: A state ref to a target state; navigates when clicked\r\n * - [[UISrefActive]]: (and `UISrefActiveEq`) Adds a css class when a UISref's target state (or a child state) is active\r\n *\r\n * @ng2api\r\n * @preferred\r\n * @module directives\r\n */ /** */\r\nimport {UISref, AnchorUISref} from \"./uiSref\";\r\nimport {UISrefActive} from \"./uiSrefActive\";\r\nimport {UIView} from \"./uiView\";\r\nimport {UISrefStatus} from \"./uiSrefStatus\";\r\n\r\nexport * from \"./uiView\";\r\nexport * from \"./uiSref\";\r\nexport * from \"./uiSrefStatus\";\r\nexport * from \"./uiSrefActive\";\r\n\r\n/** @internalapi */\r\nexport const _UIROUTER_DIRECTIVES = [UISref, AnchorUISref, UIView, UISrefActive, UISrefStatus];\r\n\r\n/**\r\n * References to the UI-Router directive classes, for use within a @Component's `directives:` property\r\n * @deprecated use [[UIRouterModule]]\r\n * @internalapi\r\n */\r\nexport const UIROUTER_DIRECTIVES = _UIROUTER_DIRECTIVES;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/directives/directives.ts","/** @ng2api @module directives */ /** */\r\nimport {UIRouter, UIRouterGlobals} from \"ui-router-core\";\r\nimport {Directive, Inject, Input} from \"@angular/core\";\r\nimport {Optional} from \"@angular/core\";\r\nimport {ElementRef} from \"@angular/core\";\r\nimport {Renderer} from \"@angular/core\";\r\nimport {UIView, ParentUIViewInject} from \"./uiView\";\r\nimport {extend, Obj} from \"ui-router-core\";\r\nimport {TransitionOptions} from \"ui-router-core\";\r\nimport {Globals} from \"ui-router-core\";\r\nimport {ReplaySubject} from 'rxjs/ReplaySubject';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {TargetState} from \"ui-router-core\";\r\nimport \"../rx\";\r\n\r\n/**\r\n * @internalapi\r\n * # blah blah blah\r\n */\r\n@Directive({ selector: 'a[uiSref]' })\r\nexport class AnchorUISref {\r\n  constructor(public _el: ElementRef, public _renderer: Renderer) { }\r\n  update(href: string) {\r\n    this._renderer.setElementProperty(this._el.nativeElement, 'href', href);\r\n  }\r\n}\r\n\r\n/**\r\n * A directive when clicked, initiates a [[Transition]] to a [[TargetState]].\r\n *\r\n * ### Purpose\r\n *\r\n * This directive is applied to anchor tags (`<a>`) or any other clickable element.  It is a state reference (or sref --\r\n * similar to an href).  When clicked, the directive will transition to that state by calling [[StateService.go]],\r\n * and optionally supply state parameter values and transition options.\r\n *\r\n * When this directive is on an anchor tag, it will also add an `href` attribute to the anchor.\r\n *\r\n * ### Selector\r\n *\r\n * - `[uiSref]`: The directive is created as an attribute on an element, e.g., `<a uiSref></a>`\r\n *\r\n * ### Inputs\r\n *\r\n * - `uiSref`: the target state's name, e.g., `uiSref=\"foostate\"`.  If a component template uses a relative `uiSref`,\r\n * e.g., `uiSref=\".child\"`, the reference is relative to that component's state.\r\n *\r\n * - `uiParams`: any target state parameter values, as an object, e.g., `[uiParams]=\"{ fooId: bar.fooId }\"`\r\n *\r\n * - `uiOptions`: [[TransitionOptions]], e.g., `[uiOptions]=\"{ inherit: false }\"`\r\n *\r\n * @example\r\n * ```html\r\n *\r\n * <!-- Targets bar state' -->\r\n * <a uiSref=\"bar\">Bar</a>\r\n *\r\n * <!-- Assume this component's state is \"foo\".\r\n *      Relatively targets \"foo.child\" -->\r\n * <a uiSref=\".child\">Foo Child</a>\r\n *\r\n * <!-- Targets \"bar\" state and supplies parameter value -->\r\n * <a uiSref=\"bar\" [uiParams]=\"{ barId: foo.barId }\">Bar {{foo.barId}}</a>\r\n *\r\n * <!-- Targets \"bar\" state and parameter, doesn't inherit existing parameters-->\r\n * <a uiSref=\"bar\" [uiParams]=\"{ barId: foo.barId }\" [uiOptions]=\"{ inherit: false }\">Bar {{foo.barId}}</a>\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[uiSref]',\r\n  host: { '(click)': 'go()' }\r\n})\r\nexport class UISref {\r\n  /**\r\n   * `@Input('uiSref')` The name of the state to link to\r\n   *\r\n   * ```html\r\n   * <a uiSref=\"hoome\">Home</a>\r\n   * ```\r\n   */\r\n  @Input('uiSref') state: string;\r\n\r\n  /**\r\n   * `@Input('uiParams')` The parameter values to use (as key/values)\r\n   *\r\n   * ```html\r\n   * <a uiSref=\"book\" [uiParams]=\"{ bookId: book.id }\">Book {{ book.name }}</a>\r\n   * ```\r\n   */\r\n  @Input('uiParams') params: any;\r\n\r\n  /**\r\n   * `@Input('uiOptions')` The transition options\r\n   *\r\n   * ```html\r\n   * <a uiSref=\"books\" [uiOptions]=\"{ reload: true }\">Book {{ book.name }}</a>\r\n   * ```\r\n   */\r\n  @Input('uiOptions') options: TransitionOptions;\r\n\r\n  /**\r\n   * An observable (ReplaySubject) of the state this UISref is targeting.\r\n   * When the UISref is clicked, it will transition to this [[TargetState]].\r\n   */\r\n  public targetState$ = new ReplaySubject<TargetState>(1);\r\n\r\n  /** @internalapi */\r\n  private _emit: boolean = false;\r\n  /** @internalapi */\r\n  private _statesSub: Subscription;\r\n\r\n  constructor(\r\n      /** @internalapi */ private _router: UIRouter,\r\n      /** @internalapi */ @Inject(UIView.PARENT_INJECT) public parent: ParentUIViewInject,\r\n      /** @internalapi */ @Optional() private _anchorUISref: AnchorUISref,\r\n      @Inject(Globals) _globals: UIRouterGlobals\r\n  ) {\r\n    this._statesSub = _globals.states$.subscribe(() => this.update())\r\n  }\r\n\r\n  /** @internalapi */\r\n  set \"uiSref\"(val: string) { this.state = val; this.update(); }\r\n  /** @internalapi */\r\n  set \"uiParams\"(val: Obj) { this.params = val; this.update(); }\r\n  /** @internalapi */\r\n  set \"uiOptions\"(val: TransitionOptions) { this.options = val; this.update(); }\r\n\r\n  ngOnInit() {\r\n    this._emit = true;\r\n    this.update();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._emit = false;\r\n    this._statesSub.unsubscribe();\r\n    this.targetState$.unsubscribe();\r\n  }\r\n\r\n  update() {\r\n    let $state = this._router.stateService;\r\n    if (this._emit) {\r\n      let newTarget = $state.target(this.state, this.params, this.getOptions());\r\n      this.targetState$.next(newTarget);\r\n    }\r\n\r\n    if (this._anchorUISref) {\r\n      let href = $state.href(this.state, this.params, this.getOptions());\r\n      this._anchorUISref.update(href);\r\n    }\r\n  }\r\n\r\n  getOptions() {\r\n    let defaultOpts: TransitionOptions = {\r\n      relative: this.parent && this.parent.context && this.parent.context.name,\r\n      inherit: true ,\r\n      source: \"sref\"\r\n    };\r\n    return extend(defaultOpts, this.options || {});\r\n  }\r\n\r\n  /** When triggered by a (click) event, this function transitions to the UISref's target state */\r\n  go() {\r\n    this._router.stateService.go(this.state, this.params, this.getOptions());\r\n    return false;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/directives/uiSref.ts","/** @ng2api @module directives */ /** */\r\nimport {\r\n    Component, ComponentFactoryResolver, ViewContainerRef, Input, ComponentRef, Type,\r\n    ReflectiveInjector, ViewChild, Injector, Inject\r\n} from '@angular/core';\r\nimport {ReflectorReader, reflector} from '../private_import_core';\r\n\r\nimport {UIRouter} from \"ui-router-core\";\r\nimport {trace} from \"ui-router-core\";\r\nimport {ViewContext, ViewConfig, ActiveUIView} from \"ui-router-core\";\r\nimport {Ng2ViewConfig} from \"../statebuilders/views\";\r\nimport {ResolveContext, NATIVE_INJECTOR_TOKEN} from \"ui-router-core\";\r\nimport {flattenR} from \"ui-router-core\";\r\nimport {MergeInjector} from \"../mergeInjector\";\r\n\r\n/** @hidden */\r\nlet id = 0;\r\n\r\n/** @internalapi These are provide()d as the string UIView.PARENT_INJECT */\r\nexport interface ParentUIViewInject {\r\n  context: ViewContext;\r\n  fqn: string;\r\n}\r\n\r\n/** @internalapi */\r\ninterface InputMapping {\r\n  token: string;\r\n  prop: string;\r\n}\r\n\r\n/**\r\n * Given a component class, gets the inputs of styles:\r\n *\r\n * - @Input('foo') _foo\r\n * - `inputs: ['foo']`\r\n *\r\n * @internalapi\r\n */\r\nconst ng2ComponentInputs = (ng2CompClass: Type<any>) => {\r\n  /** Get \"@Input('foo') _foo\" inputs */\r\n  let props = reflector.propMetadata(ng2CompClass);\r\n  let _props = Object.keys(props || {})\r\n      // -> [ { key: string, anno: annotations[] } ] tuples\r\n      .map(key => ({ key, annoArr: props[key] }))\r\n      // -> flattened to [ { key: string, anno: annotation } ] tuples\r\n      .reduce((acc, tuple) => acc.concat(tuple.annoArr.map(anno => ({ key: tuple.key, anno }))), [])\r\n      // Only Inputs\r\n      .filter(tuple => tuple.anno instanceof Input)\r\n      // If they have a bindingPropertyName, i.e. \"@Input('foo') _foo\", then foo, else _foo\r\n      .map(tuple => ({ token: tuple.anno.bindingPropertyName || tuple.key, prop: tuple.key }));\r\n\r\n  /** Get \"inputs: ['foo']\" inputs */\r\n  let inputs = reflector.annotations(ng2CompClass)\r\n      // Find the ComponentMetadata class annotation\r\n      .filter(x => x instanceof Component && !!x.inputs)\r\n      // Get the .inputs string array\r\n      .map(x => x.inputs)\r\n      .reduce(flattenR, [])\r\n      .map(input => ({ token: input, prop: input }));\r\n\r\n  return _props.concat(inputs) as InputMapping[];\r\n};\r\n\r\n/**\r\n * A UI-Router viewport directive, which is filled in by a view (component) on a state.\r\n *\r\n * ### Selector\r\n *\r\n * A `ui-view` directive can be created as an element: `<ui-view></ui-view>` or as an attribute: `<div ui-view></div>`.\r\n *\r\n * ### Purpose\r\n *\r\n * This directive is used in a Component template (or as the root component) to create a viewport.  The viewport\r\n * is filled in by a view (as defined by a [[Ng2ViewDeclaration]] inside a [[Ng2StateDeclaration]]) when the view's\r\n * state has been activated.\r\n *\r\n * #### Example:\r\n * ```js\r\n * // This app has two states, 'foo' and 'bar'\r\n * stateRegistry.register({ name: 'foo', url: '/foo', component: FooComponent });\r\n * stateRegistry.register({ name: 'bar', url: '/bar', component: BarComponent });\r\n * ```\r\n * ```html\r\n * <!-- This ui-view will be filled in by the foo state's component or\r\n *      the bar state's component when the foo or bar state is activated -->\r\n * <ui-view></ui-view>\r\n * ```\r\n *\r\n * ### Named ui-views\r\n *\r\n * A `ui-view` may optionally be given a name via the attribute value: `<div ui-view='header'></div>`.  *Note:\r\n * an unnamed `ui-view` is internally named `$default`*.   When a `ui-view` has a name, it will be filled in\r\n * by a matching named view.\r\n *\r\n * #### Example:\r\n * ```js\r\n * stateRegistry.register({\r\n *   name: 'foo',\r\n *   url: '/foo',\r\n *   views: { header: HeaderComponent, $default: FooComponent });\r\n * ```\r\n * ```html\r\n * <!-- When 'foo' state is active, filled by HeaderComponent -->\r\n * <div ui-view=\"header\"></div>\r\n *\r\n * <!-- When 'foo' state is active, filled by FooComponent -->\r\n * <ui-view></ui-view>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ui-view, [ui-view]',\r\n  template: `\r\n    <template #componentTarget></template>\r\n    <ng-content *ngIf=\"!componentRef\"></ng-content>\r\n  `\r\n  // styles: [`\r\n  //   .done-true {\r\n  //     text-decoration: line-through;\r\n  //     color: grey;\r\n  //   }`\r\n  // ],\r\n  // template: `\r\n  // <div style=\"padding: 1em; border: 1px solid lightgrey;\">\r\n  //\r\n  //   <div #content style=\"color: lightgrey; font-size: smaller;\">\r\n  //     <div>ui-view #{{uiViewData?.id}} created by '{{ parentContext?.name || \"(root)\" }}' state</div>\r\n  //     <div>name: (absolute) '{{uiViewData?.fqn}}' (contextual) '{{uiViewData?.name}}@{{parentContext?.name}}' </div>\r\n  //     <div>currently filled by: '{{(uiViewData?.config && uiViewData?.config?.viewDecl?.$context) || 'empty...'}}'</div>\r\n  //   </div>\r\n  //\r\n  // </div>`\r\n})\r\nexport class UIView {\r\n  @ViewChild('componentTarget', {read: ViewContainerRef}) componentTarget: ViewContainerRef;\r\n  @Input('name') name: string;\r\n  @Input('ui-view') set _name(val: string) { this.name = val; }\r\n  componentRef: ComponentRef<any>;\r\n  deregister: Function;\r\n  uiViewData: ActiveUIView = <any> {};\r\n  parent: ParentUIViewInject;\r\n\r\n  static PARENT_INJECT = \"UIView.PARENT_INJECT\";\r\n\r\n  constructor(\r\n      public router: UIRouter,\r\n      @Inject(UIView.PARENT_INJECT) parent,\r\n      public viewContainerRef: ViewContainerRef\r\n  ) {\r\n    this.parent = parent;\r\n  }\r\n\r\n  ngOnInit() {\r\n    let parentFqn = this.parent.fqn;\r\n    let name = this.name || '$default';\r\n\r\n    this.uiViewData = {\r\n      $type: 'ng2',\r\n      id: id++,\r\n      name: name,\r\n      fqn: parentFqn ? parentFqn + \".\" + name : name,\r\n      creationContext: this.parent.context,\r\n      configUpdated: this.viewConfigUpdated.bind(this),\r\n      config: undefined\r\n    };\r\n\r\n    this.deregister = this.router.viewService.registerUIView(this.uiViewData);\r\n  }\r\n\r\n  disposeLast() {\r\n    if (this.componentRef) this.componentRef.destroy();\r\n    this.componentRef = null;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.deregister) this.deregister();\r\n    this.disposeLast();\r\n  }\r\n\r\n  /**\r\n   * The view service is informing us of an updated ViewConfig\r\n   * (usually because a transition activated some state and its views)\r\n   */\r\n  viewConfigUpdated(config: ViewConfig) {\r\n    // The config may be undefined if there is nothing currently targeting this UIView.\r\n    // Dispose the current component, if there is one\r\n    if (!config) return this.disposeLast();\r\n\r\n    // Only care about Ng2 configs\r\n    if (!(config instanceof Ng2ViewConfig)) return;\r\n\r\n    // The \"new\" viewconfig is already applied, so exit early\r\n    if (this.uiViewData.config === config) return;\r\n\r\n    // This is a new ViewConfig.  Dispose the previous component\r\n    this.disposeLast();\r\n    trace.traceUIViewConfigUpdated(this.uiViewData, config && config.viewDecl.$context);\r\n\r\n    this.applyUpdatedConfig(config);\r\n  }\r\n\r\n  applyUpdatedConfig(config: Ng2ViewConfig) {\r\n    this.uiViewData.config = config;\r\n    // Create the Injector for the routed component\r\n    let context = new ResolveContext(config.path);\r\n    let componentInjector = this.getComponentInjector(context);\r\n\r\n    // Get the component class from the view declaration. TODO: allow promises?\r\n    let componentClass = config.viewDecl.component;\r\n\r\n    // Create the component\r\n    let compFactoryResolver = componentInjector.get(ComponentFactoryResolver);\r\n    let compFactory = compFactoryResolver.resolveComponentFactory(componentClass);\r\n    this.componentRef = this.componentTarget.createComponent(compFactory, undefined, componentInjector);\r\n\r\n    // Wire resolves to @Input()s\r\n    this.applyInputBindings(this.componentRef, context, componentClass);\r\n\r\n    // TODO: wire uiCanExit and uiOnParamsChanged callbacks\r\n  }\r\n\r\n  /**\r\n   * Creates a new Injector for a routed component.\r\n   *\r\n   * Adds resolve values to the Injector\r\n   * Adds providers from the NgModule for the state\r\n   * Adds providers from the parent Component in the component tree\r\n   * Adds a PARENT_INJECT view context object\r\n   *\r\n   * @returns an Injector\r\n   */\r\n  getComponentInjector(context: ResolveContext): Injector {\r\n    // Map resolves to \"useValue: providers\"\r\n    let resolvables = context.getTokens().map(token => context.getResolvable(token)).filter(r => r.resolved);\r\n    let newProviders = resolvables.map(r => ({ provide: r.token, useValue: r.data }));\r\n\r\n    var parentInject = { context: this.uiViewData.config.viewDecl.$context, fqn: this.uiViewData.fqn };\r\n    newProviders.push({ provide: UIView.PARENT_INJECT, useValue: parentInject });\r\n\r\n    let parentComponentInjector = this.viewContainerRef.injector;\r\n    let moduleInjector = context.getResolvable(NATIVE_INJECTOR_TOKEN).data;\r\n    let mergedParentInjector = new MergeInjector(moduleInjector, parentComponentInjector);\r\n\r\n    return ReflectiveInjector.resolveAndCreate(newProviders, mergedParentInjector);\r\n  }\r\n\r\n  /**\r\n   * Supplies component inputs with resolve data\r\n   *\r\n   * Finds component inputs which match resolves (by name) and sets the input value\r\n   * to the resolve data.\r\n   */\r\n  applyInputBindings(ref: ComponentRef<any>, context: ResolveContext, componentClass) {\r\n    let bindings = this.uiViewData.config.viewDecl['bindings'] || {};\r\n\r\n    var addResolvable = (tuple: InputMapping) => ({\r\n      prop: tuple.prop,\r\n      resolvable: context.getResolvable(bindings[tuple.prop] || tuple.token)\r\n    });\r\n\r\n    // Supply resolve data to matching @Input('prop') or inputs: ['prop']\r\n    let inputTuples = ng2ComponentInputs(componentClass);\r\n    inputTuples.map(addResolvable)\r\n        .filter(tuple => tuple.resolvable && tuple.resolvable.resolved)\r\n        .forEach(tuple => { ref.instance[tuple.prop] = tuple.resolvable.data });\r\n\r\n    // Initiate change detection for the newly created component\r\n    ref.changeDetectorRef.detectChanges();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/directives/uiView.ts","/** @module ng2 */\r\n/**\r\n * @Kamshak It's imported like this in @angular/compiler as well.\r\n * Was going to mark it injectable as in\r\n * https://github.com/angular/angular/blob/42a287fabf6b035d51e00cf3006c27fec00f054a/modules/%40angular/compiler/src/ng_module_resolver.ts\r\n * but unfortunately not all platforms (namely browser-dynamic) provide it.\r\n */\r\n\r\nimport { __core_private__ as r} from '@angular/core';\r\nexport type ReflectorReader = typeof r._ReflectorReader;\r\nexport var reflector: typeof r.reflector = r.reflector;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/private_import_core.ts","/** @module ng2 */ /** */\r\nimport {State} from \"ui-router-core\";\r\nimport {PathNode} from \"ui-router-core\";\r\nimport {pick, forEach} from \"ui-router-core\";\r\nimport {ViewConfig} from \"ui-router-core\";\r\nimport {Ng2ViewDeclaration} from \"../interface\";\r\nimport {services} from \"ui-router-core\";\r\nimport {ViewService} from \"ui-router-core\";\r\n\r\n/**\r\n * This is a [[StateBuilder.builder]] function for angular2 `views`.\r\n *\r\n * When the [[StateBuilder]] builds a [[State]] object from a raw [[StateDeclaration]], this builder\r\n * handles the `views` property with logic specific to ui-router-ng2.\r\n *\r\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object and\r\n * applies the state-level configuration to a view named `$default`.\r\n */\r\nexport function ng2ViewsBuilder(state: State) {\r\n  let views: { [key: string]: Ng2ViewDeclaration } = {},\r\n      viewsObject = state.views || {\"$default\": pick(state, \"component\")};\r\n\r\n  forEach(viewsObject, function (config: Ng2ViewDeclaration, name: string) {\r\n    name = name || \"$default\"; // Account for views: { \"\": { template... } }\r\n    if (Object.keys(config).length == 0) return;\r\n\r\n    config.$type = \"ng2\";\r\n    config.$context = state;\r\n    config.$name = name;\r\n\r\n    let normalized = ViewService.normalizeUIViewTarget(config.$context, config.$name);\r\n    config.$uiViewName = normalized.uiViewName;\r\n    config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\r\n\r\n    views[name] = config;\r\n  });\r\n  return views;\r\n}\r\n\r\nlet id = 0;\r\nexport class Ng2ViewConfig implements ViewConfig {\r\n  $id: number = id++;\r\n  loaded: boolean = true;\r\n\r\n  constructor(public path: PathNode[], public viewDecl: Ng2ViewDeclaration) { }\r\n\r\n  load() {\r\n    return services.$q.when(this);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/statebuilders/views.ts","/** @module ng2 */ /** */\r\nimport {Injector} from \"@angular/core\";\r\n\r\n/**\r\n * Merge two injectors\r\n *\r\n * This class implements the Injector ng2 interface but delegates\r\n * to the Injectors provided in the constructor.\r\n */\r\nexport class MergeInjector implements Injector {\r\n  static NOT_FOUND = {};\r\n  private injectors: Injector[];\r\n  constructor(...injectors: Injector[]) {\r\n    if (injectors.length < 2) throw new Error(\"pass at least two injectors\");\r\n    this.injectors = injectors;\r\n  }\r\n\r\n  /**\r\n   * Get the token from the first injector which contains it.\r\n   *\r\n   * Delegates to the first Injector.get().\r\n   * If not found, then delegates to the second Injector (and so forth).\r\n   * If no Injector contains the token, return the `notFoundValue`, or throw.\r\n   *\r\n   * @param token the DI token\r\n   * @param notFoundValue the value to return if none of the Injectors contains the token.\r\n   * @returns {any} the DI value\r\n   */\r\n  get(token: any, notFoundValue?: any): any {\r\n    for (let i = 0; i < this.injectors.length; i++) {\r\n      let val = this.injectors[i].get(token, MergeInjector.NOT_FOUND);\r\n      if (val !== MergeInjector.NOT_FOUND) return val;\r\n    }\r\n\r\n    if (arguments.length >= 2) return notFoundValue;\r\n\r\n    // This will throw the DI Injector error\r\n    this.injectors[0].get(token);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/mergeInjector.ts","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar queue_1 = require('./scheduler/queue');\nvar observeOn_1 = require('./operator/observeOn');\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject = (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n        _super.call(this);\n        this.scheduler = scheduler;\n        this._events = [];\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var now = this._getNow();\n        this._events.push(new ReplayEvent(now, value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _events = this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));\n        }\n        var len = _events.length;\n        for (var i = 0; i < len && !subscriber.closed; i++) {\n            subscriber.next(_events[i].value);\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue_1.queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject_1.Subject));\nexports.ReplaySubject = ReplaySubject;\nvar ReplayEvent = (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/ReplaySubject.js\n// module id = 104\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subject.js\n// module id = 105\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/ObjectUnsubscribedError.js\n// module id = 106\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/SubjectSubscription.js\n// module id = 107\n// module chunks = 0 1","\"use strict\";\nvar QueueAction_1 = require('./QueueAction');\nvar QueueScheduler_1 = require('./QueueScheduler');\nexports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);\n//# sourceMappingURL=queue.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/queue.js\n// module id = 108\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncAction_1 = require('./AsyncAction');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = (function (_super) {\n    __extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, enqueue as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction_1.AsyncAction));\nexports.QueueAction = QueueAction;\n//# sourceMappingURL=QueueAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/QueueAction.js\n// module id = 109\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Action_1 = require('./Action');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.delay = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsyncAction.js\n// module id = 110\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/Action.js\n// module id = 111\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nvar QueueScheduler = (function (_super) {\n    __extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        _super.apply(this, arguments);\n    }\n    return QueueScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.QueueScheduler = QueueScheduler;\n//# sourceMappingURL=QueueScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/QueueScheduler.js\n// module id = 112\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = require('../Scheduler');\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsyncScheduler.js\n// module id = 113\n// module chunks = 0 1","\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Scheduler.js\n// module id = 114\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n * @see {@link Notification}\n *\n * @param scheduler\n * @param delay\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return this.lift(new ObserveOnOperator(scheduler, delay));\n}\nexports.observeOn = observeOn;\nvar ObserveOnOperator = (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexports.ObserveOnOperator = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = (function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_1.Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_1.Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\nvar ObserveOnMessage = (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexports.ObserveOnMessage = ObserveOnMessage;\n//# sourceMappingURL=observeOn.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/observeOn.js\n// module id = 115\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('./Observable');\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = (function () {\n    function Notification(kind, value, exception) {\n        this.kind = kind;\n        this.value = value;\n        this.exception = exception;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.exception);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.exception);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_1.Observable.of(this.value);\n            case 'E':\n                return Observable_1.Observable.throw(this.exception);\n            case 'C':\n                return Observable_1.Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return this.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` exception.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return this.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexports.Notification = Notification;\n//# sourceMappingURL=Notification.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Notification.js\n// module id = 116\n// module chunks = 0 1","/** @module ng2 */ /** */\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {ReplaySubject} from \"rxjs/ReplaySubject\";\r\nimport {Transition} from \"ui-router-core\";\r\nimport {UIRouter} from \"ui-router-core\";\r\nimport {StateDeclaration} from \"ui-router-core\";\r\n\r\nexport interface StatesChangedEvent {\r\n  currentStates: StateDeclaration[];\r\n  registered: StateDeclaration[];\r\n  deregistered: StateDeclaration[];\r\n}\r\n\r\ndeclare module 'ui-router-core/lib/globals' {\r\n  interface UIRouterGlobals {\r\n    states$?: Observable<StatesChangedEvent>;\r\n    start$?: Observable<Transition>;\r\n    success$?: Observable<Transition>;\r\n    params$?: Observable<{ [paramName: string]: any }>;\r\n  }\r\n}\r\n\r\n/** Augments UIRouterGlobals with observables for transition starts, successful transitions, and state parameters */\r\nexport class UIRouterRx {\r\n  private deregisterFns: Function[] = [];\r\n\r\n  constructor(router: UIRouter) {\r\n    let start$ = new ReplaySubject<Transition>(1);\r\n    let success$ = <Observable<Transition>> start$.mergeMap((t: Transition) => t.promise.then(() => t));\r\n    let params$ = success$.map((transition: Transition) => transition.params());\r\n\r\n    let states$ = new ReplaySubject<StatesChangedEvent>(1);\r\n    function onStatesChangedEvent(event: string, states: StateDeclaration[]) {\r\n      let changeEvent = {\r\n        currentStates: router.stateRegistry.get(),\r\n        registered: [],\r\n        deregistered: []\r\n      };\r\n\r\n      if (event) changeEvent[event] = states;\r\n      states$.next(changeEvent);\r\n    }\r\n\r\n    this.deregisterFns.push(router.transitionService.onStart({}, transition => start$.next(transition)));\r\n    this.deregisterFns.push(router.stateRegistry.onStatesChanged(onStatesChangedEvent));\r\n    onStatesChangedEvent(null, null);\r\n    Object.assign(router.globals, {start$, success$, params$, states$});\r\n  }\r\n\r\n  dispose() {\r\n    this.deregisterFns.forEach(deregisterFn => deregisterFn());\r\n    this.deregisterFns = [];\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/rx.ts","/** @ng2api @module directives */ /** */\r\nimport {Directive, Input, ElementRef, Host, Renderer} from \"@angular/core\";\r\nimport {UISrefStatus, SrefStatus} from \"./uiSrefStatus\";\r\nimport {Subscription} from \"rxjs/Subscription\";\r\n\r\n/**\r\n * A directive that adds a CSS class when its associated `uiSref` link is active.\r\n *\r\n * ### Purpose\r\n *\r\n * This directive should be paired with one (or more) [[UISref]] directives.\r\n * It will apply a CSS class to its element when the state the `uiSref` targets is activated.\r\n *\r\n * This can be used to create navigation UI where the active link is highlighted.\r\n *\r\n * ### Selectors\r\n *\r\n * - `[uiSrefActive]`: When this selector is used, the class is added when the target state or any\r\n * child of the target state is active\r\n * - `[uiSrefActiveEq]`: When this selector is used, the class is added when the target state is\r\n * exactly active (the class is not added if a child of the target state is active).\r\n *\r\n * ### Inputs\r\n *\r\n * - `uiSrefActive`/`uiSrefActiveEq`: one or more CSS classes to add to the element, when the `uiSref` is active\r\n *\r\n * #### Example:\r\n * The anchor tag has the `active` class added when the `foo` state is active.\r\n * ```html\r\n * <a uiSref=\"foo\" uiSrefActive=\"active\">Foo</a>\r\n * ```\r\n *\r\n * ### Matching parameters\r\n *\r\n * If the `uiSref` includes parameters, the current state must be active, *and* the parameter values must match.\r\n *\r\n * #### Example:\r\n * The first anchor tag has the `active` class added when the `foo.bar` state is active and the `id` parameter\r\n * equals 25.\r\n * The second anchor tag has the `active` class added when the `foo.bar` state is active and the `id` parameter\r\n * equals 32.\r\n * ```html\r\n * <a uiSref=\"foo.bar\" [uiParams]=\"{ id: 25 }\" uiSrefActive=\"active\">Bar #25</a>\r\n * <a uiSref=\"foo.bar\" [uiParams]=\"{ id: 32 }\" uiSrefActive=\"active\">Bar #32</a>\r\n * ```\r\n *\r\n * #### Example:\r\n * A list of anchor tags are created for a list of `bar` objects.\r\n * An anchor tag will have the `active` class when `foo.bar` state is active and the `id` parameter matches\r\n * that object's `id`.\r\n * ```html\r\n * <li *ngFor=\"let bar of bars\">\r\n *   <a uiSref=\"foo.bar\" [uiParams]=\"{ id: bar.id }\" uiSrefActive=\"active\">Bar #{{ bar.id }}</a>\r\n * </li>\r\n * ```\r\n *\r\n * ### Multiple uiSrefs\r\n *\r\n * A single `uiSrefActive` can be used for multiple `uiSref` links.\r\n * This can be used to create (for example) a drop down navigation menu, where the menui is highlighted\r\n * if *any* of its inner links are active.\r\n *\r\n * The `uiSrefActive` should be placed on an ancestor element of the `uiSref` list.\r\n * If anyof the `uiSref` links are activated, the class will be added to the ancestor element.\r\n *\r\n * #### Example:\r\n * This is a dropdown nagivation menu for \"Admin\" states.\r\n * When any of `admin.users`, `admin.groups`, `admin.settings` are active, the `<li>` for the dropdown\r\n * has the `dropdown-child-active` class applied.\r\n * Additionally, the active anchor tag has the `active` class applied.\r\n * ```html\r\n * <ul class=\"dropdown-menu\">\r\n *   <li uiSrefActive=\"dropdown-child-active\" class=\"dropdown admin\">\r\n *     Admin\r\n *     <ul>\r\n *       <li><a uiSref=\"admin.users\" uiSrefActive=\"active\">Users</a></li>\r\n *       <li><a uiSref=\"admin.groups\" uiSrefActive=\"active\">Groups</a></li>\r\n *       <li><a uiSref=\"admin.settings\" uiSrefActive=\"active\">Settings</a></li>\r\n *     </ul>\r\n *   </li>\r\n * </ul>\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[uiSrefActive],[uiSrefActiveEq]'\r\n})\r\nexport class UISrefActive {\r\n\r\n  private _classes: string[] = [];\r\n  @Input('uiSrefActive') set active(val: string) { this._classes = val.split(\"\\s+\")};\r\n\r\n  private _classesEq: string[] = [];\r\n  @Input('uiSrefActiveEq') set activeEq(val: string) { this._classesEq = val.split(\"\\s+\")};\r\n\r\n  private _subscription: Subscription;\r\n  constructor(uiSrefStatus: UISrefStatus, rnd: Renderer, @Host() host: ElementRef) {\r\n    this._subscription = uiSrefStatus.uiSrefStatus.subscribe((next: SrefStatus) => {\r\n      this._classes.forEach(cls => rnd.setElementClass(host.nativeElement, cls, next.active));\r\n      this._classesEq.forEach(cls => rnd.setElementClass(host.nativeElement, cls, next.exact));\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._subscription.unsubscribe();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/directives/uiSrefActive.ts","/** @ng2api @module directives */ /** */\r\nimport {Directive, Output, EventEmitter, ContentChildren, QueryList, Inject} from \"@angular/core\";\r\nimport {UISref} from \"./uiSref\";\r\nimport {PathNode} from \"ui-router-core\";\r\nimport {Transition} from \"ui-router-core\";\r\nimport {TargetState} from \"ui-router-core\";\r\nimport {State} from \"ui-router-core\";\r\nimport {anyTrueR, tail, unnestR, Predicate} from \"ui-router-core\";\r\nimport {Globals, UIRouterGlobals} from \"ui-router-core\";\r\nimport {Param} from \"ui-router-core\";\r\nimport {PathFactory} from \"ui-router-core\";\r\nimport {Subscription} from \"rxjs/Subscription\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {BehaviorSubject} from \"rxjs/BehaviorSubject\";\r\n\r\n/** @internalapi */\r\ninterface TransEvt { evt: string, trans: Transition }\r\n\r\n/**\r\n * UISref status emitted from [[UISrefStatus]]\r\n */\r\nexport interface SrefStatus {\r\n  /** The sref's target state (or one of its children) is currently active */\r\n  active: boolean;\r\n  /** The sref's target state is currently active */\r\n  exact: boolean;\r\n  /** A transition is entering the sref's target state */\r\n  entering: boolean;\r\n  /** A transition is exiting the sref's target state */\r\n  exiting: boolean;\r\n}\r\n\r\n/** @internalapi */\r\nconst inactiveStatus: SrefStatus = {\r\n  active: false,\r\n  exact: false,\r\n  entering: false,\r\n  exiting: false\r\n};\r\n\r\n/**\r\n * Returns a Predicate<PathNode[]>\r\n *\r\n * The predicate returns true when the target state (and param values)\r\n * match the (tail of) the path, and the path's param values\r\n *\r\n * @internalapi\r\n */\r\nconst pathMatches = (target: TargetState): Predicate<PathNode[]> => {\r\n  if (!target.exists()) return () => false;\r\n  let state: State = target.$state();\r\n  let targetParamVals = target.params();\r\n  let targetPath: PathNode[] = PathFactory.buildPath(target);\r\n  let paramSchema: Param[] = targetPath.map(node => node.paramSchema)\r\n      .reduce(unnestR, [])\r\n      .filter((param: Param) => targetParamVals.hasOwnProperty(param.id));\r\n\r\n  return (path: PathNode[]) => {\r\n    let tailNode = tail(path);\r\n    if (!tailNode || tailNode.state !== state) return false;\r\n    var paramValues = PathFactory.paramValues(path);\r\n    return Param.equals(paramSchema, paramValues, targetParamVals);\r\n  };\r\n};\r\n\r\n/**\r\n * Given basePath: [a, b], appendPath: [c, d]),\r\n * Expands the path to [c], [c, d]\r\n * Then appends each to [a,b,] and returns: [a, b, c], [a, b, c, d]\r\n *\r\n * @internalapi\r\n */\r\nfunction spreadToSubPaths(basePath: PathNode[], appendPath: PathNode[]): PathNode[][] {\r\n  return appendPath.map(node => basePath.concat(PathFactory.subPath(appendPath, n => n.state === node.state)));\r\n}\r\n\r\n/**\r\n * Given a TransEvt (Transition event: started, success, error)\r\n * and a UISref Target State, return a SrefStatus object\r\n * which represents the current status of that Sref:\r\n * active, activeEq (exact match), entering, exiting\r\n *\r\n * @internalapi\r\n */\r\nfunction getSrefStatus(event: TransEvt, srefTarget: TargetState): SrefStatus {\r\n  const pathMatchesTarget = pathMatches(srefTarget);\r\n  const tc = event.trans.treeChanges();\r\n\r\n  let isStartEvent = event.evt === 'start';\r\n  let isSuccessEvent = event.evt === 'success';\r\n  let activePath: PathNode[] = isSuccessEvent ? tc.to : tc.from;\r\n\r\n  const isActive = () =>\r\n      spreadToSubPaths([], activePath)\r\n          .map(pathMatchesTarget)\r\n          .reduce(anyTrueR, false);\r\n\r\n  const isExact = () =>\r\n      pathMatchesTarget(activePath);\r\n\r\n  const isEntering = () =>\r\n      spreadToSubPaths(tc.retained, tc.entering)\r\n          .map(pathMatchesTarget)\r\n          .reduce(anyTrueR, false);\r\n\r\n  const isExiting = () =>\r\n      spreadToSubPaths(tc.retained, tc.exiting)\r\n          .map(pathMatchesTarget)\r\n          .reduce(anyTrueR, false);\r\n\r\n  return {\r\n    active: isActive(),\r\n    exact: isExact(),\r\n    entering: isStartEvent ? isEntering() : false,\r\n    exiting: isStartEvent ? isExiting() : false,\r\n  } as SrefStatus;\r\n}\r\n\r\n/** @internalapi */\r\nfunction mergeSrefStatus(left: SrefStatus, right: SrefStatus) {\r\n  return {\r\n    active:   left.active   || right.active,\r\n    exact:    left.exact    || right.exact,\r\n    entering: left.entering || right.entering,\r\n    exiting:  left.exiting  || right.exiting,\r\n  };\r\n}\r\n\r\n/**\r\n * A directive which emits events when a paired [[UISref]] status changes.\r\n *\r\n * This directive is primarily used by the [[UISrefActive]] directives to monitor `UISref`(s).\r\n *\r\n * This directive shares two attribute selectors with `UISrefActive`:\r\n *\r\n * - `[uiSrefActive]`\r\n * - `[uiSrefActiveEq]`.\r\n *\r\n * Thus, whenever a `UISrefActive` directive is created, a `UISrefStatus` directive is also created.\r\n *\r\n * Most apps should simply use `UISrefActive`, but some advanced components may want to process the\r\n * [[SrefStatus]] events directly.\r\n *\r\n * ```js\r\n * <li (uiSrefStatus)=\"onSrefStatusChanged($event)\">\r\n *   <a uiSref=\"book\" [uiParams]=\"{ bookId: book.id }\">Book {{ book.name }}</a>\r\n * </li>\r\n * ```\r\n *\r\n * The `uiSrefStatus` event is emitted whenever an enclosed `uiSref`'s status changes.\r\n * The event emitted is of type [[SrefStatus]], and has boolean values for `active`, `exact`, `entering`, and `exiting`.\r\n *\r\n * The values from this event can be captured and stored on a component (then applied, e.g., using ngClass).\r\n *\r\n * ---\r\n *\r\n * A single `uiSrefStatus` can enclose multiple `uiSref`.\r\n * Each status boolean (`active`, `exact`, `entering`, `exiting`) will be true if *any of the enclosed `uiSref` status is true*.\r\n * In other words, all enclosed `uiSref` statuses  are merged to a single status using `||` (logical or).\r\n *\r\n * ```js\r\n * <li (uiSrefStatus)=\"onSrefStatus($event)\" uiSref=\"admin\">\r\n *   Home\r\n *   <ul>\r\n *     <li> <a uiSref=\"admin.users\">Users</a> </li>\r\n *     <li> <a uiSref=\"admin.groups\">Groups</a> </li>\r\n *   </ul>\r\n * </li>\r\n * ```\r\n *\r\n * In the above example, `$event.active === true` when either `admin.users` or `admin.groups` is active.\r\n *\r\n * ---\r\n *\r\n * This API is subject to change.\r\n */\r\n@Directive({ selector: '[uiSrefStatus],[uiSrefActive],[uiSrefActiveEq]' })\r\nexport class UISrefStatus {\r\n  /** current statuses of the state/params the uiSref directive is linking to */\r\n  @Output(\"uiSrefStatus\") uiSrefStatus = new EventEmitter<SrefStatus>(false);\r\n  /** Monitor all child components for UISref(s) */\r\n  @ContentChildren(UISref, {descendants: true}) srefs: QueryList<UISref>;\r\n\r\n  /** The current status */\r\n  status: SrefStatus;\r\n\r\n  private _subscription: Subscription;\r\n  private _srefChangesSub: Subscription;\r\n  private _srefs$: BehaviorSubject<UISref[]>;\r\n\r\n  constructor(@Inject(Globals) private _globals: UIRouterGlobals) {\r\n    this.status = Object.assign({}, inactiveStatus);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // Map each transition start event to a stream of:\r\n    // start -> (success|error)\r\n    let transEvents$: Observable<TransEvt> = this._globals.start$.switchMap((trans: Transition) => {\r\n      const event = (evt: string) => ({evt, trans} as TransEvt);\r\n\r\n      let transStart$ = Observable.of(event(\"start\"));\r\n      let transResult = trans.promise.then(() => event(\"success\"), () => event(\"error\"));\r\n      let transFinish$ = Observable.fromPromise(transResult);\r\n\r\n      return transStart$.concat(transFinish$);\r\n    });\r\n\r\n    // Watch the @ContentChildren UISref[] components and get their target states\r\n\r\n    // let srefs$: Observable<UISref[]> = Observable.of(this.srefs.toArray()).concat(this.srefs.changes);\r\n    this._srefs$ = new BehaviorSubject(this.srefs.toArray());\r\n    this._srefChangesSub = this.srefs.changes.subscribe(srefs => this._srefs$.next(srefs));\r\n\r\n    let targetStates$: Observable<TargetState[]> =\r\n        this._srefs$.switchMap((srefs: UISref[]) =>\r\n            Observable.combineLatest<TargetState[]>(srefs.map(sref => sref.targetState$)));\r\n\r\n    // Calculate the status of each UISref based on the transition event.\r\n    // Reduce the statuses (if multiple) by or-ing each flag.\r\n    this._subscription = transEvents$.mergeMap((evt: TransEvt) => {\r\n      return targetStates$.map((targets: TargetState[]) => {\r\n        let statuses: SrefStatus[] = targets.map(target => getSrefStatus(evt, target));\r\n        return statuses.reduce(mergeSrefStatus)\r\n      })\r\n    }).subscribe(this._setStatus.bind(this));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._subscription) this._subscription.unsubscribe();\r\n    if (this._srefChangesSub) this._srefChangesSub.unsubscribe();\r\n    if (this._srefs$) this._srefs$.unsubscribe();\r\n    this._subscription = this._srefChangesSub = this._srefs$ = undefined;\r\n  }\r\n\r\n  private _setStatus(status: SrefStatus) {\r\n    this.status = status;\r\n    this.uiSrefStatus.emit(status);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/directives/uiSrefStatus.ts","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/BehaviorSubject.js\n// module id = 120\n// module chunks = 0 1","/**\r\n * # UI-Router for Angular 2\r\n *\r\n * - [ui-router-ng2 home page](https://ui-router.github.io/ng2)\r\n * - [tutorials](https://ui-router.github.io/tutorial/ng2/helloworld)\r\n * - [quick start repository](http://github.com/ui-router/quickstart-ng2)\r\n *\r\n * Getting started:\r\n *\r\n * - Use npm. Add a dependency on latest `ui-router-ng2`\r\n * - Import UI-Router classes directly from `\"ui-router-ng2\"`\r\n *\r\n * ```js\r\n * import {StateRegistry} from \"ui-router-ng2\";\r\n * ```\r\n *\r\n * - Create application states (as defined by [[Ng2StateDeclaration]]).\r\n *\r\n * ```js\r\n * export let state1: Ng2StateDeclaration = {\r\n *   name: 'state1',\r\n *   component: State1Component,\r\n *   url: '/one'\r\n * }\r\n *\r\n * export let state2: Ng2StateDeclaration = {\r\n *   name: 'state2',\r\n *   component: State2Component,\r\n *   url: '/two'\r\n * }\r\n * ```\r\n *\r\n * - Import a [[UIRouterModule.forChild]] module into your feature `NgModule`s.\r\n *\r\n * ```js\r\n * @ NgModule({\r\n *   imports: [\r\n *     SharedModule,\r\n *     UIRouterModule.forChild({ states: [state1, state2 ] })\r\n *   ],\r\n *   declarations: [\r\n *     State1Component,\r\n *     State2Component,\r\n *   ]\r\n * })\r\n * export class MyFeatureModule {}\r\n * ```\r\n *\r\n * - Import a [[UIRouterModule.forRoot]] module into your application root `NgModule`\r\n * - Either bootstrap a [[UIView]] component, or add a `<ui-view></ui-view>` viewport to your root component.\r\n *\r\n * ```js\r\n * @ NgModule({\r\n *   imports: [\r\n *     BrowserModule,\r\n *     UIRouterModule.forRoot({ states: [ homeState ] }),\r\n *     MyFeatureModule,\r\n *   ],\r\n *   declarations: [\r\n *     HomeComponent\r\n *   ]\r\n *   bootstrap: [ UIView ]\r\n * })\r\n * class RootAppModule {}\r\n *\r\n * browserPlatformDynamic.bootstrapModule(RootAppModule);\r\n * ```\r\n *\r\n * - Optionally specify a configuration class [[ChildModule.configClass]] for any module\r\n * to perform any router configuration during bootstrap or lazyload.\r\n * Pass the class to [[UIRouterModule.forRoot]] or [[UIRouterModule.forChild]].\r\n *\r\n * ```js\r\n * import {UIRouter} from \"ui-router-ng2\";\r\n *\r\n * @ Injectable()\r\n * export class MyUIRouterConfig {\r\n *   // Constructor is injectable\r\n *   constructor(uiRouter: UIRouter) {\r\n *     uiRouter.urlMatcherFactory.type('datetime', myDateTimeParamType);\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * @preferred @module ng2\r\n */ /** */\r\nimport {Injector, Provider} from \"@angular/core\";\r\nimport {UIRouter} from \"ui-router-core\";\r\nimport {PathNode} from \"ui-router-core\";\r\nimport {StateRegistry} from \"ui-router-core\";\r\nimport {StateService} from \"ui-router-core\";\r\nimport {TransitionService} from \"ui-router-core\";\r\nimport {UrlMatcherFactory} from \"ui-router-core\";\r\nimport {UrlRouter} from \"ui-router-core\";\r\nimport {ViewService} from \"ui-router-core\";\r\nimport {UIView, ParentUIViewInject} from \"./directives/uiView\";\r\nimport {ng2ViewsBuilder, Ng2ViewConfig} from \"./statebuilders/views\";\r\nimport {Ng2ViewDeclaration} from \"./interface\";\r\nimport {applyRootModuleConfig, applyModuleConfig} from \"./uiRouterConfig\";\r\nimport {Globals} from \"ui-router-core\";\r\nimport {UIRouterLocation} from \"./location\";\r\nimport {services} from \"ui-router-core\";\r\nimport {Resolvable} from \"ui-router-core\";\r\nimport {RootModule, StatesModule, UIROUTER_ROOT_MODULE, UIROUTER_MODULE_TOKEN} from \"./uiRouterNgModule\";\r\nimport {UIRouterRx} from \"./rx\";\r\nimport {NATIVE_INJECTOR_TOKEN} from \"ui-router-core\";\r\n\r\n/**\r\n * This is a factory function for a UIRouter instance\r\n *\r\n * Creates a UIRouter instance and configures it for Angular 2, then invokes router bootstrap.\r\n * This function is used as an Angular 2 `useFactory` Provider.\r\n */\r\nexport function uiRouterFactory(location: UIRouterLocation, injector: Injector) {\r\n\r\n  let rootModules: RootModule[] = injector.get(UIROUTER_ROOT_MODULE);\r\n  let modules: StatesModule[] = injector.get(UIROUTER_MODULE_TOKEN);\r\n\r\n  if (rootModules.length !== 1) {\r\n    throw new Error(\"Exactly one UIRouterModule.forRoot() should be in the bootstrapped app module's imports: []\");\r\n  }\r\n\r\n  // ----------------- Monkey Patches ----------------\r\n  // Monkey patch the services.$injector to the ng2 Injector\r\n  services.$injector.get = injector.get.bind(injector);\r\n\r\n  // Monkey patch the services.$location with ng2 Location implementation\r\n  location.init();\r\n\r\n\r\n  // ----------------- Create router -----------------\r\n  // Create a new ng2 UIRouter and configure it for ng2\r\n  let router = new UIRouter();\r\n  new UIRouterRx(router);\r\n  let registry = router.stateRegistry;\r\n\r\n  // ----------------- Configure for ng2 -------------\r\n  // Apply ng2 ui-view handling code\r\n  router.viewService.viewConfigFactory(\"ng2\", (path: PathNode[], config: Ng2ViewDeclaration) => new Ng2ViewConfig(path, config));\r\n  registry.decorator('views', ng2ViewsBuilder);\r\n\r\n  // Apply statebuilder decorator for ng2 NgModule registration\r\n  registry.stateQueue.flush(router.stateService);\r\n\r\n  // Prep the tree of NgModule by placing the root NgModule's Injector on the root state.\r\n  let ng2InjectorResolvable = Resolvable.fromData(NATIVE_INJECTOR_TOKEN, injector);\r\n  registry.root().resolvables.push(ng2InjectorResolvable);\r\n\r\n\r\n  // ----------------- Initialize router -------------\r\n  // Allow states to be registered\r\n  registry.stateQueue.autoFlush(router.stateService);\r\n\r\n  setTimeout(() => {\r\n    rootModules.forEach(moduleConfig => applyRootModuleConfig(router, injector, moduleConfig));\r\n    modules.forEach(moduleConfig => applyModuleConfig(router, injector, moduleConfig));\r\n\r\n    // Start monitoring the URL\r\n    if (!router.urlRouterProvider.interceptDeferred) {\r\n      router.urlRouter.listen();\r\n      router.urlRouter.sync();\r\n    }\r\n  });\r\n\r\n  return router;\r\n};\r\n\r\nexport function parentUIViewInjectFactory(r: StateRegistry) { return { fqn: null, context: r.root() } as ParentUIViewInject; }\r\n\r\nexport const _UIROUTER_INSTANCE_PROVIDERS: Provider[] =  [\r\n  { provide: UIRouter, useFactory: uiRouterFactory, deps: [UIRouterLocation, Injector] },\r\n  { provide: UIRouterLocation, useClass: UIRouterLocation },\r\n  { provide: UIView.PARENT_INJECT, useFactory: parentUIViewInjectFactory, deps: [StateRegistry]},\r\n];\r\n\r\nexport function fnStateService(r: UIRouter) { return r.stateService; }\r\nexport function fnTransitionService(r: UIRouter) { return r.transitionService; }\r\nexport function fnUrlMatcherFactory(r: UIRouter) { return r.urlMatcherFactory; }\r\nexport function fnUrlRouter(r: UIRouter) { return r.urlRouter; }\r\nexport function fnViewService(r: UIRouter) { return r.viewService; }\r\nexport function fnStateRegistry(r: UIRouter) { return r.stateRegistry; }\r\nexport function fnGlobals(r: any) { return r.globals; }\r\n\r\nexport const _UIROUTER_SERVICE_PROVIDERS: Provider[] = [\r\n  { provide: StateService,      useFactory: fnStateService, deps: [UIRouter]},\r\n  { provide: TransitionService, useFactory: fnTransitionService, deps: [UIRouter]},\r\n  { provide: UrlMatcherFactory, useFactory: fnUrlMatcherFactory, deps: [UIRouter]},\r\n  { provide: UrlRouter,         useFactory: fnUrlRouter, deps: [UIRouter]},\r\n  { provide: ViewService,       useFactory: fnViewService, deps: [UIRouter]},\r\n  { provide: StateRegistry,     useFactory: fnStateRegistry, deps: [UIRouter]},\r\n  { provide: Globals,           useFactory: fnGlobals, deps: [UIRouter]},\r\n];\r\n\r\n/**\r\n * The UI-Router providers, for use in your application bootstrap\r\n *\r\n * @deprecated use [[UIRouterModule.forRoot]]\r\n */\r\nexport const UIROUTER_PROVIDERS: Provider[] = _UIROUTER_INSTANCE_PROVIDERS.concat(_UIROUTER_SERVICE_PROVIDERS);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/providers.ts","/** @module ng2 */ /** */\r\nimport {UIRouter} from \"ui-router-core\";\r\nimport {StatesModule, RootModule} from \"./uiRouterNgModule\";\r\nimport {Injector} from \"@angular/core\";\r\nimport {isDefined} from \"ui-router-core\";\r\n\r\nexport function applyModuleConfig(uiRouter: UIRouter, injector: Injector, options: StatesModule) {\r\n  if (options.configClass) {\r\n    injector.get(options.configClass);\r\n  }\r\n\r\n  let states = options.states || [];\r\n  states.forEach(state => uiRouter.stateRegistry.register(state));\r\n}\r\n\r\nexport function applyRootModuleConfig(uiRouter: UIRouter, injector: Injector, config: RootModule) {\r\n  if (isDefined(config.deferIntercept)) {\r\n    uiRouter.urlRouterProvider.deferIntercept(config.deferIntercept);\r\n  }\r\n\r\n  if (isDefined(config.otherwise)) {\r\n    if (isDefined(config.otherwise['state'])) {\r\n      uiRouter.urlRouterProvider.otherwise(function() {\r\n        let { state, params } = <any> config.otherwise;\r\n        uiRouter.stateService.go(state, params, { source: \"otherwise\" });\r\n        return null;\r\n      });\r\n    } else {\r\n      uiRouter.urlRouterProvider.otherwise(<any> config.otherwise);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/uiRouterConfig.ts","/** @module ng2 */ /** */\r\nimport {HashLocationStrategy, PlatformLocation, LocationStrategy, LocationChangeListener} from \"@angular/common\";\r\nimport {Injectable} from \"@angular/core\";\r\n\r\nimport {services} from \"ui-router-core\";\r\nimport {isDefined} from \"ui-router-core\";\r\nimport {applyPairs} from \"ui-router-core\";\r\nimport {beforeAfterSubstr} from \"ui-router-core\";\r\n\r\nconst splitOnHash = beforeAfterSubstr(\"#\");\r\nconst splitOnEquals = beforeAfterSubstr(\"=\");\r\nconst splitOnQuestionMark = beforeAfterSubstr(\"?\");\r\n\r\n@Injectable()\r\nexport class UIRouterLocation {\r\n  isHashBang: boolean;\r\n  hashPrefix: string = \"\";\r\n\r\n  constructor(\r\n      public locationStrategy: LocationStrategy,\r\n      public platformLocation: PlatformLocation\r\n  ) {\r\n    this.isHashBang = locationStrategy instanceof HashLocationStrategy;\r\n  }\r\n\r\n  init() {\r\n    let loc = services.location;\r\n    let locSt = this.locationStrategy;\r\n\r\n    if (this.isHashBang) {\r\n      loc.path = () =>\r\n          splitOnHash(splitOnQuestionMark(locSt.path())[0])[0];\r\n      loc.hash = () =>\r\n          splitOnHash(splitOnHash(this.platformLocation.hash)[1])[1];\r\n    } else {\r\n      let basepath = locSt.getBaseHref();\r\n      let basepathRegExp = new RegExp(\"^\" + basepath);\r\n      let replace = (basepath[basepath.length - 1] === '/') ? \"/\" : \"\";\r\n      loc.path = () =>\r\n          splitOnHash(splitOnQuestionMark(locSt.path())[0])[0].replace(basepathRegExp, replace);\r\n      loc.hash = () =>\r\n          splitOnHash(this.platformLocation.hash)[1];\r\n    }\r\n\r\n\r\n    loc.search = <any> (() => {\r\n      let queryString = splitOnHash(splitOnQuestionMark(locSt.path())[1])[0];\r\n      return queryString.split(\"&\").map(kv => splitOnEquals(kv)).reduce(applyPairs, {});\r\n    });\r\n\r\n    loc.setUrl = (url: string, replace: boolean = false) => {\r\n      if(isDefined(url)) {\r\n        let split = splitOnQuestionMark(url);\r\n        if (replace) {\r\n          locSt.replaceState(null, null, split[0], split[1]);\r\n        } else {\r\n          locSt.pushState(null, null, split[0], split[1]);\r\n        }\r\n      }\r\n    };\r\n\r\n    loc.onChange = (cb: LocationChangeListener) => locSt.onPopState(cb) as any;\r\n\r\n    let locCfg = <any> services.locationConfig;\r\n\r\n    locCfg.port = () => null as number;\r\n    locCfg.protocol = () => null as string;\r\n    locCfg.host = () => null as string;\r\n    locCfg.baseHref = () => locSt.getBaseHref();\r\n    locCfg.html5Mode = () => !this.isHashBang;\r\n    locCfg.hashPrefix = (newprefix: string): string => {\r\n      if(isDefined(newprefix)) {\r\n        this.hashPrefix = newprefix;\r\n      }\r\n      return this.hashPrefix;\r\n    };\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/location.ts"],"sourceRoot":""}