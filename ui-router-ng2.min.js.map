{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///ui-router-ng2.min.js","webpack:///webpack/bootstrap 2c80e9a8599a1ff33bc6?25c2","webpack:///./src/ng2.ts?532d","webpack:///./~/ui-router-core/lib/index.js?eb25","webpack:///./~/ui-router-core/lib/common/module.js?69d7","webpack:///./~/ui-router-core/lib/common/common.js?cf4d","webpack:///./~/ui-router-core/lib/common/predicates.js?d043","webpack:///./~/ui-router-core/lib/common/hof.js?f100","webpack:///./~/ui-router-core/lib/common/coreservices.js?cdcd","webpack:///./~/ui-router-core/lib/common/glob.js?6b30","webpack:///./~/ui-router-core/lib/common/queue.js?d4a0","webpack:///./~/ui-router-core/lib/common/strings.js?311e","webpack:///./~/ui-router-core/lib/transition/rejectFactory.js?f278","webpack:///./~/ui-router-core/lib/transition/transition.js?cb73","webpack:///./~/ui-router-core/lib/common/trace.js?439e","webpack:///./~/ui-router-core/lib/transition/transitionHook.js?f358","webpack:///./~/ui-router-core/lib/state/targetState.js?a35d","webpack:///./~/ui-router-core/lib/transition/hookRegistry.js?e1c9","webpack:///./~/ui-router-core/lib/transition/hookBuilder.js?a5b9","webpack:///./~/ui-router-core/lib/resolve/resolveContext.js?1544","webpack:///./~/ui-router-core/lib/resolve/interface.js?a665","webpack:///./~/ui-router-core/lib/resolve/resolvable.js?1f09","webpack:///./~/ui-router-core/lib/path/pathFactory.js?a7a1","webpack:///./~/ui-router-core/lib/path/node.js?8b12","webpack:///./~/ui-router-core/lib/params/param.js?ed16","webpack:///./~/ui-router-core/lib/url/urlMatcherConfig.js?4ba7","webpack:///./~/ui-router-core/lib/params/type.js?0b22","webpack:///./~/ui-router-core/lib/router.js?8102","webpack:///./~/ui-router-core/lib/url/urlMatcherFactory.js?891b","webpack:///./~/ui-router-core/lib/url/urlMatcher.js?d438","webpack:///./~/ui-router-core/lib/params/paramTypes.js?9d59","webpack:///./~/ui-router-core/lib/url/urlRouter.js?3a6c","webpack:///./~/ui-router-core/lib/transition/transitionService.js?3f7a","webpack:///./~/ui-router-core/lib/hooks/resolve.js?2c64","webpack:///./~/ui-router-core/lib/hooks/views.js?e195","webpack:///./~/ui-router-core/lib/hooks/url.js?b25f","webpack:///./~/ui-router-core/lib/hooks/redirectTo.js?5ea3","webpack:///./~/ui-router-core/lib/hooks/onEnterExitRetain.js?34a6","webpack:///./~/ui-router-core/lib/hooks/lazyLoadStates.js?648e","webpack:///./~/ui-router-core/lib/view/view.js?9313","webpack:///./~/ui-router-core/lib/state/stateRegistry.js?6ad5","webpack:///./~/ui-router-core/lib/state/stateMatcher.js?30f3","webpack:///./~/ui-router-core/lib/state/stateBuilder.js?a704","webpack:///./~/ui-router-core/lib/state/stateQueueManager.js?a439","webpack:///./~/ui-router-core/lib/state/stateObject.js?c26a","webpack:///./~/ui-router-core/lib/state/stateService.js?0391","webpack:///./~/ui-router-core/lib/globals.js?0b2e","webpack:///./~/ui-router-core/lib/params/stateParams.js?da15","webpack:///./~/ui-router-core/lib/params/module.js?a010","webpack:///./~/ui-router-core/lib/path/module.js?5b6b","webpack:///./~/ui-router-core/lib/resolve/module.js?0dbf","webpack:///./~/ui-router-core/lib/state/module.js?4b51","webpack:///./~/ui-router-core/lib/transition/module.js?4659","webpack:///./~/ui-router-core/lib/url/module.js?5e8c","webpack:///./~/ui-router-core/lib/view/module.js?12d2","webpack:///./~/ui-router-core/lib/justjs.js?f528","webpack:///./~/rxjs/add/observable/of.js?4154","webpack:///./~/rxjs/Observable.js?4e06","webpack:///./~/rxjs/util/root.js?93c3","webpack:///./~/rxjs/util/toSubscriber.js?f8fe","webpack:///./~/rxjs/Subscriber.js?215e","webpack:///./~/rxjs/util/isFunction.js?51c0","webpack:///./~/rxjs/Subscription.js?5c58","webpack:///./~/rxjs/util/isArray.js?b0ea","webpack:///./~/rxjs/util/isObject.js?aa2e","webpack:///./~/rxjs/util/tryCatch.js?7694","webpack:///./~/rxjs/util/errorObject.js?f49b","webpack:///./~/rxjs/util/UnsubscriptionError.js?bc9d","webpack:///./~/rxjs/Observer.js?f098","webpack:///./~/rxjs/symbol/rxSubscriber.js?112c","webpack:///./~/rxjs/symbol/observable.js?1f24","webpack:///./~/rxjs/observable/of.js?ddf7","webpack:///./~/rxjs/observable/ArrayObservable.js?7a6e","webpack:///./~/rxjs/observable/ScalarObservable.js?d097","webpack:///./~/rxjs/observable/EmptyObservable.js?dd31","webpack:///./~/rxjs/util/isScheduler.js?a2d5","webpack:///./~/rxjs/add/observable/combineLatest.js?7225","webpack:///./~/rxjs/observable/combineLatest.js?210f","webpack:///./~/rxjs/operator/combineLatest.js?c071","webpack:///./~/rxjs/OuterSubscriber.js?4197","webpack:///./~/rxjs/util/subscribeToResult.js?c011","webpack:///./~/rxjs/util/isPromise.js?68d7","webpack:///./~/rxjs/symbol/iterator.js?6b44","webpack:///./~/rxjs/InnerSubscriber.js?7259","webpack:///./~/rxjs/add/observable/fromPromise.js?7ab2","webpack:///./~/rxjs/observable/fromPromise.js?e03a","webpack:///./~/rxjs/observable/PromiseObservable.js?4e98","webpack:///./~/rxjs/add/operator/switchMap.js?ff90","webpack:///./~/rxjs/operator/switchMap.js?8193","webpack:///./~/rxjs/add/operator/mergeMap.js?a083","webpack:///./~/rxjs/operator/mergeMap.js?a0db","webpack:///./~/rxjs/add/operator/concat.js?9776","webpack:///./~/rxjs/operator/concat.js?a55d","webpack:///./~/rxjs/operator/mergeAll.js?341a","webpack:///./~/rxjs/add/operator/map.js?94b1","webpack:///./~/rxjs/operator/map.js?9cf8","webpack:///./src/ng2/lazyLoadNgModule.ts?cd7a","webpack:///external {\"root\":\"@angular/core\",\"amd\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"commonjs\":\"@angular/core\"}?3485","webpack:///./src/ng2/uiRouterNgModule.ts?8c9b","webpack:///external {\"root\":\"@angular/common\",\"amd\":\"@angular/common\",\"commonjs2\":\"@angular/common\",\"commonjs\":\"@angular/common\"}?3483","webpack:///./src/ng2/directives/directives.ts?627a","webpack:///./src/ng2/directives/uiSref.ts?d42f","webpack:///./src/ng2/directives/uiView.ts?6733","webpack:///./src/ng2/private_import_core.ts?e951","webpack:///./src/ng2/statebuilders/views.ts?6813","webpack:///./src/ng2/mergeInjector.ts?7f52","webpack:///./~/rxjs/ReplaySubject.js?d482","webpack:///./~/rxjs/Subject.js?c1c6","webpack:///./~/rxjs/util/ObjectUnsubscribedError.js?e559","webpack:///./~/rxjs/SubjectSubscription.js?d351","webpack:///./~/rxjs/scheduler/queue.js?9cb1","webpack:///./~/rxjs/scheduler/QueueAction.js?e4d0","webpack:///./~/rxjs/scheduler/AsyncAction.js?e414","webpack:///./~/rxjs/scheduler/Action.js?7296","webpack:///./~/rxjs/scheduler/QueueScheduler.js?482f","webpack:///./~/rxjs/scheduler/AsyncScheduler.js?ae69","webpack:///./~/rxjs/Scheduler.js?bb52","webpack:///./~/rxjs/operator/observeOn.js?66b7","webpack:///./~/rxjs/Notification.js?6d1f","webpack:///./src/ng2/rx.ts?6e34","webpack:///./src/ng2/directives/uiSrefActive.ts?aec6","webpack:///./src/ng2/directives/uiSrefStatus.ts?28ec","webpack:///./~/rxjs/BehaviorSubject.js?84cb","webpack:///./src/ng2/providers.ts?2f2b","webpack:///./src/ng2/uiRouterConfig.ts?a6bf","webpack:///./src/ng2/location.ts?7acc"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_95__","__WEBPACK_EXTERNAL_MODULE_97__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__export","hasOwnProperty","bindFunctions","from","to","bindTo","fnNames","Object","keys","filter","name","forEach","bind","defaults","opts","defaultsList","_i","arguments","length","merge","apply","concat","extend","pick","dst","objs","obj","value","key","ancestors","first","second","path","n","push","equalForKeys","a","b","i","k","pickOmitImpl","predicate","objCopy","inArray","restArgs","omit","notInArray","array","item","pluck","collection","propName","map","hof_1","prop","callback","arr","predicates_1","isArray","result","accept","x","find","pushR","assertPredicate","errMsg","Error","isFunction","arrayTuples","arrayArgs","reduce","min","Math","Array","ignored","idx","applyPairs","memo","keyValTuple","isString","tail","undefined","_copy","src","dest","_forEach","cb","_this","_copyProps","_extend","toObj","identity","_equals","o1","o2","t1","t2","tup","all","_arraysEq","isDate","getTime","isRegExp","toString","predicates","any","fn","a1","a2","t","coreservices_1","w","window","angular","fromJson","JSON","parse","toJson","stringify","copy","equals","noop","inherit","parent","extra","prototype","args","slice","indexOf","removeFrom","curry","splice","mergeR","mapObj","values","allTrueR","elem","anyTrueR","unnestR","flattenR","uniqR","acc","token","unnest","flatten","pairs","silenceUncaughtInPromise","promise","catch","e","silentRejection","error","services","$q","reject","isInjectable","val","head","not","toStr","tis","isUndefined","isDefined","isNull","o","isNumber","isObject","isPromise","and","pipe","curried","func_args_length","initial_args","compose","start","funcs","reverse","fn1","fn2","or","invoke","fnName","pattern","struct","propEq","split","is","ctor","constructor","eq","other","v","notImplemented","fnname","$injector","location","locationConfig","template","Glob","text","glob","regexpString","seg","join","regexp","RegExp","matches","test","fromString","Queue","_items","_limit","enqueue","items","shift","dequeue","size","clear","current","remove","peekTail","peekHead","maxLength","max","str","substr","padString","kebobString","camelCase","replace","$1","toLowerCase","functionToString","fnStr","fnToString","namedFunctionMatch","match","_fn","format","seen","stringifyPattern","rejectFactory_1","common_1","transition_1","resolvable_1","stringifyPatternFn","isTransitionRejectionPromise","Rejection","_transitionRejection","Transition","Resolvable","beforeAfterSubstr","char","strings_1","RejectType","type","message","detail","detailString","d","toPromise","then","superseded","options","rejection","SUPERSEDED","redirected","invalid","INVALID","IGNORED","aborted","ABORTED","errored","ERROR","trace_1","transitionHook_1","hookRegistry_1","hookBuilder_1","node_1","pathFactory_1","targetState_1","param_1","resolveContext_1","router_1","transitionCount","stateSelf","fromPath","targetState","router","_deferred","defer","treeChanges","_treeChanges","isActive","_options","_targetState","valid","HookRegistry","mixin","$id","toPath","PathFactory","buildToPath","reloadState","enteringStates","entering","node","state","applyViewConfigs","transitionService","$view","rootResolvables","UIRouter","params","rootNode","context","ResolveContext","addResolvables","onBefore","matchCriteria","onStart","onExit","onRetain","onEnter","onFinish","onSuccess","onError","$from","$to","self","compare","matchState","pathname","injector","subPath","getResolveTokens","getTokens","getResolveValue","resolveContext","getData","resolvable","getResolvable","data","addResolvable","stateName","topath","targetNode","redirectedFrom","exiting","retained","views","redirect","newOptions","source","TargetState","identifier","$state","newTransition","create","originalEnteringNodes","redirectEnteringNodes","nodeIsReloading","includes","matchingEnteringNodes","PathNode","matching","resolvables","_changedParams","_a","reload","nodeSchemas","paramSchema","_b","paramValues","toValues","fromValues","tuples","schema","toVals","fromVals","Param","changed","dynamic","changes","hookBuilder","HookBuilder","transition","run","runSynchronousHooks","TransitionHook","runAllHooks","globals","transitionHistory","syncResult","getOnBeforeHooks","rejectReason","trace","traceTransitionIgnored","transitionSuccess","traceSuccess","success","resolve","getOnSuccessHooks","transitionError","reason","traceError","_error","getOnErrorHooks","traceTransitionStart","appendHookToChain","prev","nextHook","invokeHook","asyncHooks","redirects","trans","abstract","validates","parameters","fromStateOrName","toStateOrName","avoidEmptyHash","fromParams","toValid","toParams","diToken","uiViewString","viewData","creationContext","fqn","normalizedCat","input","Category","viewConfigString","viewConfig","viewDecl","$context","$uiViewName","$uiViewContextAnchor","Trace","_enabled","approximateDigests","_set","enabled","categories","parseInt","isNaN","category","enable","disable","TRANSITION","tid","digest","transitionStr","console","log","traceHookInvocation","step","HOOK","event","eventHook","traceHookResult","hookResult","transitionOptions","hookResultStr","traceResolvePath","when","RESOLVE","pathStr","traceResolvableResolved","resolvableStr","finalState","traceUIViewEvent","UIVIEW","traceUIViewConfigUpdated","traceUIViewFill","html","traceViewServiceEvent","VIEWCONFIG","traceViewServiceUIViewEvent","defaultOptions","async","rejectIfSuperseded","traceData","stateContext","isSuperseded","synchronousHookResult","_deregistered","handleHookResult","isTargetState","hooks","hook","exception","errorHandler","stateService","defaultErrorHandler","results","hooks_1","chain","_identifier","_definition","_params","exists","base","relative","criterion","matchGlobs","_state","globStrings","toMatch","glob_1","matchFn","makeHookRegistrationFn","matchObject","EventHook","priority","_matchingNodes","nodes","mc","allMatched","_transitionEvents","getHooks","target","tupleSort","reverseDepthSort","l","r","factor","depthDelta","$transitions","baseHookOptions","_buildNodeHooks","getOnStartHooks","getOnExitHooks","stateHook","getOnRetainHooks","getOnEnterHooks","getOnFinishHooks","toState","fromState","onStartHooks","onExitHooks","onRetainHooks","onEnterHooks","onFinishHooks","hookType","matchingNodesProp","sortHooksFn","matchingHooks","_matchingHooks","makeTransitionHooks","matchingNodes","resolvePath","transitionHook","sort","tuple","hookName","reg","interface_1","resolvePolicies","ALL_WHENS","EAGER","LAZY","EAGER_WHENS","NATIVE_INJECTOR_TOKEN","_path","subContext","newResolvables","whenOption","matchedWhens","promises","matchesRequestedPolicy","getPolicy","nodeResolvables","getResult","get","_injector","UIInjectorImpl","findNode","getDependencies","availableResolvables","res","getDependency","fromInjector","getNative","deps","native","resolved","getAsync","WAIT","NOWAIT","RXWAIT","defaultResolvePolicy","arg1","resolveFn","policy","literal","thisPolicy","statePolicy","resolvePolicy","getResolvableDependencies","invokeResolveFn","resolvedDeps","waitForRx","observable$","cached","cache","take","maybeWaitForRx","applyResolvedValue","resolvedValue","clone","fromData","makeTargetState","buildPath","applyRawParams","inheritParams","states","viewDecls","viewConfigs","view","createViewConfig","toKeys","nodeParamVals","makeInheritedParamsNode","toNode","toParamVals","incomingParamVals","fromParamVals","ownParamVals","applyToParams","retainedNode","cloned","keep","staticParams","nodesMatch","node1","node2","retainedWithToParams","elementIdx","stateOrPath","getParamVal","paramDef","pDef","parameter","paramValsEq","pathA","pathB","ignoreDynamicParams","changedParams","param","unwrapShorthand","cfg","isShorthand","$$fn","getType","urlType","paramTypes","type_1","ParamType","DefType","CONFIG","getSquashPolicy","config","isOptional","squash","urlMatcherConfig_1","matcherConfig","defaultSquashPolicy","getReplace","arrayMode","configuredKeys","defaultPolicy","hasOwn","getArrayMode","arrayDefaults","SEARCH","arrayParamNomenclature","$asArray","isDefaultValue","$$getDefaultValue","defaultValue","$replace","replacement","$normalize","isSearch","normalized","encoded","encode","exec","fromConfig","PATH","fromSearch","values1","values2","MatcherConfig","_isCaseInsensitive","_isStrictMode","_defaultSquashPolicy","caseInsensitive","strictMode","ArrayType","mode","arrayWrap","arrayUnwrap","arrayHandler","allTruthyMode","arrayEqualsHandler","val1","val2","left","right","paramTypeFn","wrapperFn","$arrayMode","def","decode","$subPattern","sub","urlMatcherFactory_1","urlRouter_1","urlRouter_2","transitionService_1","view_1","stateRegistry_1","stateService_1","globals_1","viewService","ViewService","TransitionService","Globals","urlMatcherFactory","UrlMatcherFactory","urlRouterProvider","UrlRouterProvider","urlRouter","UrlRouter","stateRegistry","StateRegistry","StateService","rootContext","$current","getDefaultConfig","strict","urlMatcher_1","paramTypes_1","ParamTypes","UrlMatcher","compile","isMatcher","object","definition","definitionFn","$get","_flushTypeQueue","quoteRegExp","string","surroundPattern","predicates_2","param_2","common_2","common_3","memoizeTo","_cache","_children","_segments","_compiled","paramMap","segment","placeholder","searchPlaceholder","last","patterns","checkParamErrors","nameValidator","matchDetails","substring","index","lastIndex","search","prefix","freeze","append","url","isRoot","hash","decodePathArray","reverseString","unquoteDashes","allReversed","allParams","pathParams","searchParams","nPathSegments","urlm","j","validParamVal","getDetails","urlMatchers","pathSegmentsAndParams","queryParams","pathString","encodeDashes","raw","encodeURIComponent","queryString","charCodeAt","toUpperCase","matcher","staticSegments","valToString","~","/","valFromString","~~","~2F","typeQueue","defaultTypes","String","int","bool","Boolean","date","getFullYear","getMonth","getDate","capture","Date","valueOf","json","makeType","types","regExpPrefix","re","interpolate","what","Number","handleIfMatch","$stateParams","handler","$match","appendBasePath","isHtml5","absolute","baseHref","update","rules","otherwiseFn","evt","check","rule","handled","$location","setUrl","defaultPrevented","$urlMatcherFactory","interceptDeferred","removeRule","otherwise","ruleCallback","handlerIsString","strategies","_what","_handler","regex","global","sticky","deferIntercept","sync","listen","listener","onChange","read","urlMatcher","href","html5Mode","hashPrefix","slash","port","protocol","host","resolve_1","views_1","url_1","redirectTo_1","onEnterExitRetain_1","lazyLoadStates_1","defaultTransOpts","notify","custom","_router","_deregisterHookFns","registerTransitionHooks","fns","redirectTo","registerRedirectToHook","registerOnExitHook","registerOnRetainHook","registerOnEnterHook","eagerResolve","registerEagerResolvePath","lazyResolve","registerLazyResolveState","loadViews","registerLoadEnteringViews","activateViews","registerActivateViews","updateUrl","registerUpdateUrl","lazyLoad","registerLazyLoadHook","eagerResolvePath","lazyResolveState","loadEnteringViews","enteringViews","load","exitingViews","vc","deactivateViewConfig","activateViewConfig","$urlRouter","navigable","urlOptions","redirectToHook","handleResult","makeEnterExitRetainHook","hookFn","onExitHook","onRetainHook","onEnterHook","lazyLoadHook","retryOriginalTransition","loc","path_1","search_1","hash_1","registry","s","$$state","orig","updateStateRegistry","deregister","register","cleanup","uiViews","_viewConfigFactories","uiViewDepth","uiView","viewConfigDepth","count","uiViewsByFqn","uiv","$type","vcSegments","uivSegments","negOffset","fqnToFirstSegment","uiViewContext","depthCompare","depthFn","posNeg","matchingConfigPair","matchingConfigs","configureUIView","configUpdated","_rootContext","viewConfigFactory","viewType","decl","cfgFactory","cfgs","registerUIView","fqnMatches","available","active","normalizeUIViewTarget","rawViewName","viewAtContext","uiViewName","uiViewContextAnchor","relativeViewNameSugar","charAt","relativeMatch","anchor","stateMatcher_1","stateBuilder_1","stateQueueManager_1","listeners","StateMatcher","builder","StateBuilder","stateQueue","StateQueueManager","rootStateDef","#","_root","onStatesChanged","stateDefinition","_deregisterTree","getChildren","children","deregistered","_urlRule","stateOrName","deregisteredStates","found","decorator","func","_states","isRelative","isStr","baseState","splitName","pathLength","relName","nameBuilder","selfBuilder","dataBuilder","pathBuilder","includesBuilder","resolvablesBuilder","objects2Tuples","resolveObj","annotate","strictDi","isResolveLiteral","isLikeNg2Provider","provide","useValue","useFactory","useExisting","useClass","isTupleFromObj","literal2Resolvable","dependencies","tuple2Resolvable","item2Resolvable","parseUrl","getUrlBuilder","$urlMatcherFactoryProvider","stateDec","parsed","paramConfig","reloadOnSearch","getNavigableBuilder","getParamsBuilder","makeConfigParam","urlParams","nonUrlParams","parentBuilder","parentName","builders","build","parentFn","segments","lastSegment","pop","stateObject_1","$urlRouterProvider","queue","State","flush","registered","orphans","previousQueueLength","orphanIdx","attachRoute","autoFlush","transitionTo","ref","inherited","queue_1","invalidCallbacks","_defaultErrorHandler","$error$","stack","getters","boundFns","defineProperty","enumerable","configurable","_handleInvalidTargetState","invokeNextCallback","nextCallback","callbackQueue","callbackResult","checkForRedirect","latestThing","latest","onInvalid","go","defautGoOpts","transOpts","transHistory","latestSuccess","successfulTransitions","rootPath","currentPath","rejectedTransitionHandler","transitionToPromise","include","defaultHrefOpts","lossy","$inherit","nav","stateParams_1","StateParams","beforeNewTransition","$transition$","updateGlobalState","clearCurrentTransition","newParams","parentParams","parents","inheritList","executor","Promise","deferred","objectToTuples","tuplesToObject","has","locals","ensureExist","STRIP_COMMENTS","ARGUMENT_NAMES","addEventListener","locCfg","Observable_1","of_1","Observable","of","root_1","toSubscriber_1","observable_1","subscribe","_isScalar","_subscribe","lift","operator","observable","observerOrNext","complete","sink","toSubscriber","add","syncErrorThrowable","syncErrorThrown","syncErrorValue","next","PromiseCtor","Rx","subscription","err","unsubscribe","subscriber","$$observable","objectTypes","boolean","function","number","freeGlobal","nextOrObserver","Subscriber_1","Subscriber","rxSubscriber_1","$$rxSubscriber","__extends","__","isFunction_1","Subscription_1","Observer_1","_super","destinationOrNext","isStopped","destination","empty","SafeSubscriber","_next","_complete","closed","Subscription","_parent","_context","__tryOrSetError","__tryOrUnsub","_unsubscribe","isArray_1","isObject_1","tryCatch_1","errorObject_1","UnsubscriptionError_1","errors","hasErrors","_subscriptions","trial","tryCatch","errorObject","len","UnsubscriptionError","teardown","EMPTY","subscriptions","subscriptionIndex","tryCatcher","tryCatchTarget","Symbol","for","getSymbolObservable","ArrayObservable_1","ArrayObservable","ScalarObservable_1","EmptyObservable_1","isScheduler_1","scheduler","isScheduler","ScalarObservable","EmptyObservable","dispatch","schedule","done","arg","combineLatest_1","combineLatest","observables","project","CombineLatestOperator","unshift","OuterSubscriber_1","subscribeToResult_1","none","CombineLatestSubscriber","toRespond","subscribeToResult","notifyComplete","unused","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","oldVal","_tryProject","OuterSubscriber","notifyError","outerSubscriber","InnerSubscriber_1","InnerSubscriber","isPromise_1","setTimeout","iterator_1","$$iterator","iterator","obs","TypeError","Set","Map","getOwnPropertyNames","fromPromise_1","fromPromise","PromiseObservable_1","PromiseObservable","dispatchNext","dispatchError","switchMap_1","switchMap","resultSelector","SwitchMapOperator","SwitchMapSubscriber","_innerSub","innerSubscription","_tryNotifyNext","mergeMap_1","mergeMap","flatMap","concurrent","POSITIVE_INFINITY","MergeMapOperator","observer","MergeMapSubscriber","hasCompleted","buffer","_tryNext","ish","_notifyResultSelector","concat_1","concatStatic","mergeAll_1","MergeAllOperator","mergeAll","MergeAllSubscriber","map_1","thisArg","MapOperator","MapSubscriber","loadNgModule","moduleToLoad","ng2Injector","ui_router_core_1","createModule","applyModule","moduleRef","applyNgModule","loadModuleFactory","core_1","NgModuleFactoryLoader","compiler","Compiler","offlineMode","loadChildrenPromise","compileAsync","moduleType","compileModuleAsync","ng2Module","parentInjector","uiRouter","originalName","originalState","newRootModules","multiProviderParentChildDelta","uiRouterNgModule_1","UIROUTER_ROOT_MODULE","newModules","UIROUTER_MODULE_TOKEN","uiRouterConfig_1","applyModuleConfig","replacementState","child","childVals","parentVals","makeRootProviders","multi","ANALYZE_FOR_ENTRY_COMPONENTS","makeChildProviders","locationStrategy","useHash","LocationStrategy","HashLocationStrategy","PathLocationStrategy","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__metadata","metadata","directives_1","uiView_1","providers_1","UIRouterModule","forRoot","ngModule","providers","_UIROUTER_INSTANCE_PROVIDERS","_UIROUTER_SERVICE_PROVIDERS","forChild","NgModule","imports","CommonModule","declarations","_UIROUTER_DIRECTIVES","entryComponents","UIView","OpaqueToken","uiSref_1","uiSrefActive_1","uiSrefStatus_1","UISref","AnchorUISref","UISrefActive","UISrefStatus","UIROUTER_DIRECTIVES","__param","paramIndex","core_2","core_3","core_4","ui_router_core_2","ui_router_core_3","ReplaySubject_1","_el","_renderer","setElementProperty","nativeElement","Directive","selector","ElementRef","Renderer","_anchorUISref","_globals","targetState$","ReplaySubject","_emit","_statesSub","states$","set","ngOnInit","ngOnDestroy","newTarget","getOptions","defaultOpts","Input","(click)","Inject","PARENT_INJECT","Optional","private_import_core_1","ui_router_core_4","mergeInjector_1","ng2ComponentInputs","ng2CompClass","props","reflector","propMetadata","_props","annoArr","anno","bindingPropertyName","inputs","annotations","Component","viewContainerRef","uiViewData","parentFqn","viewConfigUpdated","disposeLast","componentRef","destroy","Ng2ViewConfig","applyUpdatedConfig","componentInjector","getComponentInjector","componentClass","component","compFactoryResolver","ComponentFactoryResolver","compFactory","resolveComponentFactory","componentTarget","createComponent","applyInputBindings","newProviders","parentInject","parentComponentInjector","moduleInjector","mergedParentInjector","MergeInjector","ReflectiveInjector","resolveAndCreate","bindings","inputTuples","instance","changeDetectorRef","detectChanges","ViewChild","ViewContainerRef","__core_private__","ng2ViewsBuilder","viewsObject","$default","$name","injectors","notFoundValue","NOT_FOUND","Subject_1","observeOn_1","bufferSize","windowTime","_events","_bufferSize","_windowTime","now","_getNow","ReplayEvent","_trimBufferThenGetEvents","ObserveOnSubscriber","eventsCount","spliceCount","time","Subject","ObjectUnsubscribedError_1","SubjectSubscription_1","SubjectSubscriber","observers","hasError","thrownError","subject","AnonymousSubject","ObjectUnsubscribedError","SubjectSubscription","asObservable","subscriberIndex","QueueAction_1","QueueScheduler_1","QueueScheduler","QueueAction","AsyncAction_1","work","delay","execute","_execute","requestAsyncId","AsyncAction","Action_1","pending","recycleAsyncId","setInterval","clearInterval","errorValue","actions","Action","AsyncScheduler_1","AsyncScheduler","Scheduler_1","scheduled","action","Scheduler","SchedulerAction","observeOn","ObserveOnOperator","Notification_1","notification","observe","scheduleMessage","ObserveOnMessage","Notification","createNext","createError","createComplete","kind","hasValue","do","toObservable","throw","undefinedValueNotification","completeNotification","UIRouterRx","onStatesChangedEvent","changeEvent","currentStates","deregisterFns","start$","success$","params$","assign","dispose","deregisterFn","uiSrefStatus","rnd","_classes","_classesEq","_subscription","cls","setElementClass","exact","Host","spreadToSubPaths","basePath","appendPath","getSrefStatus","srefTarget","pathMatchesTarget","pathMatches","tc","isStartEvent","isSuccessEvent","activePath","isExact","isEntering","isExiting","mergeSrefStatus","BehaviorSubject_1","inactiveStatus","targetParamVals","targetPath","tailNode","EventEmitter","status","ngAfterContentInit","transEvents$","transStart$","transResult","transFinish$","_srefs$","BehaviorSubject","srefs","toArray","_srefChangesSub","targetStates$","sref","targets","statuses","_setStatus","emit","Output","ContentChildren","descendants","QueryList","_value","getValue","uiRouterFactory","rootModules","ui_router_core_9","init","rx_1","ng2InjectorResolvable","ui_router_core_10","ui_router_core_11","moduleConfig","applyRootModuleConfig","parentUIViewInjectFactory","fnStateService","fnTransitionService","fnUrlMatcherFactory","fnUrlRouter","fnViewService","fnStateRegistry","fnGlobals","ui_router_core_5","ui_router_core_6","ui_router_core_7","ui_router_core_8","location_1","UIRouterLocation","Injector","UIROUTER_PROVIDERS","configClass","splitOnHash","splitOnEquals","splitOnQuestionMark","platformLocation","isHashBang","locSt","basepath","getBaseHref","basepathRegExp_1","replace_1","kv","replaceState","pushState","onPopState","newprefix","Injectable","PlatformLocation"],"mappings":"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","file":"ui-router-ng2.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ui-router-ng2\", [\"@angular/core\", \"@angular/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ui-router-ng2\"] = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse\n\t\troot[\"ui-router-ng2\"] = factory(root[\"@angular/core\"], root[\"@angular/common\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_95__, __WEBPACK_EXTERNAL_MODULE_97__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ui-router-ng2\", [\"@angular/core\", \"@angular/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ui-router-ng2\"] = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse\n\t\troot[\"ui-router-ng2\"] = factory(root[\"@angular/core\"], root[\"@angular/common\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_95__, __WEBPACK_EXTERNAL_MODULE_97__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t/** @ng2api @module ng2 */ /** for typedoc */\r\n\t__export(__webpack_require__(1));\r\n\t__webpack_require__(53);\r\n\t__webpack_require__(54);\r\n\t__webpack_require__(74);\r\n\t__webpack_require__(82);\r\n\t__webpack_require__(85);\r\n\t__webpack_require__(87);\r\n\t__webpack_require__(89);\r\n\t__webpack_require__(92);\r\n\t__export(__webpack_require__(94));\r\n\t__export(__webpack_require__(117));\r\n\t__export(__webpack_require__(121));\r\n\t__export(__webpack_require__(123));\r\n\t__export(__webpack_require__(98));\r\n\t__export(__webpack_require__(102));\r\n\t__export(__webpack_require__(96));\r\n\t__export(__webpack_require__(122));\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @module common */ /** */\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t__export(__webpack_require__(2));\n\t__export(__webpack_require__(46));\n\t__export(__webpack_require__(47));\n\t__export(__webpack_require__(48));\n\t__export(__webpack_require__(49));\n\t__export(__webpack_require__(50));\n\t__export(__webpack_require__(51));\n\t__export(__webpack_require__(52));\n\t__export(__webpack_require__(44));\n\t__export(__webpack_require__(25));\n\t//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t/** @module common */ /** for typedoc */\n\t__export(__webpack_require__(3));\n\t__export(__webpack_require__(6));\n\t__export(__webpack_require__(7));\n\t__export(__webpack_require__(5));\n\t__export(__webpack_require__(4));\n\t__export(__webpack_require__(8));\n\t__export(__webpack_require__(9));\n\t__export(__webpack_require__(12));\n\t//# sourceMappingURL=module.js.map\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Random utility functions used in the UI-Router code\n\t *\n\t * These functions are exported, but are subject to change without notice.\n\t *\n\t * @preferred @module common\n\t */ /** for typedoc */\n\t\"use strict\";\n\tvar predicates_1 = __webpack_require__(4);\n\tvar hof_1 = __webpack_require__(5);\n\tvar coreservices_1 = __webpack_require__(6);\n\tvar w = typeof window === 'undefined' ? {} : window;\n\tvar angular = w.angular || {};\n\texports.fromJson = angular.fromJson || JSON.parse.bind(JSON);\n\texports.toJson = angular.toJson || JSON.stringify.bind(JSON);\n\texports.copy = angular.copy || _copy;\n\texports.forEach = angular.forEach || _forEach;\n\texports.extend = angular.extend || _extend;\n\texports.equals = angular.equals || _equals;\n\texports.identity = function (x) { return x; };\n\texports.noop = function () { return undefined; };\n\t/**\n\t * Binds and copies functions onto an object\n\t *\n\t * Takes functions from the 'from' object, binds those functions to the _this object, and puts the bound functions\n\t * on the 'to' object.\n\t *\n\t * This example creates an new class instance whose functions are prebound to the new'd object.\n\t * @example\n\t * ```\n\t *\n\t * class Foo {\n\t *   constructor(data) {\n\t *     // Binds all functions from Foo.prototype to 'this',\n\t *     // then copies them to 'this'\n\t *     bindFunctions(Foo.prototype, this, this);\n\t *     this.data = data;\n\t *   }\n\t *\n\t *   log() {\n\t *     console.log(this.data);\n\t *   }\n\t * }\n\t *\n\t * let myFoo = new Foo([1,2,3]);\n\t * var logit = myFoo.log;\n\t * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n\t * ```\n\t *\n\t * This example creates a bound version of a service function, and copies it to another object\n\t * @example\n\t * ```\n\t *\n\t * var SomeService = {\n\t *   this.data = [3, 4, 5];\n\t *   this.log = function() {\n\t *     console.log(this.data);\n\t *   }\n\t * }\n\t *\n\t * // Constructor fn\n\t * function OtherThing() {\n\t *   // Binds all functions from SomeService to SomeService,\n\t *   // then copies them to 'this'\n\t *   bindFunctions(SomeService, this, SomeService);\n\t * }\n\t *\n\t * let myOtherThing = new OtherThing();\n\t * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n\t * ```\n\t *\n\t * @param from The object which contains the functions to be bound\n\t * @param to The object which will receive the bound functions\n\t * @param bindTo The object which the functions will be bound to\n\t * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n\t */\n\tfunction bindFunctions(from, to, bindTo, fnNames) {\n\t    if (fnNames === void 0) { fnNames = Object.keys(from); }\n\t    return fnNames.filter(function (name) { return typeof from[name] === 'function'; })\n\t        .forEach(function (name) { return to[name] = from[name].bind(bindTo); });\n\t}\n\texports.bindFunctions = bindFunctions;\n\t/**\n\t * prototypal inheritance helper.\n\t * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n\t */\n\texports.inherit = function (parent, extra) {\n\t    return exports.extend(new (exports.extend(function () { }, { prototype: parent }))(), extra);\n\t};\n\t/**\n\t * Given an arguments object, converts the arguments at index idx and above to an array.\n\t * This is similar to es6 rest parameters.\n\t *\n\t * Optionally, the argument at index idx may itself already be an array.\n\t *\n\t * For example,\n\t * given either:\n\t *        arguments = [ obj, \"foo\", \"bar\" ]\n\t * or:\n\t *        arguments = [ obj, [\"foo\", \"bar\"] ]\n\t * then:\n\t *        restArgs(arguments, 1) == [\"foo\", \"bar\"]\n\t *\n\t * This allows functions like pick() to be implemented such that it allows either a bunch\n\t * of string arguments (like es6 rest parameters), or a single array of strings:\n\t *\n\t * given:\n\t *        var obj = { foo: 1, bar: 2, baz: 3 };\n\t * then:\n\t *        pick(obj, \"foo\", \"bar\");   // returns { foo: 1, bar: 2 }\n\t *        pick(obj, [\"foo\", \"bar\"]); // returns { foo: 1, bar: 2 }\n\t */\n\tvar restArgs = function (args, idx) {\n\t    if (idx === void 0) { idx = 0; }\n\t    return Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(args, idx));\n\t};\n\t/** Given an array, returns true if the object is found in the array, (using indexOf) */\n\texports.inArray = function (array, obj) {\n\t    return array.indexOf(obj) !== -1;\n\t};\n\t/** Given an array, and an item, if the item is found in the array, it removes it (in-place).  The same array is returned */\n\texports.removeFrom = hof_1.curry(function (array, obj) {\n\t    var idx = array.indexOf(obj);\n\t    if (idx >= 0)\n\t        array.splice(idx, 1);\n\t    return array;\n\t});\n\t/**\n\t * Applies a set of defaults to an options object.  The options object is filtered\n\t * to only those properties of the objects in the defaultsList.\n\t * Earlier objects in the defaultsList take precedence when applying defaults.\n\t */\n\tfunction defaults(opts) {\n\t    if (opts === void 0) { opts = {}; }\n\t    var defaultsList = [];\n\t    for (var _i = 1; _i < arguments.length; _i++) {\n\t        defaultsList[_i - 1] = arguments[_i];\n\t    }\n\t    var defaults = merge.apply(null, [{}].concat(defaultsList));\n\t    return exports.extend({}, defaults, pick(opts || {}, Object.keys(defaults)));\n\t}\n\texports.defaults = defaults;\n\t/**\n\t * Merges properties from the list of objects to the destination object.\n\t * If a property already exists in the destination object, then it is not overwritten.\n\t */\n\tfunction merge(dst) {\n\t    var objs = [];\n\t    for (var _i = 1; _i < arguments.length; _i++) {\n\t        objs[_i - 1] = arguments[_i];\n\t    }\n\t    exports.forEach(objs, function (obj) {\n\t        exports.forEach(obj, function (value, key) {\n\t            if (!dst.hasOwnProperty(key))\n\t                dst[key] = value;\n\t        });\n\t    });\n\t    return dst;\n\t}\n\texports.merge = merge;\n\t/** Reduce function that merges each element of the list into a single object, using extend */\n\texports.mergeR = function (memo, item) { return exports.extend(memo, item); };\n\t/**\n\t * Finds the common ancestor path between two states.\n\t *\n\t * @param {Object} first The first state.\n\t * @param {Object} second The second state.\n\t * @return {Array} Returns an array of state names in descending order, not including the root.\n\t */\n\tfunction ancestors(first, second) {\n\t    var path = [];\n\t    for (var n in first.path) {\n\t        if (first.path[n] !== second.path[n])\n\t            break;\n\t        path.push(first.path[n]);\n\t    }\n\t    return path;\n\t}\n\texports.ancestors = ancestors;\n\t/**\n\t * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n\t *\n\t * @param {Object} a The first object.\n\t * @param {Object} b The second object.\n\t * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n\t *                     it defaults to the list of keys in `a`.\n\t * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n\t */\n\tfunction equalForKeys(a, b, keys) {\n\t    if (keys === void 0) { keys = Object.keys(a); }\n\t    for (var i = 0; i < keys.length; i++) {\n\t        var k = keys[i];\n\t        if (a[k] != b[k])\n\t            return false; // Not '===', values aren't necessarily normalized\n\t    }\n\t    return true;\n\t}\n\texports.equalForKeys = equalForKeys;\n\tfunction pickOmitImpl(predicate, obj) {\n\t    var keys = [];\n\t    for (var _i = 2; _i < arguments.length; _i++) {\n\t        keys[_i - 2] = arguments[_i];\n\t    }\n\t    var objCopy = {};\n\t    for (var key in obj) {\n\t        if (predicate(keys, key))\n\t            objCopy[key] = obj[key];\n\t    }\n\t    return objCopy;\n\t}\n\t/** Return a copy of the object only containing the whitelisted properties. */\n\tfunction pick(obj) {\n\t    return pickOmitImpl.apply(null, [exports.inArray].concat(restArgs(arguments)));\n\t}\n\texports.pick = pick;\n\t/** Return a copy of the object omitting the blacklisted properties. */\n\tfunction omit(obj) {\n\t    var notInArray = function (array, item) { return !exports.inArray(array, item); };\n\t    return pickOmitImpl.apply(null, [notInArray].concat(restArgs(arguments)));\n\t}\n\texports.omit = omit;\n\t/**\n\t * Maps an array, or object to a property (by name)\n\t */\n\tfunction pluck(collection, propName) {\n\t    return map(collection, hof_1.prop(propName));\n\t}\n\texports.pluck = pluck;\n\t/** Filters an Array or an Object's properties based on a predicate */\n\tfunction filter(collection, callback) {\n\t    var arr = predicates_1.isArray(collection), result = arr ? [] : {};\n\t    var accept = arr ? function (x) { return result.push(x); } : function (x, key) { return result[key] = x; };\n\t    exports.forEach(collection, function (item, i) {\n\t        if (callback(item, i))\n\t            accept(item, i);\n\t    });\n\t    return result;\n\t}\n\texports.filter = filter;\n\t/** Finds an object from an array, or a property of an object, that matches a predicate */\n\tfunction find(collection, callback) {\n\t    var result;\n\t    exports.forEach(collection, function (item, i) {\n\t        if (result)\n\t            return;\n\t        if (callback(item, i))\n\t            result = item;\n\t    });\n\t    return result;\n\t}\n\texports.find = find;\n\t/** Given an object, returns a new object, where each property is transformed by the callback function */\n\texports.mapObj = map;\n\t/** Maps an array or object properties using a callback function */\n\tfunction map(collection, callback) {\n\t    var result = predicates_1.isArray(collection) ? [] : {};\n\t    exports.forEach(collection, function (item, i) { return result[i] = callback(item, i); });\n\t    return result;\n\t}\n\texports.map = map;\n\t/**\n\t * Given an object, return its enumerable property values\n\t *\n\t * @example\n\t * ```\n\t *\n\t * let foo = { a: 1, b: 2, c: 3 }\n\t * let vals = values(foo); // [ 1, 2, 3 ]\n\t * ```\n\t */\n\texports.values = function (obj) {\n\t    return Object.keys(obj).map(function (key) { return obj[key]; });\n\t};\n\t/**\n\t * Reduce function that returns true if all of the values are truthy.\n\t *\n\t * @example\n\t * ```\n\t *\n\t * let vals = [ 1, true, {}, \"hello world\"];\n\t * vals.reduce(allTrueR, true); // true\n\t *\n\t * vals.push(0);\n\t * vals.reduce(allTrueR, true); // false\n\t * ```\n\t */\n\texports.allTrueR = function (memo, elem) { return memo && elem; };\n\t/**\n\t * Reduce function that returns true if any of the values are truthy.\n\t *\n\t *  * @example\n\t * ```\n\t *\n\t * let vals = [ 0, null, undefined ];\n\t * vals.reduce(anyTrueR, true); // false\n\t *\n\t * vals.push(\"hello world\");\n\t * vals.reduce(anyTrueR, true); // true\n\t * ```\n\t */\n\texports.anyTrueR = function (memo, elem) { return memo || elem; };\n\t/**\n\t * Reduce function which un-nests a single level of arrays\n\t * @example\n\t * ```\n\t *\n\t * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n\t * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n\t * ```\n\t */\n\texports.unnestR = function (memo, elem) { return memo.concat(elem); };\n\t/**\n\t * Reduce function which recursively un-nests all arrays\n\t *\n\t * @example\n\t * ```\n\t *\n\t * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n\t * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n\t * ```\n\t */\n\texports.flattenR = function (memo, elem) {\n\t    return predicates_1.isArray(elem) ? memo.concat(elem.reduce(exports.flattenR, [])) : pushR(memo, elem);\n\t};\n\t/**\n\t * Reduce function that pushes an object to an array, then returns the array.\n\t * Mostly just for [[flattenR]] and [[uniqR]]\n\t */\n\tfunction pushR(arr, obj) {\n\t    arr.push(obj);\n\t    return arr;\n\t}\n\texports.pushR = pushR;\n\t/** Reduce function that filters out duplicates */\n\texports.uniqR = function (acc, token) {\n\t    return exports.inArray(acc, token) ? acc : pushR(acc, token);\n\t};\n\t/**\n\t * Return a new array with a single level of arrays unnested.\n\t *\n\t * @example\n\t * ```\n\t *\n\t * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n\t * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n\t * ```\n\t */\n\texports.unnest = function (arr) { return arr.reduce(exports.unnestR, []); };\n\t/**\n\t * Return a completely flattened version of an array.\n\t *\n\t * @example\n\t * ```\n\t *\n\t * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n\t * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n\t * ```\n\t */\n\texports.flatten = function (arr) { return arr.reduce(exports.flattenR, []); };\n\t/**\n\t * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n\t * @example\n\t * ```\n\t *\n\t * let isNumber = (obj) => typeof(obj) === 'number';\n\t * let allNumbers = [ 1, 2, 3, 4, 5 ];\n\t * allNumbers.filter(assertPredicate(isNumber)); //OK\n\t *\n\t * let oneString = [ 1, 2, 3, 4, \"5\" ];\n\t * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n\t * ```\n\t */\n\tfunction assertPredicate(predicate, errMsg) {\n\t    if (errMsg === void 0) { errMsg = \"assert failure\"; }\n\t    return function (obj) {\n\t        if (!predicate(obj)) {\n\t            throw new Error(predicates_1.isFunction(errMsg) ? errMsg(obj) : errMsg);\n\t        }\n\t        return true;\n\t    };\n\t}\n\texports.assertPredicate = assertPredicate;\n\t/**\n\t * Like _.pairs: Given an object, returns an array of key/value pairs\n\t *\n\t * @example\n\t * ```\n\t *\n\t * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n\t * ```\n\t */\n\texports.pairs = function (obj) {\n\t    return Object.keys(obj).map(function (key) { return [key, obj[key]]; });\n\t};\n\t/**\n\t * Given two or more parallel arrays, returns an array of tuples where\n\t * each tuple is composed of [ a[i], b[i], ... z[i] ]\n\t *\n\t * @example\n\t * ```\n\t *\n\t * let foo = [ 0, 2, 4, 6 ];\n\t * let bar = [ 1, 3, 5, 7 ];\n\t * let baz = [ 10, 30, 50, 70 ];\n\t * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n\t * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n\t * ```\n\t */\n\tfunction arrayTuples() {\n\t    var arrayArgs = [];\n\t    for (var _i = 0; _i < arguments.length; _i++) {\n\t        arrayArgs[_i - 0] = arguments[_i];\n\t    }\n\t    if (arrayArgs.length === 0)\n\t        return [];\n\t    var length = arrayArgs.reduce(function (min, arr) { return Math.min(arr.length, min); }, 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n\t    return Array.apply(null, Array(length)).map(function (ignored, idx) { return arrayArgs.map(function (arr) { return arr[idx]; }); });\n\t}\n\texports.arrayTuples = arrayTuples;\n\t/**\n\t * Reduce function which builds an object from an array of [key, value] pairs.\n\t *\n\t * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n\t *\n\t * Each keyValueTuple should be an array with values [ key: string, value: any ]\n\t *\n\t * @example\n\t * ```\n\t *\n\t * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n\t *\n\t * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n\t * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n\t *\n\t * // Or, more simply:\n\t * var pairsToObj = pairs.reduce(applyPairs, {})\n\t * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n\t * ```\n\t */\n\tfunction applyPairs(memo, keyValTuple) {\n\t    var key, value;\n\t    if (predicates_1.isArray(keyValTuple))\n\t        key = keyValTuple[0], value = keyValTuple[1];\n\t    if (!predicates_1.isString(key))\n\t        throw new Error(\"invalid parameters to applyPairs\");\n\t    memo[key] = value;\n\t    return memo;\n\t}\n\texports.applyPairs = applyPairs;\n\t/** Get the last element of an array */\n\tfunction tail(arr) {\n\t    return arr.length && arr[arr.length - 1] || undefined;\n\t}\n\texports.tail = tail;\n\t/**\n\t * shallow copy from src to dest\n\t *\n\t * note: This is a shallow copy, while angular.copy is a deep copy.\n\t * ui-router uses `copy` only to make copies of state parameters.\n\t */\n\tfunction _copy(src, dest) {\n\t    if (dest)\n\t        Object.keys(dest).forEach(function (key) { return delete dest[key]; });\n\t    if (!dest)\n\t        dest = {};\n\t    return exports.extend(dest, src);\n\t}\n\t/** Naive forEach implementation works with Objects or Arrays */\n\tfunction _forEach(obj, cb, _this) {\n\t    if (predicates_1.isArray(obj))\n\t        return obj.forEach(cb, _this);\n\t    Object.keys(obj).forEach(function (key) { return cb(obj[key], key); });\n\t}\n\tfunction _copyProps(to, from) {\n\t    Object.keys(from).forEach(function (key) { return to[key] = from[key]; });\n\t    return to;\n\t}\n\tfunction _extend(toObj) {\n\t    return restArgs(arguments, 1).filter(exports.identity).reduce(_copyProps, toObj);\n\t}\n\tfunction _equals(o1, o2) {\n\t    if (o1 === o2)\n\t        return true;\n\t    if (o1 === null || o2 === null)\n\t        return false;\n\t    if (o1 !== o1 && o2 !== o2)\n\t        return true; // NaN === NaN\n\t    var t1 = typeof o1, t2 = typeof o2;\n\t    if (t1 !== t2 || t1 !== 'object')\n\t        return false;\n\t    var tup = [o1, o2];\n\t    if (hof_1.all(predicates_1.isArray)(tup))\n\t        return _arraysEq(o1, o2);\n\t    if (hof_1.all(predicates_1.isDate)(tup))\n\t        return o1.getTime() === o2.getTime();\n\t    if (hof_1.all(predicates_1.isRegExp)(tup))\n\t        return o1.toString() === o2.toString();\n\t    if (hof_1.all(predicates_1.isFunction)(tup))\n\t        return true; // meh\n\t    var predicates = [predicates_1.isFunction, predicates_1.isArray, predicates_1.isDate, predicates_1.isRegExp];\n\t    if (predicates.map(hof_1.any).reduce(function (b, fn) { return b || !!fn(tup); }, false))\n\t        return false;\n\t    var key, keys = {};\n\t    for (key in o1) {\n\t        if (!_equals(o1[key], o2[key]))\n\t            return false;\n\t        keys[key] = true;\n\t    }\n\t    for (key in o2) {\n\t        if (!keys[key])\n\t            return false;\n\t    }\n\t    return true;\n\t}\n\tfunction _arraysEq(a1, a2) {\n\t    if (a1.length !== a2.length)\n\t        return false;\n\t    return arrayTuples(a1, a2).reduce(function (b, t) { return b && _equals(t[0], t[1]); }, true);\n\t}\n\t// issue #2676\n\texports.silenceUncaughtInPromise = function (promise) {\n\t    return promise.catch(function (e) { return 0; }) && promise;\n\t};\n\texports.silentRejection = function (error) {\n\t    return exports.silenceUncaughtInPromise(coreservices_1.services.$q.reject(error));\n\t};\n\t//# sourceMappingURL=common.js.map\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** Predicates\n\t *\n\t * These predicates return true/false based on the input.\n\t * Although these functions are exported, they are subject to change without notice.\n\t *\n\t * @module common_predicates\n\t */ /** */\n\tvar hof_1 = __webpack_require__(5);\n\tvar toStr = Object.prototype.toString;\n\tvar tis = function (t) { return function (x) { return typeof (x) === t; }; };\n\texports.isUndefined = tis('undefined');\n\texports.isDefined = hof_1.not(exports.isUndefined);\n\texports.isNull = function (o) { return o === null; };\n\texports.isFunction = tis('function');\n\texports.isNumber = tis('number');\n\texports.isString = tis('string');\n\texports.isObject = function (x) { return x !== null && typeof x === 'object'; };\n\texports.isArray = Array.isArray;\n\texports.isDate = (function (x) { return toStr.call(x) === '[object Date]'; });\n\texports.isRegExp = (function (x) { return toStr.call(x) === '[object RegExp]'; });\n\t/**\n\t * Predicate which checks if a value is injectable\n\t *\n\t * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n\t * where all the elements in the array are Strings, except the last one, which is a Function\n\t */\n\tfunction isInjectable(val) {\n\t    if (exports.isArray(val) && val.length) {\n\t        var head = val.slice(0, -1), tail = val.slice(-1);\n\t        return !(head.filter(hof_1.not(exports.isString)).length || tail.filter(hof_1.not(exports.isFunction)).length);\n\t    }\n\t    return exports.isFunction(val);\n\t}\n\texports.isInjectable = isInjectable;\n\t/**\n\t * Predicate which checks if a value looks like a Promise\n\t *\n\t * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n\t */\n\texports.isPromise = hof_1.and(exports.isObject, hof_1.pipe(hof_1.prop('then'), exports.isFunction));\n\t//# sourceMappingURL=predicates.js.map\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Higher order functions\n\t *\n\t * These utility functions are exported, but are subject to change without notice.\n\t *\n\t * @module common_hof\n\t */ /** */\n\t\"use strict\";\n\t/**\n\t * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n\t *\n\t * Given a function with N parameters, returns a new function that supports partial application.\n\t * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n\t * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n\t * accept more parameters until all N parameters have been supplied.\n\t *\n\t *\n\t * This contrived example uses a partially applied function as an predicate, which returns true\n\t * if an object is found in both arrays.\n\t * @example\n\t * ```\n\t * // returns true if an object is in both of the two arrays\n\t * function inBoth(array1, array2, object) {\n\t *   return array1.indexOf(object) !== -1 &&\n\t *          array2.indexOf(object) !== 1;\n\t * }\n\t * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n\t * let foos = [obj1, obj3]\n\t * let bars = [obj3, obj4, obj5]\n\t *\n\t * // A curried \"copy\" of inBoth\n\t * let curriedInBoth = curry(inBoth);\n\t * // Partially apply both the array1 and array2\n\t * let inFoosAndBars = curriedInBoth(foos, bars);\n\t *\n\t * // Supply the final argument; since all arguments are\n\t * // supplied, the original inBoth function is then called.\n\t * let obj1InBoth = inFoosAndBars(obj1); // false\n\t *\n\t * // Use the inFoosAndBars as a predicate.\n\t * // Filter, on each iteration, supplies the final argument\n\t * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n\t * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n\t *\n\t * ```\n\t *\n\t * Stolen from: http://stackoverflow.com/questions/4394747/javascript-curry-function\n\t *\n\t * @param fn\n\t * @returns {*|function(): (*|any)}\n\t */\n\tfunction curry(fn) {\n\t    var initial_args = [].slice.apply(arguments, [1]);\n\t    var func_args_length = fn.length;\n\t    function curried(args) {\n\t        if (args.length >= func_args_length)\n\t            return fn.apply(null, args);\n\t        return function () {\n\t            return curried(args.concat([].slice.apply(arguments)));\n\t        };\n\t    }\n\t    return curried(initial_args);\n\t}\n\texports.curry = curry;\n\t/**\n\t * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n\t * given: f(x), g(x), h(x)\n\t * let composed = compose(f,g,h)\n\t * then, composed is: f(g(h(x)))\n\t */\n\tfunction compose() {\n\t    var args = arguments;\n\t    var start = args.length - 1;\n\t    return function () {\n\t        var i = start, result = args[start].apply(this, arguments);\n\t        while (i--)\n\t            result = args[i].call(this, result);\n\t        return result;\n\t    };\n\t}\n\texports.compose = compose;\n\t/**\n\t * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n\t * given: f(x), g(x), h(x)\n\t * let piped = pipe(f,g,h);\n\t * then, piped is: h(g(f(x)))\n\t */\n\tfunction pipe() {\n\t    var funcs = [];\n\t    for (var _i = 0; _i < arguments.length; _i++) {\n\t        funcs[_i - 0] = arguments[_i];\n\t    }\n\t    return compose.apply(null, [].slice.call(arguments).reverse());\n\t}\n\texports.pipe = pipe;\n\t/**\n\t * Given a property name, returns a function that returns that property from an object\n\t * let obj = { foo: 1, name: \"blarg\" };\n\t * let getName = prop(\"name\");\n\t * getName(obj) === \"blarg\"\n\t */\n\texports.prop = function (name) {\n\t    return function (obj) { return obj && obj[name]; };\n\t};\n\t/**\n\t * Given a property name and a value, returns a function that returns a boolean based on whether\n\t * the passed object has a property that matches the value\n\t * let obj = { foo: 1, name: \"blarg\" };\n\t * let getName = propEq(\"name\", \"blarg\");\n\t * getName(obj) === true\n\t */\n\texports.propEq = curry(function (name, val, obj) { return obj && obj[name] === val; });\n\t/**\n\t * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n\t * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n\t * let getName = prop(\"nestedObj.name\");\n\t * getName(obj) === \"blarg\"\n\t * let propNotFound = prop(\"this.property.doesnt.exist\");\n\t * propNotFound(obj) === undefined\n\t */\n\texports.parse = function (name) {\n\t    return pipe.apply(null, name.split(\".\").map(exports.prop));\n\t};\n\t/**\n\t * Given a function that returns a truthy or falsey value, returns a\n\t * function that returns the opposite (falsey or truthy) value given the same inputs\n\t */\n\texports.not = function (fn) {\n\t    return function () {\n\t        var args = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            args[_i - 0] = arguments[_i];\n\t        }\n\t        return !fn.apply(null, args);\n\t    };\n\t};\n\t/**\n\t * Given two functions that return truthy or falsey values, returns a function that returns truthy\n\t * if both functions return truthy for the given arguments\n\t */\n\tfunction and(fn1, fn2) {\n\t    return function () {\n\t        var args = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            args[_i - 0] = arguments[_i];\n\t        }\n\t        return fn1.apply(null, args) && fn2.apply(null, args);\n\t    };\n\t}\n\texports.and = and;\n\t/**\n\t * Given two functions that return truthy or falsey values, returns a function that returns truthy\n\t * if at least one of the functions returns truthy for the given arguments\n\t */\n\tfunction or(fn1, fn2) {\n\t    return function () {\n\t        var args = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            args[_i - 0] = arguments[_i];\n\t        }\n\t        return fn1.apply(null, args) || fn2.apply(null, args);\n\t    };\n\t}\n\texports.or = or;\n\t/**\n\t * Check if all the elements of an array match a predicate function\n\t *\n\t * @param fn1 a predicate function `fn1`\n\t * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n\t */\n\texports.all = function (fn1) {\n\t    return function (arr) { return arr.reduce(function (b, x) { return b && !!fn1(x); }, true); };\n\t};\n\texports.any = function (fn1) {\n\t    return function (arr) { return arr.reduce(function (b, x) { return b || !!fn1(x); }, false); };\n\t};\n\t/** Given a class, returns a Predicate function that returns true if the object is of that class */\n\texports.is = function (ctor) { return function (obj) {\n\t    return (obj != null && obj.constructor === ctor || obj instanceof ctor);\n\t}; };\n\t/** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\n\texports.eq = function (val) { return function (other) {\n\t    return val === other;\n\t}; };\n\t/** Given a value, returns a function which returns the value */\n\texports.val = function (v) { return function () { return v; }; };\n\tfunction invoke(fnName, args) {\n\t    return function (obj) {\n\t        return obj[fnName].apply(obj, args);\n\t    };\n\t}\n\texports.invoke = invoke;\n\t/**\n\t * Sorta like Pattern Matching (a functional programming conditional construct)\n\t *\n\t * See http://c2.com/cgi/wiki?PatternMatching\n\t *\n\t * This is a conditional construct which allows a series of predicates and output functions\n\t * to be checked and then applied.  Each predicate receives the input.  If the predicate\n\t * returns truthy, then its matching output function (mapping function) is provided with\n\t * the input and, then the result is returned.\n\t *\n\t * Each combination (2-tuple) of predicate + output function should be placed in an array\n\t * of size 2: [ predicate, mapFn ]\n\t *\n\t * These 2-tuples should be put in an outer array.\n\t *\n\t * @example\n\t * ```\n\t *\n\t * // Here's a 2-tuple where the first element is the isString predicate\n\t * // and the second element is a function that returns a description of the input\n\t * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n\t *\n\t * // Second tuple: predicate \"isNumber\", mapfn returns a description\n\t * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n\t *\n\t * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n\t *\n\t * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n\t *\n\t * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n\t *\n\t * console.log(descriptionOf(undefined)); // 'notdefined'\n\t * console.log(descriptionOf(55)); // '(55) That's a number!'\n\t * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n\t * ```\n\t *\n\t * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n\t * with a Predicate and a mapping/output function\n\t * @returns {function(any): *}\n\t */\n\tfunction pattern(struct) {\n\t    return function (x) {\n\t        for (var i = 0; i < struct.length; i++) {\n\t            if (struct[i][0](x))\n\t                return struct[i][1](x);\n\t        }\n\t    };\n\t}\n\texports.pattern = pattern;\n\t//# sourceMappingURL=hof.js.map\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar notImplemented = function (fnname) { return function () {\n\t    throw new Error(fnname + \"(): No coreservices implementation for UI-Router is loaded. You should include one of: ['angular1.js']\");\n\t}; };\n\tvar services = {\n\t    $q: undefined,\n\t    $injector: undefined,\n\t    location: {},\n\t    locationConfig: {},\n\t    template: {}\n\t};\n\texports.services = services;\n\t[\"setUrl\", \"path\", \"search\", \"hash\", \"onChange\"]\n\t    .forEach(function (key) { return services.location[key] = notImplemented(key); });\n\t[\"port\", \"protocol\", \"host\", \"baseHref\", \"html5Mode\", \"hashPrefix\"]\n\t    .forEach(function (key) { return services.locationConfig[key] = notImplemented(key); });\n\t//# sourceMappingURL=coreservices.js.map\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/** @module core */\n\t/**\n\t * Matches state names using glob-like pattern strings.\n\t *\n\t * Globs can be used in specific APIs including:\n\t *\n\t * - [[StateService.is]]\n\t * - [[StateService.includes]]\n\t * - The first argument to Hook Registration functions like [[TransitionService.onStart]]\n\t *    - [[HookMatchCriteria]] and [[HookMatchCriterion]]\n\t *\n\t * A `Glob` string is a pattern which matches state names.\n\t * Nested state names are split into segments (separated by a dot) when processing.\n\t * The state named `foo.bar.baz` is split into three segments ['foo', 'bar', 'baz']\n\t *\n\t * Globs work according to the following rules:\n\t *\n\t * ### Exact match:\n\t *\n\t * The glob `'A.B'` matches the state named exactly `'A.B'`.\n\t *\n\t * | Glob        |Matches states named|Does not match state named|\n\t * |:------------|:--------------------|:---------------------|\n\t * | `'A'`       | `'A'`               | `'B'` , `'A.C'`      |\n\t * | `'A.B'`     | `'A.B'`             | `'A'` , `'A.B.C'`    |\n\t * | `'foo'`     | `'foo'`             | `'FOO'` , `'foo.bar'`|\n\t *\n\t * ### Single star (`*`)\n\t *\n\t * A single star (`*`) is a wildcard that matches exactly one segment.\n\t *\n\t * | Glob        |Matches states named  |Does not match state named |\n\t * |:------------|:---------------------|:--------------------------|\n\t * | `'*'`       | `'A'` , `'Z'`        | `'A.B'` , `'Z.Y.X'`       |\n\t * | `'A.*'`     | `'A.B'` , `'A.C'`    | `'A'` , `'A.B.C'`         |\n\t * | `'A.*.*'`   | `'A.B.C'` , `'A.X.Y'`| `'A'`, `'A.B'` , `'Z.Y.X'`|\n\t *\n\t * ### Double star (`**`)\n\t *\n\t * A double star (`'**'`) is a wildcard that matches *zero or more segments*\n\t *\n\t * | Glob        |Matches states named                           |Does not match state named         |\n\t * |:------------|:----------------------------------------------|:----------------------------------|\n\t * | `'**'`      | `'A'` , `'A.B'`, `'Z.Y.X'`                    | (matches all states)              |\n\t * | `'A.**'`    | `'A'` , `'A.B'` , `'A.C.X'`                   | `'Z.Y.X'`                         |\n\t * | `'**.X'`    | `'X'` , `'A.X'` , `'Z.Y.X'`                   | `'A'` , `'A.login.Z'`             |\n\t * | `'A.**.X'`  | `'A.X'` , `'A.B.X'` , `'A.B.C.X'`             | `'A'` , `'A.B.C'`                 |\n\t *\n\t */\n\tvar Glob = (function () {\n\t    function Glob(text) {\n\t        this.text = text;\n\t        this.glob = text.split('.');\n\t        var regexpString = this.text.split('.')\n\t            .map(function (seg) {\n\t            if (seg === '**')\n\t                return '(?:|(?:\\\\.[^.]*)*)';\n\t            if (seg === '*')\n\t                return '\\\\.[^.]*';\n\t            return '\\\\.' + seg;\n\t        }).join('');\n\t        this.regexp = new RegExp(\"^\" + regexpString + \"$\");\n\t    }\n\t    Glob.prototype.matches = function (name) {\n\t        return this.regexp.test('.' + name);\n\t    };\n\t    /** @deprecated whats the point? */\n\t    Glob.is = function (text) {\n\t        return text.indexOf('*') > -1;\n\t    };\n\t    /** @deprecated whats the point? */\n\t    Glob.fromString = function (text) {\n\t        if (!this.is(text))\n\t            return null;\n\t        return new Glob(text);\n\t    };\n\t    return Glob;\n\t}());\n\texports.Glob = Glob;\n\t//# sourceMappingURL=glob.js.map\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @module common\n\t */ /** for typedoc */\n\t\"use strict\";\n\tvar Queue = (function () {\n\t    function Queue(_items, _limit) {\n\t        if (_items === void 0) { _items = []; }\n\t        if (_limit === void 0) { _limit = null; }\n\t        this._items = _items;\n\t        this._limit = _limit;\n\t    }\n\t    Queue.prototype.enqueue = function (item) {\n\t        var items = this._items;\n\t        items.push(item);\n\t        if (this._limit && items.length > this._limit)\n\t            items.shift();\n\t        return item;\n\t    };\n\t    Queue.prototype.dequeue = function () {\n\t        if (this.size())\n\t            return this._items.splice(0, 1)[0];\n\t    };\n\t    Queue.prototype.clear = function () {\n\t        var current = this._items;\n\t        this._items = [];\n\t        return current;\n\t    };\n\t    Queue.prototype.size = function () {\n\t        return this._items.length;\n\t    };\n\t    Queue.prototype.remove = function (item) {\n\t        var idx = this._items.indexOf(item);\n\t        return idx > -1 && this._items.splice(idx, 1)[0];\n\t    };\n\t    Queue.prototype.peekTail = function () {\n\t        return this._items[this._items.length - 1];\n\t    };\n\t    Queue.prototype.peekHead = function () {\n\t        if (this.size())\n\t            return this._items[0];\n\t    };\n\t    return Queue;\n\t}());\n\texports.Queue = Queue;\n\t//# sourceMappingURL=queue.js.map\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Functions that manipulate strings\n\t *\n\t * Although these functions are exported, they are subject to change without notice.\n\t *\n\t * @module common_strings\n\t */ /** */\n\t\"use strict\";\n\tvar predicates_1 = __webpack_require__(4);\n\tvar rejectFactory_1 = __webpack_require__(10);\n\tvar common_1 = __webpack_require__(3);\n\tvar hof_1 = __webpack_require__(5);\n\tvar transition_1 = __webpack_require__(11);\n\tvar resolvable_1 = __webpack_require__(19);\n\t/**\n\t * Returns a string shortened to a maximum length\n\t *\n\t * If the string is already less than the `max` length, return the string.\n\t * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n\t *\n\t * @param max the maximum length of the string to return\n\t * @param str the input string\n\t */\n\tfunction maxLength(max, str) {\n\t    if (str.length <= max)\n\t        return str;\n\t    return str.substr(0, max - 3) + \"...\";\n\t}\n\texports.maxLength = maxLength;\n\t/**\n\t * Returns a string, with spaces added to the end, up to a desired str length\n\t *\n\t * If the string is already longer than the desired length, return the string.\n\t * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n\t *\n\t * @param length the desired length of the string to return\n\t * @param str the input string\n\t */\n\tfunction padString(length, str) {\n\t    while (str.length < length)\n\t        str += \" \";\n\t    return str;\n\t}\n\texports.padString = padString;\n\tfunction kebobString(camelCase) {\n\t    return camelCase\n\t        .replace(/^([A-Z])/, function ($1) { return $1.toLowerCase(); }) // replace first char\n\t        .replace(/([A-Z])/g, function ($1) { return \"-\" + $1.toLowerCase(); }); // replace rest\n\t}\n\texports.kebobString = kebobString;\n\tfunction _toJson(obj) {\n\t    return JSON.stringify(obj);\n\t}\n\tfunction _fromJson(json) {\n\t    return predicates_1.isString(json) ? JSON.parse(json) : json;\n\t}\n\tfunction promiseToString(p) {\n\t    return \"Promise(\" + JSON.stringify(p) + \")\";\n\t}\n\tfunction functionToString(fn) {\n\t    var fnStr = fnToString(fn);\n\t    var namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n\t    var toStr = namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n\t    var fnName = fn['name'] || \"\";\n\t    if (fnName && toStr.match(/function \\(/)) {\n\t        return 'function ' + fnName + toStr.substr(9);\n\t    }\n\t    return toStr;\n\t}\n\texports.functionToString = functionToString;\n\tfunction fnToString(fn) {\n\t    var _fn = predicates_1.isArray(fn) ? fn.slice(-1)[0] : fn;\n\t    return _fn && _fn.toString() || \"undefined\";\n\t}\n\texports.fnToString = fnToString;\n\tvar stringifyPatternFn = null;\n\tvar stringifyPattern = function (value) {\n\t    var isTransitionRejectionPromise = rejectFactory_1.Rejection.isTransitionRejectionPromise;\n\t    stringifyPatternFn = stringifyPatternFn || hof_1.pattern([\n\t        [hof_1.not(predicates_1.isDefined), hof_1.val(\"undefined\")],\n\t        [predicates_1.isNull, hof_1.val(\"null\")],\n\t        [predicates_1.isPromise, hof_1.val(\"[Promise]\")],\n\t        [isTransitionRejectionPromise, function (x) { return x._transitionRejection.toString(); }],\n\t        [hof_1.is(rejectFactory_1.Rejection), hof_1.invoke(\"toString\")],\n\t        [hof_1.is(transition_1.Transition), hof_1.invoke(\"toString\")],\n\t        [hof_1.is(resolvable_1.Resolvable), hof_1.invoke(\"toString\")],\n\t        [predicates_1.isInjectable, functionToString],\n\t        [hof_1.val(true), common_1.identity]\n\t    ]);\n\t    return stringifyPatternFn(value);\n\t};\n\tfunction stringify(o) {\n\t    var seen = [];\n\t    function format(val) {\n\t        if (predicates_1.isObject(val)) {\n\t            if (seen.indexOf(val) !== -1)\n\t                return '[circular ref]';\n\t            seen.push(val);\n\t        }\n\t        return stringifyPattern(val);\n\t    }\n\t    return JSON.stringify(o, function (key, val) { return format(val); }).replace(/\\\\\"/g, '\"');\n\t}\n\texports.stringify = stringify;\n\t/** Returns a function that splits a string on a character or substring */\n\texports.beforeAfterSubstr = function (char) { return function (str) {\n\t    if (!str)\n\t        return [\"\", \"\"];\n\t    var idx = str.indexOf(char);\n\t    if (idx === -1)\n\t        return [str, \"\"];\n\t    return [str.substr(0, idx), str.substr(idx + 1)];\n\t}; };\n\t//# sourceMappingURL=strings.js.map\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @internal @module transition */ /** for typedoc */\n\t\"use strict\";\n\tvar common_1 = __webpack_require__(3);\n\tvar strings_1 = __webpack_require__(9);\n\t(function (RejectType) {\n\t    RejectType[RejectType[\"SUPERSEDED\"] = 2] = \"SUPERSEDED\";\n\t    RejectType[RejectType[\"ABORTED\"] = 3] = \"ABORTED\";\n\t    RejectType[RejectType[\"INVALID\"] = 4] = \"INVALID\";\n\t    RejectType[RejectType[\"IGNORED\"] = 5] = \"IGNORED\";\n\t    RejectType[RejectType[\"ERROR\"] = 6] = \"ERROR\";\n\t})(exports.RejectType || (exports.RejectType = {}));\n\tvar RejectType = exports.RejectType;\n\tvar Rejection = (function () {\n\t    function Rejection(type, message, detail) {\n\t        this.type = type;\n\t        this.message = message;\n\t        this.detail = detail;\n\t    }\n\t    Rejection.prototype.toString = function () {\n\t        var detailString = function (d) {\n\t            return d && d.toString !== Object.prototype.toString ? d.toString() : strings_1.stringify(d);\n\t        };\n\t        var type = this.type, message = this.message, detail = detailString(this.detail);\n\t        return \"TransitionRejection(type: \" + type + \", message: \" + message + \", detail: \" + detail + \")\";\n\t    };\n\t    Rejection.prototype.toPromise = function () {\n\t        return common_1.extend(common_1.silentRejection(this), { _transitionRejection: this });\n\t    };\n\t    /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n\t    Rejection.isTransitionRejectionPromise = function (obj) {\n\t        return obj && (typeof obj.then === 'function') && obj._transitionRejection instanceof Rejection;\n\t    };\n\t    /** Returns a TransitionRejection due to transition superseded */\n\t    Rejection.superseded = function (detail, options) {\n\t        var message = \"The transition has been superseded by a different transition\";\n\t        var rejection = new Rejection(RejectType.SUPERSEDED, message, detail);\n\t        if (options && options.redirected) {\n\t            rejection.redirected = true;\n\t        }\n\t        return rejection;\n\t    };\n\t    /** Returns a TransitionRejection due to redirected transition */\n\t    Rejection.redirected = function (detail) {\n\t        return Rejection.superseded(detail, { redirected: true });\n\t    };\n\t    /** Returns a TransitionRejection due to invalid transition */\n\t    Rejection.invalid = function (detail) {\n\t        var message = \"This transition is invalid\";\n\t        return new Rejection(RejectType.INVALID, message, detail);\n\t    };\n\t    /** Returns a TransitionRejection due to ignored transition */\n\t    Rejection.ignored = function (detail) {\n\t        var message = \"The transition was ignored\";\n\t        return new Rejection(RejectType.IGNORED, message, detail);\n\t    };\n\t    /** Returns a TransitionRejection due to aborted transition */\n\t    Rejection.aborted = function (detail) {\n\t        // TODO think about how to encapsulate an Error() object\n\t        var message = \"The transition has been aborted\";\n\t        return new Rejection(RejectType.ABORTED, message, detail);\n\t    };\n\t    /** Returns a TransitionRejection due to aborted transition */\n\t    Rejection.errored = function (detail) {\n\t        // TODO think about how to encapsulate an Error() object\n\t        var message = \"The transition errored\";\n\t        return new Rejection(RejectType.ERROR, message, detail);\n\t    };\n\t    return Rejection;\n\t}());\n\texports.Rejection = Rejection;\n\t//# sourceMappingURL=rejectFactory.js.map\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @internal @module transition */ /** for typedoc */\n\tvar strings_1 = __webpack_require__(9);\n\tvar trace_1 = __webpack_require__(12);\n\tvar coreservices_1 = __webpack_require__(6);\n\tvar common_1 = __webpack_require__(3);\n\tvar predicates_1 = __webpack_require__(4);\n\tvar hof_1 = __webpack_require__(5);\n\tvar transitionHook_1 = __webpack_require__(13);\n\tvar hookRegistry_1 = __webpack_require__(15);\n\tvar hookBuilder_1 = __webpack_require__(16);\n\tvar node_1 = __webpack_require__(21);\n\tvar pathFactory_1 = __webpack_require__(20);\n\tvar targetState_1 = __webpack_require__(14);\n\tvar param_1 = __webpack_require__(22);\n\tvar resolvable_1 = __webpack_require__(19);\n\tvar rejectFactory_1 = __webpack_require__(10);\n\tvar resolveContext_1 = __webpack_require__(17);\n\tvar router_1 = __webpack_require__(25);\n\tvar transitionCount = 0;\n\tvar stateSelf = hof_1.prop(\"self\");\n\t/**\n\t * Represents a transition between two states.\n\t *\n\t * When navigating to a state, we are transitioning **from** the current state **to** the new state.\n\t *\n\t * This object contains all contextual information about the to/from states, parameters, resolves.\n\t * It has information about all states being entered and exited as a result of the transition.\n\t */\n\tvar Transition = (function () {\n\t    /**\n\t     * Creates a new Transition object.\n\t     *\n\t     * If the target state is not valid, an error is thrown.\n\t     *\n\t     * @param fromPath The path of [[PathNode]]s from which the transition is leaving.  The last node in the `fromPath`\n\t     *        encapsulates the \"from state\".\n\t     * @param targetState The target state and parameters being transitioned to (also, the transition options)\n\t     * @param router The [[UIRouter]] instance\n\t     */\n\t    function Transition(fromPath, targetState, router) {\n\t        var _this = this;\n\t        /** @hidden */\n\t        this._deferred = coreservices_1.services.$q.defer();\n\t        /**\n\t         * This promise is resolved or rejected based on the outcome of the Transition.\n\t         *\n\t         * When the transition is successful, the promise is resolved\n\t         * When the transition is unsuccessful, the promise is rejected with the [[TransitionRejection]] or javascript error\n\t         */\n\t        this.promise = this._deferred.promise;\n\t        this.treeChanges = function () { return _this._treeChanges; };\n\t        this.isActive = function () { return _this === _this._options.current(); };\n\t        this.router = router;\n\t        this._targetState = targetState;\n\t        if (!targetState.valid()) {\n\t            throw new Error(targetState.error());\n\t        }\n\t        // Makes the Transition instance a hook registry (onStart, etc)\n\t        hookRegistry_1.HookRegistry.mixin(new hookRegistry_1.HookRegistry(), this);\n\t        // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n\t        this._options = common_1.extend({ current: hof_1.val(this) }, targetState.options());\n\t        this.$id = transitionCount++;\n\t        var toPath = pathFactory_1.PathFactory.buildToPath(fromPath, targetState);\n\t        this._treeChanges = pathFactory_1.PathFactory.treeChanges(fromPath, toPath, this._options.reloadState);\n\t        var enteringStates = this._treeChanges.entering.map(function (node) { return node.state; });\n\t        pathFactory_1.PathFactory.applyViewConfigs(router.transitionService.$view, this._treeChanges.to, enteringStates);\n\t        var rootResolvables = [\n\t            new resolvable_1.Resolvable(router_1.UIRouter, function () { return router; }, [], undefined, router),\n\t            new resolvable_1.Resolvable(Transition, function () { return _this; }, [], undefined, this),\n\t            new resolvable_1.Resolvable('$transition$', function () { return _this; }, [], undefined, this),\n\t            new resolvable_1.Resolvable('$stateParams', function () { return _this.params(); }, [], undefined, this.params())\n\t        ];\n\t        var rootNode = this._treeChanges.to[0];\n\t        var context = new resolveContext_1.ResolveContext(this._treeChanges.to);\n\t        context.addResolvables(rootResolvables, rootNode.state);\n\t    }\n\t    /** @inheritdoc */\n\t    Transition.prototype.onBefore = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    /** @inheritdoc */\n\t    Transition.prototype.onStart = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    /** @inheritdoc */\n\t    Transition.prototype.onExit = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    /** @inheritdoc */\n\t    Transition.prototype.onRetain = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    /** @inheritdoc */\n\t    Transition.prototype.onEnter = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    /** @inheritdoc */\n\t    Transition.prototype.onFinish = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    /** @inheritdoc */\n\t    Transition.prototype.onSuccess = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    /** @inheritdoc */\n\t    Transition.prototype.onError = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    Transition.prototype.$from = function () {\n\t        return common_1.tail(this._treeChanges.from).state;\n\t    };\n\t    Transition.prototype.$to = function () {\n\t        return common_1.tail(this._treeChanges.to).state;\n\t    };\n\t    /**\n\t     * Returns the \"from state\"\n\t     *\n\t     * @returns The state object for the Transition's \"from state\".\n\t     */\n\t    Transition.prototype.from = function () {\n\t        return this.$from().self;\n\t    };\n\t    /**\n\t     * Returns the \"to state\"\n\t     *\n\t     * @returns The state object for the Transition's target state (\"to state\").\n\t     */\n\t    Transition.prototype.to = function () {\n\t        return this.$to().self;\n\t    };\n\t    /**\n\t     * Gets the Target State\n\t     *\n\t     * A transition's [[TargetState]] encapsulates the [[to]] state, the [[params]], and the [[options]].\n\t     *\n\t     * @returns the [[TargetState]] of this Transition\n\t     */\n\t    Transition.prototype.targetState = function () {\n\t        return this._targetState;\n\t    };\n\t    /**\n\t     * Determines whether two transitions are equivalent.\n\t     */\n\t    Transition.prototype.is = function (compare) {\n\t        if (compare instanceof Transition) {\n\t            // TODO: Also compare parameters\n\t            return this.is({ to: compare.$to().name, from: compare.$from().name });\n\t        }\n\t        return !((compare.to && !hookRegistry_1.matchState(this.$to(), compare.to)) ||\n\t            (compare.from && !hookRegistry_1.matchState(this.$from(), compare.from)));\n\t    };\n\t    /**\n\t     * Gets transition parameter values\n\t     *\n\t     * @param pathname Pick which treeChanges path to get parameters for:\n\t     *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n\t     * @returns transition parameter values for the desired path.\n\t     */\n\t    Transition.prototype.params = function (pathname) {\n\t        if (pathname === void 0) { pathname = \"to\"; }\n\t        return this._treeChanges[pathname].map(hof_1.prop(\"paramValues\")).reduce(common_1.mergeR, {});\n\t    };\n\t    /**\n\t     * Creates a [[UIInjector]] Dependency Injector\n\t     *\n\t     * Returns a Dependency Injector for the Transition's target state (to state).\n\t     * The injector provides resolve values which the target state has access to.\n\t     *\n\t     * The `UIInjector` can also provide values from the native root/global injector (ng1/ng2).\n\t     *\n\t     * If a `state` is provided, the injector that is returned will be limited to resolve values that the provided state has access to.\n\t     *\n\t     * @param state Limits the resolves provided to only the resolves the provided state has access to.\n\t     * @returns a [[UIInjector]]\n\t     */\n\t    Transition.prototype.injector = function (state) {\n\t        var path = this.treeChanges().to;\n\t        if (state)\n\t            path = pathFactory_1.PathFactory.subPath(path, function (node) { return node.state === state || node.state.name === state; });\n\t        return new resolveContext_1.ResolveContext(path).injector();\n\t    };\n\t    /**\n\t     * Gets all available resolve tokens (keys)\n\t     *\n\t     * This method can be used in conjunction with [[getResolve]] to inspect the resolve values\n\t     * available to the Transition.\n\t     *\n\t     * The returned tokens include those defined on [[StateDeclaration.resolve]] blocks, for the states\n\t     * in the Transition's [[TreeChanges.to]] path.\n\t     *\n\t     * @returns an array of resolve tokens (keys)\n\t     */\n\t    Transition.prototype.getResolveTokens = function () {\n\t        return new resolveContext_1.ResolveContext(this._treeChanges.to).getTokens();\n\t    };\n\t    /**\n\t     * Gets resolved values\n\t     *\n\t     * This method can be used in conjunction with [[getResolveTokens]] to inspect what resolve values\n\t     * are available to the Transition.\n\t     *\n\t     * Given a token, returns the resolved data for that token.\n\t     * Given an array of tokens, returns an array of resolved data for those tokens.\n\t     *\n\t     * If a resolvable hasn't yet been fetched, returns `undefined` for that token\n\t     * If a resolvable doesn't exist for the token, throws an error.\n\t     *\n\t     * @param token the token (or array of tokens)\n\t     *\n\t     * @returns an array of resolve tokens (keys)\n\t     */\n\t    Transition.prototype.getResolveValue = function (token) {\n\t        var resolveContext = new resolveContext_1.ResolveContext(this._treeChanges.to);\n\t        var getData = function (token) {\n\t            var resolvable = resolveContext.getResolvable(token);\n\t            if (resolvable === undefined) {\n\t                throw new Error(\"Dependency Injection token not found: \" + strings_1.stringify(token));\n\t            }\n\t            return resolvable.data;\n\t        };\n\t        if (predicates_1.isArray(token)) {\n\t            return token.map(getData);\n\t        }\n\t        return getData(token);\n\t    };\n\t    /**\n\t     * Gets a [[Resolvable]] primitive\n\t     *\n\t     * This is a lower level API that returns a [[Resolvable]] from the Transition for a given token.\n\t     *\n\t     * @param token the DI token\n\t     *\n\t     * @returns the [[Resolvable]] in the transition's to path, or undefined\n\t     */\n\t    Transition.prototype.getResolvable = function (token) {\n\t        return new resolveContext_1.ResolveContext(this._treeChanges.to).getResolvable(token);\n\t    };\n\t    /**\n\t     * Dynamically adds a new [[Resolvable]] (`resolve`) to this transition.\n\t     *\n\t     * @param resolvable an [[Resolvable]] object\n\t     * @param state the state in the \"to path\" which should receive the new resolve (otherwise, the root state)\n\t     */\n\t    Transition.prototype.addResolvable = function (resolvable, state) {\n\t        if (state === void 0) { state = \"\"; }\n\t        var stateName = (typeof state === \"string\") ? state : state.name;\n\t        var topath = this._treeChanges.to;\n\t        var targetNode = common_1.find(topath, function (node) { return node.state.name === stateName; });\n\t        var resolveContext = new resolveContext_1.ResolveContext(topath);\n\t        resolveContext.addResolvables([resolvable], targetNode.state);\n\t    };\n\t    /**\n\t     * If the current transition is a redirect, returns the transition that was redirected.\n\t     *\n\t     * Gets the transition from which this transition was redirected.\n\t     *\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * let transitionA = $state.go('A').transitionA\n\t     * transitionA.onStart({}, () => $state.target('B'));\n\t     * $transitions.onSuccess({ to: 'B' }, (trans) => {\n\t     *   trans.to().name === 'B'; // true\n\t     *   trans.redirectedFrom() === transitionA; // true\n\t     * });\n\t     * ```\n\t     *\n\t     * @returns The previous Transition, or null if this Transition is not the result of a redirection\n\t     */\n\t    Transition.prototype.redirectedFrom = function () {\n\t        return this._options.redirectedFrom || null;\n\t    };\n\t    /**\n\t     * Get the transition options\n\t     *\n\t     * @returns the options for this Transition.\n\t     */\n\t    Transition.prototype.options = function () {\n\t        return this._options;\n\t    };\n\t    /**\n\t     * Gets the states being entered.\n\t     *\n\t     * @returns an array of states that will be entered during this transition.\n\t     */\n\t    Transition.prototype.entering = function () {\n\t        return common_1.map(this._treeChanges.entering, hof_1.prop('state')).map(stateSelf);\n\t    };\n\t    /**\n\t     * Gets the states being exited.\n\t     *\n\t     * @returns an array of states that will be exited during this transition.\n\t     */\n\t    Transition.prototype.exiting = function () {\n\t        return common_1.map(this._treeChanges.exiting, hof_1.prop('state')).map(stateSelf).reverse();\n\t    };\n\t    /**\n\t     * Gets the states being retained.\n\t     *\n\t     * @returns an array of states that are already entered from a previous Transition, that will not be\n\t     *    exited during this Transition\n\t     */\n\t    Transition.prototype.retained = function () {\n\t        return common_1.map(this._treeChanges.retained, hof_1.prop('state')).map(stateSelf);\n\t    };\n\t    /**\n\t     * Get the [[ViewConfig]]s associated with this Transition\n\t     *\n\t     * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n\t     * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n\t     *\n\t     * @param pathname the name of the path to fetch views for:\n\t     *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n\t     * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n\t     *\n\t     * @returns a list of ViewConfig objects for the given path.\n\t     */\n\t    Transition.prototype.views = function (pathname, state) {\n\t        if (pathname === void 0) { pathname = \"entering\"; }\n\t        var path = this._treeChanges[pathname];\n\t        path = !state ? path : path.filter(hof_1.propEq('state', state));\n\t        return path.map(hof_1.prop(\"views\")).filter(common_1.identity).reduce(common_1.unnestR, []);\n\t    };\n\t    /**\n\t     * Creates a new transition that is a redirection of the current one.\n\t     *\n\t     * This transition can be returned from a [[TransitionService]] hook to\n\t     * redirect a transition to a new state and/or set of parameters.\n\t     *\n\t     * @returns Returns a new [[Transition]] instance.\n\t     */\n\t    Transition.prototype.redirect = function (targetState) {\n\t        var newOptions = common_1.extend({}, this.options(), targetState.options(), { redirectedFrom: this, source: \"redirect\" });\n\t        targetState = new targetState_1.TargetState(targetState.identifier(), targetState.$state(), targetState.params(), newOptions);\n\t        var newTransition = this.router.transitionService.create(this._treeChanges.from, targetState);\n\t        var originalEnteringNodes = this.treeChanges().entering;\n\t        var redirectEnteringNodes = newTransition.treeChanges().entering;\n\t        // --- Re-use resolve data from original transition ---\n\t        // When redirecting from a parent state to a child state where the parent parameter values haven't changed\n\t        // (because of the redirect), the resolves fetched by the original transition are still valid in the\n\t        // redirected transition.\n\t        //\n\t        // This allows you to define a redirect on a parent state which depends on an async resolve value.\n\t        // You can wait for the resolve, then redirect to a child state based on the result.\n\t        // The redirected transition does not have to re-fetch the resolve.\n\t        // ---------------------------------------------------------\n\t        var nodeIsReloading = function (reloadState) { return function (node) {\n\t            return reloadState && node.state.includes[reloadState.name];\n\t        }; };\n\t        // Find any \"entering\" nodes in the redirect path that match the original path and aren't being reloaded\n\t        var matchingEnteringNodes = node_1.PathNode.matching(redirectEnteringNodes, originalEnteringNodes)\n\t            .filter(hof_1.not(nodeIsReloading(targetState.options().reloadState)));\n\t        // Use the existing (possibly pre-resolved) resolvables for the matching entering nodes.\n\t        matchingEnteringNodes.forEach(function (node, idx) {\n\t            node.resolvables = originalEnteringNodes[idx].resolvables;\n\t        });\n\t        return newTransition;\n\t    };\n\t    /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n\t    Transition.prototype._changedParams = function () {\n\t        var _a = this._treeChanges, to = _a.to, from = _a.from;\n\t        if (this._options.reload || common_1.tail(to).state !== common_1.tail(from).state)\n\t            return undefined;\n\t        var nodeSchemas = to.map(function (node) { return node.paramSchema; });\n\t        var _b = [to, from].map(function (path) { return path.map(function (x) { return x.paramValues; }); }), toValues = _b[0], fromValues = _b[1];\n\t        var tuples = common_1.arrayTuples(nodeSchemas, toValues, fromValues);\n\t        return tuples.map(function (_a) {\n\t            var schema = _a[0], toVals = _a[1], fromVals = _a[2];\n\t            return param_1.Param.changed(schema, toVals, fromVals);\n\t        }).reduce(common_1.unnestR, []);\n\t    };\n\t    /**\n\t     * Returns true if the transition is dynamic.\n\t     *\n\t     * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n\t     *\n\t     * @returns true if the Transition is dynamic\n\t     */\n\t    Transition.prototype.dynamic = function () {\n\t        var changes = this._changedParams();\n\t        return !changes ? false : changes.map(function (x) { return x.dynamic; }).reduce(common_1.anyTrueR, false);\n\t    };\n\t    /**\n\t     * Returns true if the transition is ignored.\n\t     *\n\t     * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n\t     *\n\t     * @returns true if the Transition is ignored.\n\t     */\n\t    Transition.prototype.ignored = function () {\n\t        var changes = this._changedParams();\n\t        return !changes ? false : changes.length === 0;\n\t    };\n\t    /**\n\t     * @hidden\n\t     */\n\t    Transition.prototype.hookBuilder = function () {\n\t        return new hookBuilder_1.HookBuilder(this.router.transitionService, this, {\n\t            transition: this,\n\t            current: this._options.current\n\t        });\n\t    };\n\t    /**\n\t     * Runs the transition\n\t     *\n\t     * This method is generally called from the [[StateService.transitionTo]]\n\t     *\n\t     * @returns a promise for a successful transition.\n\t     */\n\t    Transition.prototype.run = function () {\n\t        var _this = this;\n\t        var runSynchronousHooks = transitionHook_1.TransitionHook.runSynchronousHooks;\n\t        var runAllHooks = transitionHook_1.TransitionHook.runAllHooks;\n\t        var hookBuilder = this.hookBuilder();\n\t        var globals = this.router.globals;\n\t        globals.transitionHistory.enqueue(this);\n\t        var syncResult = runSynchronousHooks(hookBuilder.getOnBeforeHooks());\n\t        if (rejectFactory_1.Rejection.isTransitionRejectionPromise(syncResult)) {\n\t            syncResult.catch(function () { return 0; }); // issue #2676\n\t            var rejectReason = syncResult._transitionRejection;\n\t            this._deferred.reject(rejectReason);\n\t            return this.promise;\n\t        }\n\t        if (!this.valid()) {\n\t            var error = new Error(this.error());\n\t            this._deferred.reject(error);\n\t            return this.promise;\n\t        }\n\t        if (this.ignored()) {\n\t            trace_1.trace.traceTransitionIgnored(this);\n\t            this._deferred.reject(rejectFactory_1.Rejection.ignored());\n\t            return this.promise;\n\t        }\n\t        // When the chain is complete, then resolve or reject the deferred\n\t        var transitionSuccess = function () {\n\t            trace_1.trace.traceSuccess(_this.$to(), _this);\n\t            _this.success = true;\n\t            _this._deferred.resolve(_this.to());\n\t            runAllHooks(hookBuilder.getOnSuccessHooks());\n\t        };\n\t        var transitionError = function (reason) {\n\t            trace_1.trace.traceError(reason, _this);\n\t            _this.success = false;\n\t            _this._deferred.reject(reason);\n\t            _this._error = reason;\n\t            runAllHooks(hookBuilder.getOnErrorHooks());\n\t        };\n\t        trace_1.trace.traceTransitionStart(this);\n\t        // Chain the next hook off the previous\n\t        var appendHookToChain = function (prev, nextHook) {\n\t            return prev.then(function () { return nextHook.invokeHook(); });\n\t        };\n\t        // Run the hooks, then resolve or reject the overall deferred in the .then() handler\n\t        hookBuilder.asyncHooks()\n\t            .reduce(appendHookToChain, syncResult)\n\t            .then(transitionSuccess, transitionError);\n\t        return this.promise;\n\t    };\n\t    /**\n\t     * Checks if the Transition is valid\n\t     *\n\t     * @returns true if the Transition is valid\n\t     */\n\t    Transition.prototype.valid = function () {\n\t        return !this.error() || this.success !== undefined;\n\t    };\n\t    /**\n\t     * The Transition error reason.\n\t     *\n\t     * If the transition is invalid (and could not be run), returns the reason the transition is invalid.\n\t     * If the transition was valid and ran, but was not successful, returns the reason the transition failed.\n\t     *\n\t     * @returns an error message explaining why the transition is invalid, or the reason the transition failed.\n\t     */\n\t    Transition.prototype.error = function () {\n\t        var state = this.$to();\n\t        var redirects = 0, trans = this;\n\t        while ((trans = trans.redirectedFrom()) != null) {\n\t            if (++redirects > 20)\n\t                return \"Too many Transition redirects (20+)\";\n\t        }\n\t        if (state.self.abstract)\n\t            return \"Cannot transition to abstract state '\" + state.name + \"'\";\n\t        if (!param_1.Param.validates(state.parameters(), this.params()))\n\t            return \"Param values not valid for state '\" + state.name + \"'\";\n\t        if (this.success === false)\n\t            return this._error;\n\t    };\n\t    /**\n\t     * A string representation of the Transition\n\t     *\n\t     * @returns A string representation of the Transition\n\t     */\n\t    Transition.prototype.toString = function () {\n\t        var fromStateOrName = this.from();\n\t        var toStateOrName = this.to();\n\t        var avoidEmptyHash = function (params) {\n\t            return (params[\"#\"] !== null && params[\"#\"] !== undefined) ? params : common_1.omit(params, \"#\");\n\t        };\n\t        // (X) means the to state is invalid.\n\t        var id = this.$id, from = predicates_1.isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName, fromParams = common_1.toJson(avoidEmptyHash(this._treeChanges.from.map(hof_1.prop('paramValues')).reduce(common_1.mergeR, {}))), toValid = this.valid() ? \"\" : \"(X) \", to = predicates_1.isObject(toStateOrName) ? toStateOrName.name : toStateOrName, toParams = common_1.toJson(avoidEmptyHash(this.params()));\n\t        return \"Transition#\" + id + \"( '\" + from + \"'\" + fromParams + \" -> \" + toValid + \"'\" + to + \"'\" + toParams + \" )\";\n\t    };\n\t    Transition.diToken = Transition;\n\t    return Transition;\n\t}());\n\texports.Transition = Transition;\n\t//# sourceMappingURL=transition.js.map\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/**\n\t * UI-Router Transition Tracing\n\t *\n\t * Enable transition tracing to print transition information to the console,\n\t * in order to help debug your application.\n\t * Tracing logs detailed information about each Transition to your console.\n\t *\n\t * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n\t *\n\t * ### ES6\n\t * ```js\n\t * import {trace} from \"ui-router-ng2\"; // or \"angular-ui-router\"\n\t * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n\t * ```\n\t *\n\t * ### CJS\n\t * ```js\n\t * let trace = require(\"angular-ui-router\").trace; // or \"ui-router-ng2\"\n\t * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n\t * ```\n\t *\n\t * ### Globals\n\t * ```js\n\t * let trace = window[\"angular-ui-router\"].trace; // or \"ui-router-ng2\"\n\t * trace.enable(); // Trace everything (very verbose)\n\t * ```\n\t *\n\t * ### Angular 1:\n\t * ```js\n\t * app.run($trace => $trace.enable());\n\t * ```\n\t *\n\t * @module trace\n\t */ /** for typedoc */\n\tvar hof_1 = __webpack_require__(5);\n\tvar predicates_1 = __webpack_require__(4);\n\tvar strings_1 = __webpack_require__(9);\n\t/** @hidden */\n\tfunction uiViewString(viewData) {\n\t    if (!viewData)\n\t        return 'ui-view (defunct)';\n\t    return (\"[ui-view#\" + viewData.id + \" tag \") +\n\t        (\"in template from '\" + (viewData.creationContext && viewData.creationContext.name || '(root)') + \"' state]: \") +\n\t        (\"fqn: '\" + viewData.fqn + \"', \") +\n\t        (\"name: '\" + viewData.name + \"@\" + viewData.creationContext + \"')\");\n\t}\n\t/** @hidden */\n\tvar viewConfigString = function (viewConfig) {\n\t    return (\"[ViewConfig#\" + viewConfig.$id + \" from '\" + (viewConfig.viewDecl.$context.name || '(root)') + \"' state]: target ui-view: '\" + viewConfig.viewDecl.$uiViewName + \"@\" + viewConfig.viewDecl.$uiViewContextAnchor + \"'\");\n\t};\n\t/** @hidden */\n\tfunction normalizedCat(input) {\n\t    return predicates_1.isNumber(input) ? Category[input] : Category[Category[input]];\n\t}\n\t/**\n\t * Trace categories Enum\n\t *\n\t * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n\t *\n\t * `trace.enable(Category.TRANSITION)`\n\t *\n\t * These can also be provided using a matching string, or position ordinal\n\t *\n\t * `trace.enable(\"TRANSITION\")`\n\t *\n\t * `trace.enable(1)`\n\t */\n\t(function (Category) {\n\t    Category[Category[\"RESOLVE\"] = 0] = \"RESOLVE\";\n\t    Category[Category[\"TRANSITION\"] = 1] = \"TRANSITION\";\n\t    Category[Category[\"HOOK\"] = 2] = \"HOOK\";\n\t    Category[Category[\"UIVIEW\"] = 3] = \"UIVIEW\";\n\t    Category[Category[\"VIEWCONFIG\"] = 4] = \"VIEWCONFIG\";\n\t})(exports.Category || (exports.Category = {}));\n\tvar Category = exports.Category;\n\t/**\n\t * Prints UI-Router Transition trace information to the console.\n\t */\n\tvar Trace = (function () {\n\t    /** @hidden */\n\t    function Trace() {\n\t        /** @hidden */\n\t        this._enabled = {};\n\t        this.approximateDigests = 0;\n\t    }\n\t    /** @hidden */\n\t    Trace.prototype._set = function (enabled, categories) {\n\t        var _this = this;\n\t        if (!categories.length) {\n\t            categories = Object.keys(Category)\n\t                .map(function (k) { return parseInt(k, 10); })\n\t                .filter(function (k) { return !isNaN(k); })\n\t                .map(function (key) { return Category[key]; });\n\t        }\n\t        categories.map(normalizedCat).forEach(function (category) { return _this._enabled[category] = enabled; });\n\t    };\n\t    /**\n\t     * Enables a trace [[Category]]\n\t     *\n\t     * ```js\n\t     * trace.enable(\"TRANSITION\");\n\t     * ```\n\t     *\n\t     * @param categories categories to enable. If `categories` is omitted, all categories are enabled.\n\t     *        Also takes strings (category name) or ordinal (category position)\n\t     */\n\t    Trace.prototype.enable = function () {\n\t        var categories = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            categories[_i - 0] = arguments[_i];\n\t        }\n\t        this._set(true, categories);\n\t    };\n\t    /**\n\t     * Disables a trace [[Category]]\n\t     *\n\t     * ```js\n\t     * trace.disable(\"VIEWCONFIG\");\n\t     * ```\n\t     *\n\t     * @param categories categories to disable. If `categories` is omitted, all categories are disabled.\n\t     *        Also takes strings (category name) or ordinal (category position)\n\t     */\n\t    Trace.prototype.disable = function () {\n\t        var categories = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            categories[_i - 0] = arguments[_i];\n\t        }\n\t        this._set(false, categories);\n\t    };\n\t    /**\n\t     * Retrieves the enabled stateus of a [[Category]]\n\t     *\n\t     * ```js\n\t     * trace.enabled(\"VIEWCONFIG\"); // true or false\n\t     * ```\n\t     *\n\t     * @returns boolean true if the category is enabled\n\t     */\n\t    Trace.prototype.enabled = function (category) {\n\t        return !!this._enabled[normalizedCat(category)];\n\t    };\n\t    /** @internalapi called by ui-router code */\n\t    Trace.prototype.traceTransitionStart = function (transition) {\n\t        if (!this.enabled(Category.TRANSITION))\n\t            return;\n\t        var tid = transition.$id, digest = this.approximateDigests, transitionStr = strings_1.stringify(transition);\n\t        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \": Started  -> \" + transitionStr);\n\t    };\n\t    /** @internalapi called by ui-router code */\n\t    Trace.prototype.traceTransitionIgnored = function (trans) {\n\t        if (!this.enabled(Category.TRANSITION))\n\t            return;\n\t        var tid = trans && trans.$id, digest = this.approximateDigests, transitionStr = strings_1.stringify(trans);\n\t        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \": Ignored  <> \" + transitionStr);\n\t    };\n\t    /** @internalapi called by ui-router code */\n\t    Trace.prototype.traceHookInvocation = function (step, options) {\n\t        if (!this.enabled(Category.HOOK))\n\t            return;\n\t        var tid = hof_1.parse(\"transition.$id\")(options), digest = this.approximateDigests, event = hof_1.parse(\"traceData.hookType\")(options) || \"internal\", context = hof_1.parse(\"traceData.context.state.name\")(options) || hof_1.parse(\"traceData.context\")(options) || \"unknown\", name = strings_1.functionToString(step.eventHook.callback);\n\t        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \":   Hook -> \" + event + \" context: \" + context + \", \" + strings_1.maxLength(200, name));\n\t    };\n\t    /** @internalapi called by ui-router code */\n\t    Trace.prototype.traceHookResult = function (hookResult, transitionOptions) {\n\t        if (!this.enabled(Category.HOOK))\n\t            return;\n\t        var tid = hof_1.parse(\"transition.$id\")(transitionOptions), digest = this.approximateDigests, hookResultStr = strings_1.stringify(hookResult);\n\t        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \":   <- Hook returned: \" + strings_1.maxLength(200, hookResultStr));\n\t    };\n\t    /** @internalapi called by ui-router code */\n\t    Trace.prototype.traceResolvePath = function (path, when, trans) {\n\t        if (!this.enabled(Category.RESOLVE))\n\t            return;\n\t        var tid = trans && trans.$id, digest = this.approximateDigests, pathStr = path && path.toString();\n\t        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \":         Resolving \" + pathStr + \" (\" + when + \")\");\n\t    };\n\t    /** @internalapi called by ui-router code */\n\t    Trace.prototype.traceResolvableResolved = function (resolvable, trans) {\n\t        if (!this.enabled(Category.RESOLVE))\n\t            return;\n\t        var tid = trans && trans.$id, digest = this.approximateDigests, resolvableStr = resolvable && resolvable.toString(), result = strings_1.stringify(resolvable.data);\n\t        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \":               <- Resolved  \" + resolvableStr + \" to: \" + strings_1.maxLength(200, result));\n\t    };\n\t    /** @internalapi called by ui-router code */\n\t    Trace.prototype.traceError = function (reason, trans) {\n\t        if (!this.enabled(Category.TRANSITION))\n\t            return;\n\t        var tid = trans && trans.$id, digest = this.approximateDigests, transitionStr = strings_1.stringify(trans);\n\t        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \": <- Rejected \" + transitionStr + \", reason: \" + reason);\n\t    };\n\t    /** @internalapi called by ui-router code */\n\t    Trace.prototype.traceSuccess = function (finalState, trans) {\n\t        if (!this.enabled(Category.TRANSITION))\n\t            return;\n\t        var tid = trans && trans.$id, digest = this.approximateDigests, state = finalState.name, transitionStr = strings_1.stringify(trans);\n\t        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \": <- Success  \" + transitionStr + \", final state: \" + state);\n\t    };\n\t    /** @internalapi called by ui-router code */\n\t    Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {\n\t        if (extra === void 0) { extra = \"\"; }\n\t        if (!this.enabled(Category.UIVIEW))\n\t            return;\n\t        console.log(\"ui-view: \" + strings_1.padString(30, event) + \" \" + uiViewString(viewData) + extra);\n\t    };\n\t    /** @internalapi called by ui-router code */\n\t    Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {\n\t        if (!this.enabled(Category.UIVIEW))\n\t            return;\n\t        this.traceUIViewEvent(\"Updating\", viewData, \" with ViewConfig from context='\" + context + \"'\");\n\t    };\n\t    /** @internalapi called by ui-router code */\n\t    Trace.prototype.traceUIViewFill = function (viewData, html) {\n\t        if (!this.enabled(Category.UIVIEW))\n\t            return;\n\t        this.traceUIViewEvent(\"Fill\", viewData, \" with: \" + strings_1.maxLength(200, html));\n\t    };\n\t    /** @internalapi called by ui-router code */\n\t    Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {\n\t        if (!this.enabled(Category.VIEWCONFIG))\n\t            return;\n\t        console.log(\"VIEWCONFIG: \" + event + \" \" + viewConfigString(viewConfig));\n\t    };\n\t    /** @internalapi called by ui-router code */\n\t    Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {\n\t        if (!this.enabled(Category.VIEWCONFIG))\n\t            return;\n\t        console.log(\"VIEWCONFIG: \" + event + \" \" + uiViewString(viewData));\n\t    };\n\t    return Trace;\n\t}());\n\texports.Trace = Trace;\n\t/**\n\t * The [[Trace]] singleton\n\t *\n\t * #### Example:\n\t * ```js\n\t * import {trace} from \"angular-ui-router\";\n\t * trace.enable(1, 5);\n\t * ```\n\t */\n\tvar trace = new Trace();\n\texports.trace = trace;\n\t//# sourceMappingURL=trace.js.map\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar common_1 = __webpack_require__(3);\n\tvar strings_1 = __webpack_require__(9);\n\tvar predicates_1 = __webpack_require__(4);\n\tvar hof_1 = __webpack_require__(5);\n\tvar trace_1 = __webpack_require__(12);\n\tvar coreservices_1 = __webpack_require__(6);\n\tvar rejectFactory_1 = __webpack_require__(10);\n\tvar targetState_1 = __webpack_require__(14);\n\tvar defaultOptions = {\n\t    async: true,\n\t    rejectIfSuperseded: true,\n\t    current: common_1.noop,\n\t    transition: null,\n\t    traceData: {},\n\t    bind: null\n\t};\n\t/** @hidden */\n\tvar TransitionHook = (function () {\n\t    function TransitionHook(transition, stateContext, eventHook, options) {\n\t        var _this = this;\n\t        this.transition = transition;\n\t        this.stateContext = stateContext;\n\t        this.eventHook = eventHook;\n\t        this.options = options;\n\t        this.isSuperseded = function () {\n\t            return _this.options.current() !== _this.options.transition;\n\t        };\n\t        this.options = common_1.defaults(options, defaultOptions);\n\t    }\n\t    TransitionHook.prototype.invokeHook = function () {\n\t        var _a = this, options = _a.options, eventHook = _a.eventHook;\n\t        trace_1.trace.traceHookInvocation(this, options);\n\t        if (options.rejectIfSuperseded && this.isSuperseded()) {\n\t            return rejectFactory_1.Rejection.superseded(options.current()).toPromise();\n\t        }\n\t        var synchronousHookResult = !eventHook._deregistered\n\t            ? eventHook.callback.call(options.bind, this.transition, this.stateContext)\n\t            : undefined;\n\t        return this.handleHookResult(synchronousHookResult);\n\t    };\n\t    /**\n\t     * This method handles the return value of a Transition Hook.\n\t     *\n\t     * A hook can return false (cancel), a TargetState (redirect),\n\t     * or a promise (which may later resolve to false or a redirect)\n\t     *\n\t     * This also handles \"transition superseded\" -- when a new transition\n\t     * was started while the hook was still running\n\t     */\n\t    TransitionHook.prototype.handleHookResult = function (result) {\n\t        // This transition is no longer current.\n\t        // Another transition started while this hook was still running.\n\t        if (this.isSuperseded()) {\n\t            // Abort this transition\n\t            return rejectFactory_1.Rejection.superseded(this.options.current()).toPromise();\n\t        }\n\t        // Hook returned a promise\n\t        if (predicates_1.isPromise(result)) {\n\t            // Wait for the promise, then reprocess the resolved value\n\t            return result.then(this.handleHookResult.bind(this));\n\t        }\n\t        trace_1.trace.traceHookResult(result, this.options);\n\t        // Hook returned false\n\t        if (result === false) {\n\t            // Abort this Transition\n\t            return rejectFactory_1.Rejection.aborted(\"Hook aborted transition\").toPromise();\n\t        }\n\t        var isTargetState = hof_1.is(targetState_1.TargetState);\n\t        // hook returned a TargetState\n\t        if (isTargetState(result)) {\n\t            // Halt the current Transition and start a redirected Transition (to the TargetState).\n\t            return rejectFactory_1.Rejection.redirected(result).toPromise();\n\t        }\n\t    };\n\t    TransitionHook.prototype.toString = function () {\n\t        var _a = this, options = _a.options, eventHook = _a.eventHook;\n\t        var event = hof_1.parse(\"traceData.hookType\")(options) || \"internal\", context = hof_1.parse(\"traceData.context.state.name\")(options) || hof_1.parse(\"traceData.context\")(options) || \"unknown\", name = strings_1.fnToString(eventHook.callback);\n\t        return event + \" context: \" + context + \", \" + strings_1.maxLength(200, name);\n\t    };\n\t    /**\n\t     * Run all TransitionHooks, ignoring their return value.\n\t     */\n\t    TransitionHook.runAllHooks = function (hooks) {\n\t        hooks.forEach(function (hook) {\n\t            try {\n\t                hook.invokeHook();\n\t            }\n\t            catch (exception) {\n\t                var errorHandler = hook.transition.router.stateService.defaultErrorHandler();\n\t                errorHandler(exception);\n\t            }\n\t        });\n\t    };\n\t    /**\n\t     * Given an array of TransitionHooks, runs each one synchronously and sequentially.\n\t     * Should any hook return a Rejection synchronously, the remaining hooks will not run.\n\t     *\n\t     * Returns a promise chain composed of any promises returned from each hook.invokeStep() call\n\t     */\n\t    TransitionHook.runSynchronousHooks = function (hooks) {\n\t        var results = [];\n\t        for (var _i = 0, hooks_1 = hooks; _i < hooks_1.length; _i++) {\n\t            var hook = hooks_1[_i];\n\t            try {\n\t                var hookResult = hook.invokeHook();\n\t                if (rejectFactory_1.Rejection.isTransitionRejectionPromise(hookResult)) {\n\t                    // Break on first thrown error or false/TargetState\n\t                    return hookResult;\n\t                }\n\t                results.push(hookResult);\n\t            }\n\t            catch (exception) {\n\t                return rejectFactory_1.Rejection.errored(exception).toPromise();\n\t            }\n\t        }\n\t        return results\n\t            .filter(predicates_1.isPromise)\n\t            .reduce(function (chain, promise) { return chain.then(hof_1.val(promise)); }, coreservices_1.services.$q.when());\n\t    };\n\t    return TransitionHook;\n\t}());\n\texports.TransitionHook = TransitionHook;\n\t//# sourceMappingURL=transitionHook.js.map\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @module state */ /** for typedoc */\n\t\"use strict\";\n\tvar common_1 = __webpack_require__(3);\n\t/**\n\t * Encapsulate the target (destination) state/params/options of a [[Transition]].\n\t *\n\t * This class is frequently used to redirect a transition to a new destination.\n\t *\n\t * See:\n\t *\n\t * - [[HookResult]]\n\t * - [[TransitionHookFn]]\n\t * - [[TransitionService.onStart]]\n\t *\n\t * To create a `TargetState`, use [[StateService.target]].\n\t *\n\t * ---\n\t *\n\t * This class wraps:\n\t *\n\t * 1) an identifier for a state\n\t * 2) a set of parameters\n\t * 3) and transition options\n\t * 4) the registered state object (the [[StateDeclaration]])\n\t *\n\t * Many UI-Router APIs such as [[StateService.go]] take a [[StateOrName]] argument which can\n\t * either be a *state object* (a [[StateDeclaration]] or [[State]]) or a *state name* (a string).\n\t * The `TargetState` class normalizes those options.\n\t *\n\t * A `TargetState` may be valid (the state being targeted exists in the registry)\n\t * or invalid (the state being targeted is not registered).\n\t */\n\tvar TargetState = (function () {\n\t    /**\n\t     * The TargetState constructor\n\t     *\n\t     * Note: Do not construct a `TargetState` manually.\n\t     * To create a `TargetState`, use the [[StateService.target]] factory method.\n\t     *\n\t     * @param _identifier An identifier for a state.\n\t     *    Either a fully-qualified state name, or the object used to define the state.\n\t     * @param _definition The internal state representation, if exists.\n\t     * @param _params Parameters for the target state\n\t     * @param _options Transition options.\n\t     */\n\t    function TargetState(_identifier, _definition, _params, _options) {\n\t        if (_params === void 0) { _params = {}; }\n\t        if (_options === void 0) { _options = {}; }\n\t        this._identifier = _identifier;\n\t        this._definition = _definition;\n\t        this._options = _options;\n\t        this._params = _params || {};\n\t    }\n\t    TargetState.prototype.name = function () {\n\t        return this._definition && this._definition.name || this._identifier;\n\t    };\n\t    TargetState.prototype.identifier = function () {\n\t        return this._identifier;\n\t    };\n\t    TargetState.prototype.params = function () {\n\t        return this._params;\n\t    };\n\t    TargetState.prototype.$state = function () {\n\t        return this._definition;\n\t    };\n\t    TargetState.prototype.state = function () {\n\t        return this._definition && this._definition.self;\n\t    };\n\t    TargetState.prototype.options = function () {\n\t        return this._options;\n\t    };\n\t    TargetState.prototype.exists = function () {\n\t        return !!(this._definition && this._definition.self);\n\t    };\n\t    TargetState.prototype.valid = function () {\n\t        return !this.error();\n\t    };\n\t    TargetState.prototype.error = function () {\n\t        var base = this.options().relative;\n\t        if (!this._definition && !!base) {\n\t            var stateName = base.name ? base.name : base;\n\t            return \"Could not resolve '\" + this.name() + \"' from state '\" + stateName + \"'\";\n\t        }\n\t        if (!this._definition)\n\t            return \"No such state '\" + this.name() + \"'\";\n\t        if (!this._definition.self)\n\t            return \"State '\" + this.name() + \"' has an invalid definition\";\n\t    };\n\t    TargetState.prototype.toString = function () {\n\t        return \"'\" + this.name() + \"'\" + common_1.toJson(this.params());\n\t    };\n\t    return TargetState;\n\t}());\n\texports.TargetState = TargetState;\n\t//# sourceMappingURL=targetState.js.map\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @internal @module transition */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar predicates_1 = __webpack_require__(4);\n\tvar glob_1 = __webpack_require__(7);\n\t/**\n\t * Determines if the given state matches the matchCriteria\n\t *\n\t * @hidden\n\t *\n\t * @param state a State Object to test against\n\t * @param criterion\n\t * - If a string, matchState uses the string as a glob-matcher against the state name\n\t * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n\t *   and returns a positive match if any of the globs match.\n\t * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n\t * @returns {boolean}\n\t */\n\tfunction matchState(state, criterion) {\n\t    var toMatch = predicates_1.isString(criterion) ? [criterion] : criterion;\n\t    function matchGlobs(_state) {\n\t        var globStrings = toMatch;\n\t        for (var i = 0; i < globStrings.length; i++) {\n\t            var glob = glob_1.Glob.fromString(globStrings[i]);\n\t            if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    }\n\t    var matchFn = (predicates_1.isFunction(toMatch) ? toMatch : matchGlobs);\n\t    return !!matchFn(state);\n\t}\n\texports.matchState = matchState;\n\t/** @hidden */\n\tvar EventHook = (function () {\n\t    function EventHook(matchCriteria, callback, options) {\n\t        if (options === void 0) { options = {}; }\n\t        this.callback = callback;\n\t        this.matchCriteria = common_1.extend({ to: true, from: true, exiting: true, retained: true, entering: true }, matchCriteria);\n\t        this.priority = options.priority || 0;\n\t        this.bind = options.bind || null;\n\t        this._deregistered = false;\n\t    }\n\t    EventHook._matchingNodes = function (nodes, criterion) {\n\t        if (criterion === true)\n\t            return nodes;\n\t        var matching = nodes.filter(function (node) { return matchState(node.state, criterion); });\n\t        return matching.length ? matching : null;\n\t    };\n\t    /**\n\t     * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n\t     *\n\t     * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n\t     * are the matching [[PathNode]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n\t     */\n\t    EventHook.prototype.matches = function (treeChanges) {\n\t        var mc = this.matchCriteria, _matchingNodes = EventHook._matchingNodes;\n\t        var matches = {\n\t            to: _matchingNodes([common_1.tail(treeChanges.to)], mc.to),\n\t            from: _matchingNodes([common_1.tail(treeChanges.from)], mc.from),\n\t            exiting: _matchingNodes(treeChanges.exiting, mc.exiting),\n\t            retained: _matchingNodes(treeChanges.retained, mc.retained),\n\t            entering: _matchingNodes(treeChanges.entering, mc.entering),\n\t        };\n\t        // Check if all the criteria matched the TreeChanges object\n\t        var allMatched = [\"to\", \"from\", \"exiting\", \"retained\", \"entering\"]\n\t            .map(function (prop) { return matches[prop]; })\n\t            .reduce(common_1.allTrueR, true);\n\t        return allMatched ? matches : null;\n\t    };\n\t    return EventHook;\n\t}());\n\texports.EventHook = EventHook;\n\t/** @hidden Return a registration function of the requested type. */\n\tfunction makeHookRegistrationFn(hooks, name) {\n\t    return function (matchObject, callback, options) {\n\t        if (options === void 0) { options = {}; }\n\t        var eventHook = new EventHook(matchObject, callback, options);\n\t        hooks[name].push(eventHook);\n\t        return function deregisterEventHook() {\n\t            eventHook._deregistered = true;\n\t            common_1.removeFrom(hooks[name])(eventHook);\n\t        };\n\t    };\n\t}\n\t/**\n\t * Mixin class acts as a Transition Hook registry.\n\t *\n\t * Holds the registered [[HookFn]] objects.\n\t * Exposes functions to register new hooks.\n\t *\n\t * This is a Mixin class which can be applied to other objects.\n\t *\n\t * The hook registration functions are [[onBefore]], [[onStart]], [[onEnter]], [[onRetain]], [[onExit]], [[onFinish]], [[onSuccess]], [[onError]].\n\t *\n\t * This class is mixed into both the [[TransitionService]] and every [[Transition]] object.\n\t * Global hooks are added to the [[TransitionService]].\n\t * Since each [[Transition]] is itself a `HookRegistry`, hooks can also be added to individual Transitions\n\t * (note: the hook criteria still must match the Transition).\n\t */\n\tvar HookRegistry = (function () {\n\t    function HookRegistry() {\n\t        var _this = this;\n\t        this._transitionEvents = {\n\t            onBefore: [], onStart: [], onEnter: [], onRetain: [], onExit: [], onFinish: [], onSuccess: [], onError: []\n\t        };\n\t        this.getHooks = function (name) { return _this._transitionEvents[name]; };\n\t        /** @inheritdoc */\n\t        this.onBefore = makeHookRegistrationFn(this._transitionEvents, \"onBefore\");\n\t        /** @inheritdoc */\n\t        this.onStart = makeHookRegistrationFn(this._transitionEvents, \"onStart\");\n\t        /** @inheritdoc */\n\t        this.onEnter = makeHookRegistrationFn(this._transitionEvents, \"onEnter\");\n\t        /** @inheritdoc */\n\t        this.onRetain = makeHookRegistrationFn(this._transitionEvents, \"onRetain\");\n\t        /** @inheritdoc */\n\t        this.onExit = makeHookRegistrationFn(this._transitionEvents, \"onExit\");\n\t        /** @inheritdoc */\n\t        this.onFinish = makeHookRegistrationFn(this._transitionEvents, \"onFinish\");\n\t        /** @inheritdoc */\n\t        this.onSuccess = makeHookRegistrationFn(this._transitionEvents, \"onSuccess\");\n\t        /** @inheritdoc */\n\t        this.onError = makeHookRegistrationFn(this._transitionEvents, \"onError\");\n\t    }\n\t    HookRegistry.mixin = function (source, target) {\n\t        Object.keys(source._transitionEvents).concat([\"getHooks\"]).forEach(function (key) { return target[key] = source[key]; });\n\t    };\n\t    return HookRegistry;\n\t}());\n\texports.HookRegistry = HookRegistry;\n\t//# sourceMappingURL=hookRegistry.js.map\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @internal @module transition */ /** for typedoc */\n\t\"use strict\";\n\tvar common_1 = __webpack_require__(3);\n\tvar predicates_1 = __webpack_require__(4);\n\tvar transitionHook_1 = __webpack_require__(13);\n\tvar resolveContext_1 = __webpack_require__(17);\n\t/**\n\t * This class returns applicable TransitionHooks for a specific Transition instance.\n\t *\n\t * Hooks (IEventHook) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n\t * myTransition.onEnter(...).  The HookBuilder finds matching IEventHooks (where the match criteria is\n\t * determined by the type of hook)\n\t *\n\t * The HookBuilder also converts IEventHooks objects to TransitionHook objects, which are used to run a Transition.\n\t *\n\t * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n\t * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n\t * in the Transition class, so we must also provide the Transition's _treeChanges)\n\t *\n\t */\n\tvar HookBuilder = (function () {\n\t    function HookBuilder($transitions, transition, baseHookOptions) {\n\t        var _this = this;\n\t        this.$transitions = $transitions;\n\t        this.transition = transition;\n\t        this.baseHookOptions = baseHookOptions;\n\t        this.getOnBeforeHooks = function () { return _this._buildNodeHooks(\"onBefore\", \"to\", tupleSort(), { async: false }); };\n\t        this.getOnStartHooks = function () { return _this._buildNodeHooks(\"onStart\", \"to\", tupleSort()); };\n\t        this.getOnExitHooks = function () { return _this._buildNodeHooks(\"onExit\", \"exiting\", tupleSort(true), { stateHook: true }); };\n\t        this.getOnRetainHooks = function () { return _this._buildNodeHooks(\"onRetain\", \"retained\", tupleSort(false), { stateHook: true }); };\n\t        this.getOnEnterHooks = function () { return _this._buildNodeHooks(\"onEnter\", \"entering\", tupleSort(false), { stateHook: true }); };\n\t        this.getOnFinishHooks = function () { return _this._buildNodeHooks(\"onFinish\", \"to\", tupleSort()); };\n\t        this.getOnSuccessHooks = function () { return _this._buildNodeHooks(\"onSuccess\", \"to\", tupleSort(), { async: false, rejectIfSuperseded: false }); };\n\t        this.getOnErrorHooks = function () { return _this._buildNodeHooks(\"onError\", \"to\", tupleSort(), { async: false, rejectIfSuperseded: false }); };\n\t        this.treeChanges = transition.treeChanges();\n\t        this.toState = common_1.tail(this.treeChanges.to).state;\n\t        this.fromState = common_1.tail(this.treeChanges.from).state;\n\t        this.transitionOptions = transition.options();\n\t    }\n\t    HookBuilder.prototype.asyncHooks = function () {\n\t        var onStartHooks = this.getOnStartHooks();\n\t        var onExitHooks = this.getOnExitHooks();\n\t        var onRetainHooks = this.getOnRetainHooks();\n\t        var onEnterHooks = this.getOnEnterHooks();\n\t        var onFinishHooks = this.getOnFinishHooks();\n\t        var asyncHooks = [onStartHooks, onExitHooks, onRetainHooks, onEnterHooks, onFinishHooks];\n\t        return asyncHooks.reduce(common_1.unnestR, []).filter(common_1.identity);\n\t    };\n\t    /**\n\t     * Returns an array of newly built TransitionHook objects.\n\t     *\n\t     * - Finds all IEventHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n\t     * - Finds [[PathNode]] (or `PathNode[]`) to use as the TransitionHook context(s)\n\t     * - For each of the [[PathNode]]s, creates a TransitionHook\n\t     *\n\t     * @param hookType the name of the hook registration function, e.g., 'onEnter', 'onFinish'.\n\t     * @param matchingNodesProp selects which [[PathNode]]s from the [[IMatchingNodes]] object to create hooks for.\n\t     * @param getLocals a function which accepts a [[PathNode]] and returns additional locals to provide to the hook as injectables\n\t     * @param sortHooksFn a function which compares two HookTuple and returns <1, 0, or >1\n\t     * @param options any specific Transition Hook Options\n\t     */\n\t    HookBuilder.prototype._buildNodeHooks = function (hookType, matchingNodesProp, sortHooksFn, options) {\n\t        var _this = this;\n\t        // Find all the matching registered hooks for a given hook type\n\t        var matchingHooks = this._matchingHooks(hookType, this.treeChanges);\n\t        if (!matchingHooks)\n\t            return [];\n\t        var makeTransitionHooks = function (hook) {\n\t            // Fetch the Nodes that caused this hook to match.\n\t            var matches = hook.matches(_this.treeChanges);\n\t            // Select the PathNode[] that will be used as TransitionHook context objects\n\t            var matchingNodes = matches[matchingNodesProp];\n\t            // When invoking 'exiting' hooks, give them the \"from path\" for resolve data.\n\t            // Everything else gets the \"to path\"\n\t            var resolvePath = matchingNodesProp === 'exiting' ? _this.treeChanges.from : _this.treeChanges.to;\n\t            var resolveContext = new resolveContext_1.ResolveContext(resolvePath);\n\t            // Return an array of HookTuples\n\t            return matchingNodes.map(function (node) {\n\t                var _options = common_1.extend({ bind: hook.bind, traceData: { hookType: hookType, context: node } }, _this.baseHookOptions, options);\n\t                var state = _options.stateHook ? node.state : null;\n\t                var transitionHook = new transitionHook_1.TransitionHook(_this.transition, state, hook, _options);\n\t                return { hook: hook, node: node, transitionHook: transitionHook };\n\t            });\n\t        };\n\t        return matchingHooks.map(makeTransitionHooks)\n\t            .reduce(common_1.unnestR, [])\n\t            .sort(sortHooksFn)\n\t            .map(function (tuple) { return tuple.transitionHook; });\n\t    };\n\t    /**\n\t     * Finds all IEventHooks from:\n\t     * - The Transition object instance hook registry\n\t     * - The TransitionService ($transitions) global hook registry\n\t     *\n\t     * which matched:\n\t     * - the eventType\n\t     * - the matchCriteria (to, from, exiting, retained, entering)\n\t     *\n\t     * @returns an array of matched [[IEventHook]]s\n\t     */\n\t    HookBuilder.prototype._matchingHooks = function (hookName, treeChanges) {\n\t        return [this.transition, this.$transitions] // Instance and Global hook registries\n\t            .map(function (reg) { return reg.getHooks(hookName); }) // Get named hooks from registries\n\t            .filter(common_1.assertPredicate(predicates_1.isArray, \"broken event named: \" + hookName)) // Sanity check\n\t            .reduce(common_1.unnestR, []) // Un-nest IEventHook[][] to IEventHook[] array\n\t            .filter(function (hook) { return hook.matches(treeChanges); }); // Only those satisfying matchCriteria\n\t    };\n\t    return HookBuilder;\n\t}());\n\texports.HookBuilder = HookBuilder;\n\t/**\n\t * A factory for a sort function for HookTuples.\n\t *\n\t * The sort function first compares the PathNode depth (how deep in the state tree a node is), then compares\n\t * the EventHook priority.\n\t *\n\t * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n\t * @returns a tuple sort function\n\t */\n\tfunction tupleSort(reverseDepthSort) {\n\t    if (reverseDepthSort === void 0) { reverseDepthSort = false; }\n\t    return function nodeDepthThenPriority(l, r) {\n\t        var factor = reverseDepthSort ? -1 : 1;\n\t        var depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n\t        return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n\t    };\n\t}\n\t//# sourceMappingURL=hookBuilder.js.map\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module resolve */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar hof_1 = __webpack_require__(5);\n\tvar trace_1 = __webpack_require__(12);\n\tvar coreservices_1 = __webpack_require__(6);\n\tvar interface_1 = __webpack_require__(18);\n\tvar resolvable_1 = __webpack_require__(19);\n\tvar pathFactory_1 = __webpack_require__(20);\n\tvar strings_1 = __webpack_require__(9);\n\tvar when = interface_1.resolvePolicies.when;\n\tvar ALL_WHENS = [when.EAGER, when.LAZY];\n\tvar EAGER_WHENS = [when.EAGER];\n\texports.NATIVE_INJECTOR_TOKEN = \"Native Injector\";\n\t/**\n\t * Encapsulates Depenency Injection for a path of nodes\n\t *\n\t * UI-Router states are organized as a tree.\n\t * A nested state has a path of ancestors to the root of the tree.\n\t * When a state is being activated, each element in the path is wrapped as a [[PathNode]].\n\t * A `PathNode` is a stateful object that holds things like parameters and resolvables for the state being activated.\n\t *\n\t * The ResolveContext closes over the [[PathNode]]s, and provides DI for the last node in the path.\n\t */\n\tvar ResolveContext = (function () {\n\t    function ResolveContext(_path) {\n\t        this._path = _path;\n\t    }\n\t    /** Gets all the tokens found in the resolve context, de-duplicated */\n\t    ResolveContext.prototype.getTokens = function () {\n\t        return this._path.reduce(function (acc, node) { return acc.concat(node.resolvables.map(function (r) { return r.token; })); }, []).reduce(common_1.uniqR, []);\n\t    };\n\t    /**\n\t     * Gets the Resolvable that matches the token\n\t     *\n\t     * Gets the last Resolvable that matches the token in this context, or undefined.\n\t     * Throws an error if it doesn't exist in the ResolveContext\n\t     */\n\t    ResolveContext.prototype.getResolvable = function (token) {\n\t        var matching = this._path.map(function (node) { return node.resolvables; })\n\t            .reduce(common_1.unnestR, [])\n\t            .filter(function (r) { return r.token === token; });\n\t        return common_1.tail(matching);\n\t    };\n\t    /**\n\t     * Returns a ResolveContext that includes a portion of this one\n\t     *\n\t     * Given a state, this method creates a new ResolveContext from this one.\n\t     * The new context starts at the first node (root) and stops at the node for the `state` parameter.\n\t     *\n\t     * #### Why\n\t     *\n\t     * When a transition is created, the nodes in the \"To Path\" are injected from a ResolveContext.\n\t     * A ResolveContext closes over a path of [[PathNode]]s and processes the resolvables.\n\t     * The \"To State\" can inject values from its own resolvables, as well as those from all its ancestor state's (node's).\n\t     * This method is used to create a narrower context when injecting ancestor nodes.\n\t     *\n\t     * @example\n\t     * `let ABCD = new ResolveContext([A, B, C, D]);`\n\t     *\n\t     * Given a path `[A, B, C, D]`, where `A`, `B`, `C` and `D` are nodes for states `a`, `b`, `c`, `d`:\n\t     * When injecting `D`, `D` should have access to all resolvables from `A`, `B`, `C`, `D`.\n\t     * However, `B` should only be able to access resolvables from `A`, `B`.\n\t     *\n\t     * When resolving for the `B` node, first take the full \"To Path\" Context `[A,B,C,D]` and limit to the subpath `[A,B]`.\n\t     * `let AB = ABCD.subcontext(a)`\n\t     */\n\t    ResolveContext.prototype.subContext = function (state) {\n\t        return new ResolveContext(pathFactory_1.PathFactory.subPath(this._path, function (node) { return node.state === state; }));\n\t    };\n\t    /**\n\t     * Adds Resolvables to the node that matches the state\n\t     *\n\t     * This adds a [[Resolvable]] (generally one created on the fly; not declared on a [[StateDeclaration.resolve]] block).\n\t     * The resolvable is added to the node matching the `state` parameter.\n\t     *\n\t     * These new resolvables are not automatically fetched.\n\t     * The calling code should either fetch them, fetch something that depends on them,\n\t     * or rely on [[resolvePath]] being called when some state is being entered.\n\t     *\n\t     * Note: each resolvable's [[ResolvePolicy]] is merged with the state's policy, and the global default.\n\t     *\n\t     * @param newResolvables the new Resolvables\n\t     * @param state Used to find the node to put the resolvable on\n\t     */\n\t    ResolveContext.prototype.addResolvables = function (newResolvables, state) {\n\t        var node = common_1.find(this._path, hof_1.propEq('state', state));\n\t        var keys = newResolvables.map(function (r) { return r.token; });\n\t        node.resolvables = node.resolvables.filter(function (r) { return keys.indexOf(r.token) === -1; }).concat(newResolvables);\n\t    };\n\t    /**\n\t     * Returns a promise for an array of resolved path Element promises\n\t     *\n\t     * @param when\n\t     * @param trans\n\t     * @returns {Promise<any>|any}\n\t     */\n\t    ResolveContext.prototype.resolvePath = function (when, trans) {\n\t        var _this = this;\n\t        if (when === void 0) { when = \"LAZY\"; }\n\t        // This option determines which 'when' policy Resolvables we are about to fetch.\n\t        var whenOption = common_1.inArray(ALL_WHENS, when) ? when : \"LAZY\";\n\t        // If the caller specified EAGER, only the EAGER Resolvables are fetched.\n\t        // if the caller specified LAZY, both EAGER and LAZY Resolvables are fetched.`\n\t        var matchedWhens = whenOption === interface_1.resolvePolicies.when.EAGER ? EAGER_WHENS : ALL_WHENS;\n\t        // get the subpath to the state argument, if provided\n\t        trace_1.trace.traceResolvePath(this._path, when, trans);\n\t        var promises = this._path.reduce(function (acc, node) {\n\t            var matchesRequestedPolicy = function (resolvable) {\n\t                return common_1.inArray(matchedWhens, resolvable.getPolicy(node.state).when);\n\t            };\n\t            var nodeResolvables = node.resolvables.filter(matchesRequestedPolicy);\n\t            var subContext = _this.subContext(node.state);\n\t            // For the matching Resolvables, start their async fetch process.\n\t            var getResult = function (r) { return r.get(subContext, trans)\n\t                .then(function (value) { return ({ token: r.token, value: value }); }); };\n\t            return acc.concat(nodeResolvables.map(getResult));\n\t        }, []);\n\t        return coreservices_1.services.$q.all(promises);\n\t    };\n\t    ResolveContext.prototype.injector = function () {\n\t        return this._injector || (this._injector = new UIInjectorImpl(this));\n\t    };\n\t    ResolveContext.prototype.findNode = function (resolvable) {\n\t        return common_1.find(this._path, function (node) { return common_1.inArray(node.resolvables, resolvable); });\n\t    };\n\t    /**\n\t     * Gets the async dependencies of a Resolvable\n\t     *\n\t     * Given a Resolvable, returns its dependencies as a Resolvable[]\n\t     */\n\t    ResolveContext.prototype.getDependencies = function (resolvable) {\n\t        var _this = this;\n\t        var node = this.findNode(resolvable);\n\t        // Find which other resolvables are \"visible\" to the `resolvable` argument\n\t        // subpath stopping at resolvable's node, or the whole path (if the resolvable isn't in the path)\n\t        var subPath = pathFactory_1.PathFactory.subPath(this._path, function (x) { return x === node; }) || this._path;\n\t        var availableResolvables = subPath\n\t            .reduce(function (acc, node) { return acc.concat(node.resolvables); }, []) //all of subpath's resolvables\n\t            .filter(function (res) { return res !== resolvable; }); // filter out the `resolvable` argument\n\t        var getDependency = function (token) {\n\t            var matching = availableResolvables.filter(function (r) { return r.token === token; });\n\t            if (matching.length)\n\t                return common_1.tail(matching);\n\t            var fromInjector = _this.injector().getNative(token);\n\t            if (!fromInjector) {\n\t                throw new Error(\"Could not find Dependency Injection token: \" + strings_1.stringify(token));\n\t            }\n\t            return new resolvable_1.Resolvable(token, function () { return fromInjector; }, [], fromInjector);\n\t        };\n\t        return resolvable.deps.map(getDependency);\n\t    };\n\t    return ResolveContext;\n\t}());\n\texports.ResolveContext = ResolveContext;\n\tvar UIInjectorImpl = (function () {\n\t    function UIInjectorImpl(context) {\n\t        this.context = context;\n\t        this.native = this.get(exports.NATIVE_INJECTOR_TOKEN) || coreservices_1.services.$injector;\n\t    }\n\t    UIInjectorImpl.prototype.get = function (token) {\n\t        var resolvable = this.context.getResolvable(token);\n\t        if (resolvable) {\n\t            if (!resolvable.resolved) {\n\t                throw new Error(\"Resolvable async .get() not complete:\" + strings_1.stringify(resolvable.token));\n\t            }\n\t            return resolvable.data;\n\t        }\n\t        return this.native && this.native.get(token);\n\t    };\n\t    UIInjectorImpl.prototype.getAsync = function (token) {\n\t        var resolvable = this.context.getResolvable(token);\n\t        if (resolvable)\n\t            return resolvable.get(this.context);\n\t        return coreservices_1.services.$q.when(this.native.get(token));\n\t    };\n\t    UIInjectorImpl.prototype.getNative = function (token) {\n\t        return this.native.get(token);\n\t    };\n\t    return UIInjectorImpl;\n\t}());\n\t//# sourceMappingURL=resolveContext.js.map\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/** @internalapi */\n\texports.resolvePolicies = {\n\t    when: {\n\t        LAZY: \"LAZY\",\n\t        EAGER: \"EAGER\"\n\t    },\n\t    async: {\n\t        WAIT: \"WAIT\",\n\t        NOWAIT: \"NOWAIT\",\n\t        RXWAIT: \"RXWAIT\"\n\t    }\n\t};\n\t//# sourceMappingURL=interface.js.map\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module resolve */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar coreservices_1 = __webpack_require__(6);\n\tvar trace_1 = __webpack_require__(12);\n\tvar strings_1 = __webpack_require__(9);\n\tvar predicates_1 = __webpack_require__(4);\n\t// TODO: explicitly make this user configurable\n\texports.defaultResolvePolicy = {\n\t    when: \"LAZY\",\n\t    async: \"WAIT\"\n\t};\n\t/**\n\t * The basic building block for the resolve system.\n\t *\n\t * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n\t * and the unwrapped-when-complete (.data) result of the resolveFn.\n\t *\n\t * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n\t * resolveFn) and returns the resulting promise.\n\t *\n\t * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n\t * parameter to those fns.\n\t */\n\tvar Resolvable = (function () {\n\t    function Resolvable(arg1, resolveFn, deps, policy, data) {\n\t        this.resolved = false;\n\t        this.promise = undefined;\n\t        if (arg1 instanceof Resolvable) {\n\t            common_1.extend(this, arg1);\n\t        }\n\t        else if (predicates_1.isFunction(resolveFn)) {\n\t            if (arg1 == null || arg1 == undefined)\n\t                throw new Error(\"new Resolvable(): token argument is required\");\n\t            if (!predicates_1.isFunction(resolveFn))\n\t                throw new Error(\"new Resolvable(): resolveFn argument must be a function\");\n\t            this.token = arg1;\n\t            this.policy = policy;\n\t            this.resolveFn = resolveFn;\n\t            this.deps = deps || [];\n\t            this.data = data;\n\t            this.resolved = data !== undefined;\n\t            this.promise = this.resolved ? coreservices_1.services.$q.when(this.data) : undefined;\n\t        }\n\t        else if (predicates_1.isObject(arg1) && arg1.token && predicates_1.isFunction(arg1.resolveFn)) {\n\t            var literal = arg1;\n\t            return new Resolvable(literal.token, literal.resolveFn, literal.deps, literal.policy, literal.data);\n\t        }\n\t    }\n\t    Resolvable.prototype.getPolicy = function (state) {\n\t        var thisPolicy = this.policy || {};\n\t        var statePolicy = state && state.resolvePolicy || {};\n\t        return {\n\t            when: thisPolicy.when || statePolicy.when || exports.defaultResolvePolicy.when,\n\t            async: thisPolicy.async || statePolicy.async || exports.defaultResolvePolicy.async,\n\t        };\n\t    };\n\t    /**\n\t     * Asynchronously resolve this Resolvable's data\n\t     *\n\t     * Given a ResolveContext that this Resolvable is found in:\n\t     * Wait for this Resolvable's dependencies, then invoke this Resolvable's function\n\t     * and update the Resolvable's state\n\t     */\n\t    Resolvable.prototype.resolve = function (resolveContext, trans) {\n\t        var _this = this;\n\t        var $q = coreservices_1.services.$q;\n\t        // Gets all dependencies from ResolveContext and wait for them to be resolved\n\t        var getResolvableDependencies = function () {\n\t            return $q.all(resolveContext.getDependencies(_this).map(function (r) {\n\t                return r.get(resolveContext, trans);\n\t            }));\n\t        };\n\t        // Invokes the resolve function passing the resolved dependencies as arguments\n\t        var invokeResolveFn = function (resolvedDeps) {\n\t            return _this.resolveFn.apply(null, resolvedDeps);\n\t        };\n\t        /**\n\t         * For RXWAIT policy:\n\t         *\n\t         * Given an observable returned from a resolve function:\n\t         * - enables .cache() mode (this allows multicast subscribers)\n\t         * - then calls toPromise() (this triggers subscribe() and thus fetches)\n\t         * - Waits for the promise, then return the cached observable (not the first emitted value).\n\t         */\n\t        var waitForRx = function (observable$) {\n\t            var cached = observable$.cache(1);\n\t            return cached.take(1).toPromise().then(function () { return cached; });\n\t        };\n\t        // If the resolve policy is RXWAIT, wait for the observable to emit something. otherwise pass through.\n\t        var node = resolveContext.findNode(this);\n\t        var state = node && node.state;\n\t        var maybeWaitForRx = this.getPolicy(state).async === \"RXWAIT\" ? waitForRx : common_1.identity;\n\t        // After the final value has been resolved, update the state of the Resolvable\n\t        var applyResolvedValue = function (resolvedValue) {\n\t            _this.data = resolvedValue;\n\t            _this.resolved = true;\n\t            trace_1.trace.traceResolvableResolved(_this, trans);\n\t            return _this.data;\n\t        };\n\t        // Sets the promise property first, then getsResolvableDependencies in the context of the promise chain. Always waits one tick.\n\t        return this.promise = $q.when()\n\t            .then(getResolvableDependencies)\n\t            .then(invokeResolveFn)\n\t            .then(maybeWaitForRx)\n\t            .then(applyResolvedValue);\n\t    };\n\t    /**\n\t     * Gets a promise for this Resolvable's data.\n\t     *\n\t     * Fetches the data and returns a promise.\n\t     * Returns the existing promise if it has already been fetched once.\n\t     */\n\t    Resolvable.prototype.get = function (resolveContext, trans) {\n\t        return this.promise || this.resolve(resolveContext, trans);\n\t    };\n\t    Resolvable.prototype.toString = function () {\n\t        return \"Resolvable(token: \" + strings_1.stringify(this.token) + \", requires: [\" + this.deps.map(strings_1.stringify) + \"])\";\n\t    };\n\t    Resolvable.prototype.clone = function () {\n\t        return new Resolvable(this);\n\t    };\n\t    Resolvable.fromData = function (token, data) {\n\t        return new Resolvable(token, function () { return data; }, null, null, data);\n\t    };\n\t    return Resolvable;\n\t}());\n\texports.Resolvable = Resolvable;\n\t//# sourceMappingURL=resolvable.js.map\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @module path */ /** for typedoc */\n\t\"use strict\";\n\tvar common_1 = __webpack_require__(3);\n\tvar hof_1 = __webpack_require__(5);\n\tvar targetState_1 = __webpack_require__(14);\n\tvar node_1 = __webpack_require__(21);\n\t/**\n\t * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n\t */\n\tvar PathFactory = (function () {\n\t    function PathFactory() {\n\t    }\n\t    /** Given a PathNode[], create an TargetState */\n\t    PathFactory.makeTargetState = function (path) {\n\t        var state = common_1.tail(path).state;\n\t        return new targetState_1.TargetState(state, state, path.map(hof_1.prop(\"paramValues\")).reduce(common_1.mergeR, {}));\n\t    };\n\t    PathFactory.buildPath = function (targetState) {\n\t        var toParams = targetState.params();\n\t        return targetState.$state().path.map(function (state) { return new node_1.PathNode(state).applyRawParams(toParams); });\n\t    };\n\t    /** Given a fromPath: PathNode[] and a TargetState, builds a toPath: PathNode[] */\n\t    PathFactory.buildToPath = function (fromPath, targetState) {\n\t        var toPath = PathFactory.buildPath(targetState);\n\t        if (targetState.options().inherit) {\n\t            return PathFactory.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n\t        }\n\t        return toPath;\n\t    };\n\t    /**\n\t     * Creates ViewConfig objects and adds to nodes.\n\t     *\n\t     * On each [[PathNode]], creates ViewConfig objects from the views: property of the node's state\n\t     */\n\t    PathFactory.applyViewConfigs = function ($view, path, states) {\n\t        // Only apply the viewConfigs to the nodes for the given states\n\t        path.filter(function (node) { return common_1.inArray(states, node.state); }).forEach(function (node) {\n\t            var viewDecls = common_1.values(node.state.views || {});\n\t            var subPath = PathFactory.subPath(path, function (n) { return n === node; });\n\t            var viewConfigs = viewDecls.map(function (view) { return $view.createViewConfig(subPath, view); });\n\t            node.views = viewConfigs.reduce(common_1.unnestR, []);\n\t        });\n\t    };\n\t    /**\n\t     * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n\t     *\n\t     * For a parameter in a node to be inherited from the from path:\n\t     * - The toPath's node must have a matching node in the fromPath (by state).\n\t     * - The parameter name must not be found in the toKeys parameter array.\n\t     *\n\t     * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n\t     * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n\t     * it is not inherited from the fromPath.\n\t     */\n\t    PathFactory.inheritParams = function (fromPath, toPath, toKeys) {\n\t        if (toKeys === void 0) { toKeys = []; }\n\t        function nodeParamVals(path, state) {\n\t            var node = common_1.find(path, hof_1.propEq('state', state));\n\t            return common_1.extend({}, node && node.paramValues);\n\t        }\n\t        /**\n\t         * Given an [[PathNode]] \"toNode\", return a new [[PathNode]] with param values inherited from the\n\t         * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n\t         */\n\t        function makeInheritedParamsNode(toNode) {\n\t            // All param values for the node (may include default key/vals, when key was not found in toParams)\n\t            var toParamVals = common_1.extend({}, toNode && toNode.paramValues);\n\t            // limited to only those keys found in toParams\n\t            var incomingParamVals = common_1.pick(toParamVals, toKeys);\n\t            toParamVals = common_1.omit(toParamVals, toKeys);\n\t            var fromParamVals = nodeParamVals(fromPath, toNode.state) || {};\n\t            // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n\t            var ownParamVals = common_1.extend(toParamVals, fromParamVals, incomingParamVals);\n\t            return new node_1.PathNode(toNode.state).applyRawParams(ownParamVals);\n\t        }\n\t        // The param keys specified by the incoming toParams\n\t        return toPath.map(makeInheritedParamsNode);\n\t    };\n\t    /**\n\t     * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n\t     */\n\t    PathFactory.treeChanges = function (fromPath, toPath, reloadState) {\n\t        var keep = 0, max = Math.min(fromPath.length, toPath.length);\n\t        var staticParams = function (state) {\n\t            return state.parameters({ inherit: false }).filter(hof_1.not(hof_1.prop('dynamic'))).map(hof_1.prop('id'));\n\t        };\n\t        var nodesMatch = function (node1, node2) {\n\t            return node1.equals(node2, staticParams(node1.state));\n\t        };\n\t        while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n\t            keep++;\n\t        }\n\t        /** Given a retained node, return a new node which uses the to node's param values */\n\t        function applyToParams(retainedNode, idx) {\n\t            var cloned = node_1.PathNode.clone(retainedNode);\n\t            cloned.paramValues = toPath[idx].paramValues;\n\t            return cloned;\n\t        }\n\t        var from, retained, exiting, entering, to;\n\t        from = fromPath;\n\t        retained = from.slice(0, keep);\n\t        exiting = from.slice(keep);\n\t        // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n\t        var retainedWithToParams = retained.map(applyToParams);\n\t        entering = toPath.slice(keep);\n\t        to = (retainedWithToParams).concat(entering);\n\t        return { from: from, to: to, retained: retained, exiting: exiting, entering: entering };\n\t    };\n\t    /**\n\t     * Return a subpath of a path, which stops at the first matching node\n\t     *\n\t     * Given an array of nodes, returns a subset of the array starting from the first node,\n\t     * stopping when the first node matches the predicate.\n\t     *\n\t     * @param path a path of [[PathNode]]s\n\t     * @param predicate a [[Predicate]] fn that matches [[PathNode]]s\n\t     * @returns a subpath up to the matching node, or undefined if no match is found\n\t     */\n\t    PathFactory.subPath = function (path, predicate) {\n\t        var node = common_1.find(path, predicate);\n\t        var elementIdx = path.indexOf(node);\n\t        return elementIdx === -1 ? undefined : path.slice(0, elementIdx + 1);\n\t    };\n\t    /** Gets the raw parameter values from a path */\n\t    PathFactory.paramValues = function (path) { return path.reduce(function (acc, node) { return common_1.extend(acc, node.paramValues); }, {}); };\n\t    return PathFactory;\n\t}());\n\texports.PathFactory = PathFactory;\n\t//# sourceMappingURL=pathFactory.js.map\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module path */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar hof_1 = __webpack_require__(5);\n\tvar param_1 = __webpack_require__(22);\n\t/**\n\t * A node in a [[TreeChanges]] path\n\t *\n\t * For a [[TreeChanges]] path, this class holds the stateful information for a single node in the path.\n\t * Each PathNode corresponds to a state being entered, exited, or retained.\n\t * The stateful information includes parameter values and resolve data.\n\t */\n\tvar PathNode = (function () {\n\t    function PathNode(stateOrPath) {\n\t        if (stateOrPath instanceof PathNode) {\n\t            var node = stateOrPath;\n\t            this.state = node.state;\n\t            this.paramSchema = node.paramSchema.slice();\n\t            this.paramValues = common_1.extend({}, node.paramValues);\n\t            this.resolvables = node.resolvables.slice();\n\t            this.views = node.views && node.views.slice();\n\t        }\n\t        else {\n\t            var state = stateOrPath;\n\t            this.state = state;\n\t            this.paramSchema = state.parameters({ inherit: false });\n\t            this.paramValues = {};\n\t            this.resolvables = state.resolvables.map(function (res) { return res.clone(); });\n\t        }\n\t    }\n\t    /** Sets [[paramValues]] for the node, from the values of an object hash */\n\t    PathNode.prototype.applyRawParams = function (params) {\n\t        var getParamVal = function (paramDef) { return [paramDef.id, paramDef.value(params[paramDef.id])]; };\n\t        this.paramValues = this.paramSchema.reduce(function (memo, pDef) { return common_1.applyPairs(memo, getParamVal(pDef)); }, {});\n\t        return this;\n\t    };\n\t    /** Gets a specific [[Param]] metadata that belongs to the node */\n\t    PathNode.prototype.parameter = function (name) {\n\t        return common_1.find(this.paramSchema, hof_1.propEq(\"id\", name));\n\t    };\n\t    /**\n\t     * @returns true if the state and parameter values for another PathNode are\n\t     * equal to the state and param values for this PathNode\n\t     */\n\t    PathNode.prototype.equals = function (node, keys) {\n\t        var _this = this;\n\t        if (keys === void 0) { keys = this.paramSchema.map(function (p) { return p.id; }); }\n\t        var paramValsEq = function (key) {\n\t            return _this.parameter(key).type.equals(_this.paramValues[key], node.paramValues[key]);\n\t        };\n\t        return this.state === node.state && keys.map(paramValsEq).reduce(common_1.allTrueR, true);\n\t    };\n\t    /** Returns a clone of the PathNode */\n\t    PathNode.clone = function (node) {\n\t        return new PathNode(node);\n\t    };\n\t    /**\n\t     * Returns a new path which is a subpath of the first path which matched the second path.\n\t     *\n\t     * The new path starts from root and contains any nodes that match the nodes in the second path.\n\t     * Nodes are compared using their state property and parameter values.\n\t     *\n\t     * @param pathA the first path\n\t     * @param pathB the second path\n\t     * @param ignoreDynamicParams don't compare dynamic parameter values\n\t     */\n\t    PathNode.matching = function (pathA, pathB, ignoreDynamicParams) {\n\t        if (ignoreDynamicParams === void 0) { ignoreDynamicParams = true; }\n\t        var matching = [];\n\t        for (var i = 0; i < pathA.length && i < pathB.length; i++) {\n\t            var a = pathA[i], b = pathB[i];\n\t            if (a.state !== b.state)\n\t                break;\n\t            var changedParams = param_1.Param.changed(a.paramSchema, a.paramValues, b.paramValues)\n\t                .filter(function (param) { return !(ignoreDynamicParams && param.dynamic); });\n\t            if (changedParams.length)\n\t                break;\n\t            matching.push(a);\n\t        }\n\t        return matching;\n\t    };\n\t    return PathNode;\n\t}());\n\texports.PathNode = PathNode;\n\t//# sourceMappingURL=node.js.map\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module params */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar hof_1 = __webpack_require__(5);\n\tvar predicates_1 = __webpack_require__(4);\n\tvar coreservices_1 = __webpack_require__(6);\n\tvar urlMatcherConfig_1 = __webpack_require__(23);\n\tvar type_1 = __webpack_require__(24);\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\tvar isShorthand = function (cfg) {\n\t    return [\"value\", \"type\", \"squash\", \"array\", \"dynamic\"].filter(hasOwn.bind(cfg || {})).length === 0;\n\t};\n\t(function (DefType) {\n\t    DefType[DefType[\"PATH\"] = 0] = \"PATH\";\n\t    DefType[DefType[\"SEARCH\"] = 1] = \"SEARCH\";\n\t    DefType[DefType[\"CONFIG\"] = 2] = \"CONFIG\";\n\t})(exports.DefType || (exports.DefType = {}));\n\tvar DefType = exports.DefType;\n\tfunction unwrapShorthand(cfg) {\n\t    cfg = isShorthand(cfg) && { value: cfg } || cfg;\n\t    return common_1.extend(cfg, {\n\t        $$fn: predicates_1.isInjectable(cfg.value) ? cfg.value : function () { return cfg.value; }\n\t    });\n\t}\n\tfunction getType(cfg, urlType, location, id, paramTypes) {\n\t    if (cfg.type && urlType && urlType.name !== 'string')\n\t        throw new Error(\"Param '\" + id + \"' has two type configurations.\");\n\t    if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type))\n\t        return paramTypes.type(cfg.type);\n\t    if (urlType)\n\t        return urlType;\n\t    if (!cfg.type)\n\t        return (location === DefType.CONFIG ? paramTypes.type(\"any\") : paramTypes.type(\"string\"));\n\t    return cfg.type instanceof type_1.ParamType ? cfg.type : paramTypes.type(cfg.type);\n\t}\n\t/**\n\t * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n\t */\n\tfunction getSquashPolicy(config, isOptional) {\n\t    var squash = config.squash;\n\t    if (!isOptional || squash === false)\n\t        return false;\n\t    if (!predicates_1.isDefined(squash) || squash == null)\n\t        return urlMatcherConfig_1.matcherConfig.defaultSquashPolicy();\n\t    if (squash === true || predicates_1.isString(squash))\n\t        return squash;\n\t    throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n\t}\n\tfunction getReplace(config, arrayMode, isOptional, squash) {\n\t    var replace, configuredKeys, defaultPolicy = [\n\t        { from: \"\", to: (isOptional || arrayMode ? undefined : \"\") },\n\t        { from: null, to: (isOptional || arrayMode ? undefined : \"\") }\n\t    ];\n\t    replace = predicates_1.isArray(config.replace) ? config.replace : [];\n\t    if (predicates_1.isString(squash))\n\t        replace.push({ from: squash, to: undefined });\n\t    configuredKeys = common_1.map(replace, hof_1.prop(\"from\"));\n\t    return common_1.filter(defaultPolicy, function (item) { return configuredKeys.indexOf(item.from) === -1; }).concat(replace);\n\t}\n\tvar Param = (function () {\n\t    function Param(id, type, config, location, paramTypes) {\n\t        config = unwrapShorthand(config);\n\t        type = getType(config, type, location, id, paramTypes);\n\t        var arrayMode = getArrayMode();\n\t        type = arrayMode ? type.$asArray(arrayMode, location === DefType.SEARCH) : type;\n\t        var isOptional = config.value !== undefined;\n\t        var dynamic = predicates_1.isDefined(config.dynamic) ? !!config.dynamic : !!type.dynamic;\n\t        var squash = getSquashPolicy(config, isOptional);\n\t        var replace = getReplace(config, arrayMode, isOptional, squash);\n\t        // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n\t        function getArrayMode() {\n\t            var arrayDefaults = { array: (location === DefType.SEARCH ? \"auto\" : false) };\n\t            var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n\t            return common_1.extend(arrayDefaults, arrayParamNomenclature, config).array;\n\t        }\n\t        common_1.extend(this, { id: id, type: type, location: location, squash: squash, replace: replace, isOptional: isOptional, dynamic: dynamic, config: config, array: arrayMode });\n\t    }\n\t    Param.prototype.isDefaultValue = function (value) {\n\t        return this.isOptional && this.type.equals(this.value(), value);\n\t    };\n\t    /**\n\t     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n\t     * default value, which may be the result of an injectable function.\n\t     */\n\t    Param.prototype.value = function (value) {\n\t        var _this = this;\n\t        /**\n\t         * [Internal] Get the default value of a parameter, which may be an injectable function.\n\t         */\n\t        var $$getDefaultValue = function () {\n\t            if (!coreservices_1.services.$injector)\n\t                throw new Error(\"Injectable functions cannot be called at configuration time\");\n\t            var defaultValue = coreservices_1.services.$injector.invoke(_this.config.$$fn);\n\t            if (defaultValue !== null && defaultValue !== undefined && !_this.type.is(defaultValue))\n\t                throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + _this.id + \"' is not an instance of ParamType (\" + _this.type.name + \")\");\n\t            return defaultValue;\n\t        };\n\t        var $replace = function (val) {\n\t            var replacement = common_1.map(common_1.filter(_this.replace, hof_1.propEq('from', val)), hof_1.prop(\"to\"));\n\t            return replacement.length ? replacement[0] : val;\n\t        };\n\t        value = $replace(value);\n\t        return !predicates_1.isDefined(value) ? $$getDefaultValue() : this.type.$normalize(value);\n\t    };\n\t    Param.prototype.isSearch = function () {\n\t        return this.location === DefType.SEARCH;\n\t    };\n\t    Param.prototype.validates = function (value) {\n\t        // There was no parameter value, but the param is optional\n\t        if ((!predicates_1.isDefined(value) || value === null) && this.isOptional)\n\t            return true;\n\t        // The value was not of the correct ParamType, and could not be decoded to the correct ParamType\n\t        var normalized = this.type.$normalize(value);\n\t        if (!this.type.is(normalized))\n\t            return false;\n\t        // The value was of the correct type, but when encoded, did not match the ParamType's regexp\n\t        var encoded = this.type.encode(normalized);\n\t        return !(predicates_1.isString(encoded) && !this.type.pattern.exec(encoded));\n\t    };\n\t    Param.prototype.toString = function () {\n\t        return \"{Param:\" + this.id + \" \" + this.type + \" squash: '\" + this.squash + \"' optional: \" + this.isOptional + \"}\";\n\t    };\n\t    /** Creates a new [[Param]] from a CONFIG block */\n\t    Param.fromConfig = function (id, type, config, paramTypes) {\n\t        return new Param(id, type, config, DefType.CONFIG, paramTypes);\n\t    };\n\t    /** Creates a new [[Param]] from a url PATH */\n\t    Param.fromPath = function (id, type, config, paramTypes) {\n\t        return new Param(id, type, config, DefType.PATH, paramTypes);\n\t    };\n\t    /** Creates a new [[Param]] from a url SEARCH */\n\t    Param.fromSearch = function (id, type, config, paramTypes) {\n\t        return new Param(id, type, config, DefType.SEARCH, paramTypes);\n\t    };\n\t    Param.values = function (params, values) {\n\t        if (values === void 0) { values = {}; }\n\t        return params.map(function (param) { return [param.id, param.value(values[param.id])]; }).reduce(common_1.applyPairs, {});\n\t    };\n\t    /**\n\t     * Finds [[Param]] objects which have different param values\n\t     *\n\t     * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n\t     *\n\t     * @param params: The list of Param objects to filter\n\t     * @param values1: The first set of parameter values\n\t     * @param values2: the second set of parameter values\n\t     *\n\t     * @returns any Param objects whose values were different between values1 and values2\n\t     */\n\t    Param.changed = function (params, values1, values2) {\n\t        if (values1 === void 0) { values1 = {}; }\n\t        if (values2 === void 0) { values2 = {}; }\n\t        return params.filter(function (param) { return !param.type.equals(values1[param.id], values2[param.id]); });\n\t    };\n\t    /**\n\t     * Checks if two param value objects are equal (for a set of [[Param]] objects)\n\t     *\n\t     * @param params The list of [[Param]] objects to check\n\t     * @param values1 The first set of param values\n\t     * @param values2 The second set of param values\n\t     *\n\t     * @returns true if the param values in values1 and values2 are equal\n\t     */\n\t    Param.equals = function (params, values1, values2) {\n\t        if (values1 === void 0) { values1 = {}; }\n\t        if (values2 === void 0) { values2 = {}; }\n\t        return Param.changed(params, values1, values2).length === 0;\n\t    };\n\t    /** Returns true if a the parameter values are valid, according to the Param definitions */\n\t    Param.validates = function (params, values) {\n\t        if (values === void 0) { values = {}; }\n\t        return params.map(function (param) { return param.validates(values[param.id]); }).reduce(common_1.allTrueR, true);\n\t    };\n\t    return Param;\n\t}());\n\texports.Param = Param;\n\t//# sourceMappingURL=param.js.map\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module url */ /** for typedoc */\n\tvar predicates_1 = __webpack_require__(4);\n\tvar MatcherConfig = (function () {\n\t    function MatcherConfig() {\n\t        this._isCaseInsensitive = false;\n\t        this._isStrictMode = true;\n\t        this._defaultSquashPolicy = false;\n\t    }\n\t    MatcherConfig.prototype.caseInsensitive = function (value) {\n\t        return this._isCaseInsensitive = predicates_1.isDefined(value) ? value : this._isCaseInsensitive;\n\t    };\n\t    MatcherConfig.prototype.strictMode = function (value) {\n\t        return this._isStrictMode = predicates_1.isDefined(value) ? value : this._isStrictMode;\n\t    };\n\t    MatcherConfig.prototype.defaultSquashPolicy = function (value) {\n\t        if (predicates_1.isDefined(value) && value !== true && value !== false && !predicates_1.isString(value))\n\t            throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n\t        return this._defaultSquashPolicy = predicates_1.isDefined(value) ? value : this._defaultSquashPolicy;\n\t    };\n\t    return MatcherConfig;\n\t}());\n\texports.MatcherConfig = MatcherConfig;\n\t// TODO: Do not export global instance; create one in UIRouter() constructor\n\texports.matcherConfig = new MatcherConfig();\n\t//# sourceMappingURL=urlMatcherConfig.js.map\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module params */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar predicates_1 = __webpack_require__(4);\n\t/**\n\t * Wraps up a `ParamType` object to handle array values.\n\t */\n\tfunction ArrayType(type, mode) {\n\t    var _this = this;\n\t    // Wrap non-array value as array\n\t    function arrayWrap(val) {\n\t        return predicates_1.isArray(val) ? val : (predicates_1.isDefined(val) ? [val] : []);\n\t    }\n\t    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n\t    function arrayUnwrap(val) {\n\t        switch (val.length) {\n\t            case 0: return undefined;\n\t            case 1: return mode === \"auto\" ? val[0] : val;\n\t            default: return val;\n\t        }\n\t    }\n\t    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n\t    function arrayHandler(callback, allTruthyMode) {\n\t        return function handleArray(val) {\n\t            if (predicates_1.isArray(val) && val.length === 0)\n\t                return val;\n\t            var arr = arrayWrap(val);\n\t            var result = common_1.map(arr, callback);\n\t            return (allTruthyMode === true) ? common_1.filter(result, function (x) { return !x; }).length === 0 : arrayUnwrap(result);\n\t        };\n\t    }\n\t    // Wraps type (.equals) functions to operate on each value of an array\n\t    function arrayEqualsHandler(callback) {\n\t        return function handleArray(val1, val2) {\n\t            var left = arrayWrap(val1), right = arrayWrap(val2);\n\t            if (left.length !== right.length)\n\t                return false;\n\t            for (var i = 0; i < left.length; i++) {\n\t                if (!callback(left[i], right[i]))\n\t                    return false;\n\t            }\n\t            return true;\n\t        };\n\t    }\n\t    ['encode', 'decode', 'equals', '$normalize'].forEach(function (name) {\n\t        var paramTypeFn = type[name].bind(type);\n\t        var wrapperFn = name === 'equals' ? arrayEqualsHandler : arrayHandler;\n\t        _this[name] = wrapperFn(paramTypeFn);\n\t    });\n\t    common_1.extend(this, {\n\t        dynamic: type.dynamic,\n\t        name: type.name,\n\t        pattern: type.pattern,\n\t        is: arrayHandler(type.is.bind(type), true),\n\t        $arrayMode: mode\n\t    });\n\t}\n\t/**\n\t * A class that implements Custom Parameter Type functionality.\n\t *\n\t * This class has naive implementations for all the [[ParamTypeDefinition]] methods.\n\t *\n\t * An instance of this class is created when a custom [[ParamTypeDefinition]] object is registered with the [[UrlMatcherFactory.type]].\n\t *\n\t * Used by [[UrlMatcher]] when matching or formatting URLs, or comparing and validating parameter values.\n\t *\n\t * @example\n\t * ```\n\t *\n\t * {\n\t *   decode: function(val) { return parseInt(val, 10); },\n\t *   encode: function(val) { return val && val.toString(); },\n\t *   equals: function(a, b) { return this.is(a) && a === b; },\n\t *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n\t *   pattern: /\\d+/\n\t * }\n\t * ```\n\t */\n\tvar ParamType = (function () {\n\t    /**\n\t     * @param def  A configuration object which contains the custom type definition.  The object's\n\t     *        properties will override the default methods and/or pattern in `ParamType`'s public interface.\n\t     * @returns a new ParamType object\n\t     */\n\t    function ParamType(def) {\n\t        this.pattern = /.*/;\n\t        common_1.extend(this, def);\n\t    }\n\t    // consider these four methods to be \"abstract methods\" that should be overridden\n\t    /** @inheritdoc */\n\t    ParamType.prototype.is = function (val, key) { return true; };\n\t    /** @inheritdoc */\n\t    ParamType.prototype.encode = function (val, key) { return val; };\n\t    /** @inheritdoc */\n\t    ParamType.prototype.decode = function (val, key) { return val; };\n\t    /** @inheritdoc */\n\t    ParamType.prototype.equals = function (a, b) { return a == b; };\n\t    ParamType.prototype.$subPattern = function () {\n\t        var sub = this.pattern.toString();\n\t        return sub.substr(1, sub.length - 2);\n\t    };\n\t    ParamType.prototype.toString = function () {\n\t        return \"{ParamType:\" + this.name + \"}\";\n\t    };\n\t    /** Given an encoded string, or a decoded object, returns a decoded object */\n\t    ParamType.prototype.$normalize = function (val) {\n\t        return this.is(val) ? val : this.decode(val);\n\t    };\n\t    /**\n\t     * Wraps an existing custom ParamType as an array of ParamType, depending on 'mode'.\n\t     * e.g.:\n\t     * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n\t     * - url: \"/path?queryParam=1&queryParam=2\n\t     * - $stateParams.queryParam will be [1, 2]\n\t     * if `mode` is \"auto\", then\n\t     * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n\t     * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n\t     */\n\t    ParamType.prototype.$asArray = function (mode, isSearch) {\n\t        if (!mode)\n\t            return this;\n\t        if (mode === \"auto\" && !isSearch)\n\t            throw new Error(\"'auto' array mode is for query parameters only\");\n\t        return new ArrayType(this, mode);\n\t    };\n\t    return ParamType;\n\t}());\n\texports.ParamType = ParamType;\n\t//# sourceMappingURL=type.js.map\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module core */ /** */\n\tvar urlMatcherFactory_1 = __webpack_require__(26);\n\tvar urlRouter_1 = __webpack_require__(29);\n\tvar urlRouter_2 = __webpack_require__(29);\n\tvar transitionService_1 = __webpack_require__(30);\n\tvar view_1 = __webpack_require__(37);\n\tvar stateRegistry_1 = __webpack_require__(38);\n\tvar stateService_1 = __webpack_require__(43);\n\tvar globals_1 = __webpack_require__(44);\n\t/**\n\t * The master class used to instantiate an instance of UI-Router.\n\t *\n\t * UI-Router (for a specific framework) will create an instance of this class during bootstrap.\n\t * This class instantiates and wires the UI-Router services together.\n\t *\n\t * After a new instance of the UIRouter class is created, it should be configured for your app.\n\t * For instance, app states should be registered with the [[stateRegistry]].\n\t *\n\t * Tell UI-Router to monitor the URL by calling `uiRouter.urlRouter.listen()` ([[UrlRouter.listen]])\n\t */\n\tvar UIRouter = (function () {\n\t    function UIRouter() {\n\t        this.viewService = new view_1.ViewService();\n\t        this.transitionService = new transitionService_1.TransitionService(this);\n\t        this.globals = new globals_1.Globals(this.transitionService);\n\t        this.urlMatcherFactory = new urlMatcherFactory_1.UrlMatcherFactory();\n\t        this.urlRouterProvider = new urlRouter_1.UrlRouterProvider(this.urlMatcherFactory, this.globals.params);\n\t        this.urlRouter = new urlRouter_2.UrlRouter(this.urlRouterProvider);\n\t        this.stateRegistry = new stateRegistry_1.StateRegistry(this.urlMatcherFactory, this.urlRouterProvider);\n\t        this.stateService = new stateService_1.StateService(this);\n\t        this.viewService.rootContext(this.stateRegistry.root());\n\t        this.globals.$current = this.stateRegistry.root();\n\t        this.globals.current = this.globals.$current.self;\n\t    }\n\t    return UIRouter;\n\t}());\n\texports.UIRouter = UIRouter;\n\t//# sourceMappingURL=router.js.map\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module url */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar predicates_1 = __webpack_require__(4);\n\tvar urlMatcher_1 = __webpack_require__(27);\n\tvar urlMatcherConfig_1 = __webpack_require__(23);\n\tvar param_1 = __webpack_require__(22);\n\tvar paramTypes_1 = __webpack_require__(28);\n\t/** @hidden */\n\tfunction getDefaultConfig() {\n\t    return {\n\t        strict: urlMatcherConfig_1.matcherConfig.strictMode(),\n\t        caseInsensitive: urlMatcherConfig_1.matcherConfig.caseInsensitive()\n\t    };\n\t}\n\t/**\n\t * Factory for [[UrlMatcher]] instances.\n\t *\n\t * The factory is available to ng1 services as\n\t * `$urlMatcherFactor` or ng1 providers as `$urlMatcherFactoryProvider`.\n\t */\n\tvar UrlMatcherFactory = (function () {\n\t    function UrlMatcherFactory() {\n\t        this.paramTypes = new paramTypes_1.ParamTypes();\n\t        common_1.extend(this, { UrlMatcher: urlMatcher_1.UrlMatcher, Param: param_1.Param });\n\t    }\n\t    /**\n\t     * Defines whether URL matching should be case sensitive (the default behavior), or not.\n\t     *\n\t     * @param value `false` to match URL in a case sensitive manner; otherwise `true`;\n\t     * @returns the current value of caseInsensitive\n\t     */\n\t    UrlMatcherFactory.prototype.caseInsensitive = function (value) {\n\t        return urlMatcherConfig_1.matcherConfig.caseInsensitive(value);\n\t    };\n\t    /**\n\t     * Defines whether URLs should match trailing slashes, or not (the default behavior).\n\t     *\n\t     * @param value `false` to match trailing slashes in URLs, otherwise `true`.\n\t     * @returns the current value of strictMode\n\t     */\n\t    UrlMatcherFactory.prototype.strictMode = function (value) {\n\t        return urlMatcherConfig_1.matcherConfig.strictMode(value);\n\t    };\n\t    /**\n\t     * Sets the default behavior when generating or matching URLs with default parameter values.\n\t     *\n\t     * @param value A string that defines the default parameter URL squashing behavior.\n\t     *    - `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n\t     *    - `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n\t     *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n\t     *    - any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n\t     *             the parameter value from the URL and replace it with this string.\n\t     * @returns the current value of defaultSquashPolicy\n\t     */\n\t    UrlMatcherFactory.prototype.defaultSquashPolicy = function (value) {\n\t        return urlMatcherConfig_1.matcherConfig.defaultSquashPolicy(value);\n\t    };\n\t    /**\n\t     * Creates a [[UrlMatcher]] for the specified pattern.\n\t     *\n\t     * @param pattern  The URL pattern.\n\t     * @param config  The config object hash.\n\t     * @returns The UrlMatcher.\n\t     */\n\t    UrlMatcherFactory.prototype.compile = function (pattern, config) {\n\t        return new urlMatcher_1.UrlMatcher(pattern, this.paramTypes, common_1.extend(getDefaultConfig(), config));\n\t    };\n\t    /**\n\t     * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n\t     *\n\t     * @param object  The object to perform the type check against.\n\t     * @returns `true` if the object matches the `UrlMatcher` interface, by\n\t     *          implementing all the same methods.\n\t     */\n\t    UrlMatcherFactory.prototype.isMatcher = function (object) {\n\t        // TODO: typeof?\n\t        if (!predicates_1.isObject(object))\n\t            return false;\n\t        var result = true;\n\t        common_1.forEach(urlMatcher_1.UrlMatcher.prototype, function (val, name) {\n\t            if (predicates_1.isFunction(val))\n\t                result = result && (predicates_1.isDefined(object[name]) && predicates_1.isFunction(object[name]));\n\t        });\n\t        return result;\n\t    };\n\t    ;\n\t    /**\n\t     * Creates and registers a custom [[ParamType]] object\n\t     *\n\t     * A [[ParamType]] can be used to generate URLs with typed parameters.\n\t     *\n\t     * @param name  The type name.\n\t     * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n\t     * @param definitionFn A function that is injected before the app runtime starts.\n\t     *        The result of this function should be a [[ParamTypeDefinition]].\n\t     *        The result is merged into the existing `definition`.\n\t     *        See [[ParamType]] for information on the values accepted.\n\t     *\n\t     * @returns - if a type was registered: the [[UrlMatcherFactory]]\n\t     *   - if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n\t     *\n\t     * Note: Register custom types *before using them* in a state definition.\n\t     *\n\t     * See [[ParamTypeDefinition]] for examples\n\t     */\n\t    UrlMatcherFactory.prototype.type = function (name, definition, definitionFn) {\n\t        var type = this.paramTypes.type(name, definition, definitionFn);\n\t        return !predicates_1.isDefined(definition) ? type : this;\n\t    };\n\t    ;\n\t    /** @hidden */\n\t    UrlMatcherFactory.prototype.$get = function () {\n\t        this.paramTypes.enqueue = false;\n\t        this.paramTypes._flushTypeQueue();\n\t        return this;\n\t    };\n\t    ;\n\t    return UrlMatcherFactory;\n\t}());\n\texports.UrlMatcherFactory = UrlMatcherFactory;\n\t//# sourceMappingURL=urlMatcherFactory.js.map\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module url */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar hof_1 = __webpack_require__(5);\n\tvar predicates_1 = __webpack_require__(4);\n\tvar param_1 = __webpack_require__(22);\n\tvar predicates_2 = __webpack_require__(4);\n\tvar param_2 = __webpack_require__(22);\n\tvar common_2 = __webpack_require__(3);\n\tvar common_3 = __webpack_require__(3);\n\t/** @hidden */\n\tfunction quoteRegExp(string, param) {\n\t    var surroundPattern = ['', ''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n\t    if (!param)\n\t        return result;\n\t    switch (param.squash) {\n\t        case false:\n\t            surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')];\n\t            break;\n\t        case true:\n\t            result = result.replace(/\\/$/, '');\n\t            surroundPattern = ['(?:\\/(', ')|\\/)?'];\n\t            break;\n\t        default:\n\t            surroundPattern = [(\"(\" + param.squash + \"|\"), ')?'];\n\t            break;\n\t    }\n\t    return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n\t}\n\t/** @hidden */\n\tvar memoizeTo = function (obj, prop, fn) {\n\t    return obj[prop] = obj[prop] || fn();\n\t};\n\t/**\n\t * Matches URLs against patterns.\n\t *\n\t * Matches URLs against patterns and extracts named parameters from the path or the search\n\t * part of the URL.\n\t *\n\t * A URL pattern consists of a path pattern, optionally followed by '?' and a list of search (query)\n\t * parameters. Multiple search parameter names are separated by '&'. Search parameters\n\t * do not influence whether or not a URL is matched, but their values are passed through into\n\t * the matched parameters returned by [[UrlMatcher.exec]].\n\t *\n\t * - *Path parameters* are defined using curly brace placeholders (`/somepath/{param}`)\n\t * or colon placeholders (`/somePath/:param`).\n\t *\n\t * - *A parameter RegExp* may be defined for a param after a colon\n\t * (`/somePath/{param:[a-zA-Z0-9]+}`) in a curly brace placeholder.\n\t * The regexp must match for the url to be matched.\n\t * Should the regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n\t * Note that a RegExp parameter will encode its value with `string` ParamType encoding: \"/\" as \"~2F\", and \"~\" as \"~~\".\n\t * When matching these characters, use the encoded versions in the regexp.\n\t * See issue [#2540](https://github.com/angular-ui/ui-router/issues/2540) for more information.\n\t *\n\t * - *Custom parameter types* may also be specified after a colon (`/somePath/{param:int}`)\n\t * in curly brace parameters.  See [[UrlMatcherFactory.type]] for more information.\n\t *\n\t * - *Catch-all parameters* are defined using an asterisk placeholder (`/somepath/*catchallparam`).  A catch-all\n\t * parameter value will contain the remainder of the URL.\n\t *\n\t * ---\n\t *\n\t * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n\t * must be unique within the pattern (across both path and search parameters).\n\t * A path parameter matches any number of characters other than '/'. For catch-all\n\t * placeholders the path parameter matches any number of characters.\n\t *\n\t * Examples:\n\t *\n\t * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n\t *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n\t * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n\t *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n\t * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n\t * * `'/user/{id:[^/]*}'` - Same as the previous example.\n\t * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n\t *   parameter consists of 1 to 8 hex digits.\n\t * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n\t *   path into the parameter 'path'.\n\t * * `'/files/*path'` - ditto.\n\t * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n\t *   in the built-in  `date` ParamType matches `2014-11-12`) and provides a Date object in $stateParams.start\n\t *\n\t */\n\tvar UrlMatcher = (function () {\n\t    /**\n\t     * @param pattern The pattern to compile into a matcher.\n\t     * @param paramTypes The [[ParamTypes]] registry\n\t     * @param config  A configuration object\n\t     * - `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n\t     * - `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n\t     */\n\t    function UrlMatcher(pattern, paramTypes, config) {\n\t        var _this = this;\n\t        this.config = config;\n\t        /** @hidden */\n\t        this._cache = { path: [], pattern: null };\n\t        /** @hidden */\n\t        this._children = [];\n\t        /** @hidden */\n\t        this._params = [];\n\t        /** @hidden */\n\t        this._segments = [];\n\t        /** @hidden */\n\t        this._compiled = [];\n\t        this.pattern = pattern;\n\t        this.config = common_1.defaults(this.config, {\n\t            params: {},\n\t            strict: true,\n\t            caseInsensitive: false,\n\t            paramMap: common_1.identity\n\t        });\n\t        // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n\t        //   '*' name\n\t        //   ':' name\n\t        //   '{' name '}'\n\t        //   '{' name ':' regexp '}'\n\t        // The regular expression is somewhat complicated due to the need to allow curly braces\n\t        // inside the regular expression. The placeholder regexp breaks down as follows:\n\t        //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n\t        //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n\t        //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n\t        //    [^{}\\\\]+                       - anything other than curly braces or backslash\n\t        //    \\\\.                            - a backslash escape\n\t        //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n\t        var placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g, searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g, last = 0, m, patterns = [];\n\t        var checkParamErrors = function (id) {\n\t            if (!UrlMatcher.nameValidator.test(id))\n\t                throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n\t            if (common_1.find(_this._params, hof_1.propEq('id', id)))\n\t                throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n\t        };\n\t        // Split into static segments separated by path parameter placeholders.\n\t        // The number of segments is always 1 more than the number of parameters.\n\t        var matchDetails = function (m, isSearch) {\n\t            // IE[78] returns '' for unmatched groups instead of null\n\t            var id = m[2] || m[3], regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '.*' : null);\n\t            return {\n\t                id: id,\n\t                regexp: regexp,\n\t                cfg: _this.config.params[id],\n\t                segment: pattern.substring(last, m.index),\n\t                type: !regexp ? null : paramTypes.type(regexp || \"string\") || common_1.inherit(paramTypes.type(\"string\"), {\n\t                    pattern: new RegExp(regexp, _this.config.caseInsensitive ? 'i' : undefined)\n\t                })\n\t            };\n\t        };\n\t        var p, segment;\n\t        while ((m = placeholder.exec(pattern))) {\n\t            p = matchDetails(m, false);\n\t            if (p.segment.indexOf('?') >= 0)\n\t                break; // we're into the search part\n\t            checkParamErrors(p.id);\n\t            this._params.push(param_1.Param.fromPath(p.id, p.type, this.config.paramMap(p.cfg, false), paramTypes));\n\t            this._segments.push(p.segment);\n\t            patterns.push([p.segment, common_1.tail(this._params)]);\n\t            last = placeholder.lastIndex;\n\t        }\n\t        segment = pattern.substring(last);\n\t        // Find any search parameter names and remove them from the last segment\n\t        var i = segment.indexOf('?');\n\t        if (i >= 0) {\n\t            var search = segment.substring(i);\n\t            segment = segment.substring(0, i);\n\t            if (search.length > 0) {\n\t                last = 0;\n\t                while ((m = searchPlaceholder.exec(search))) {\n\t                    p = matchDetails(m, true);\n\t                    checkParamErrors(p.id);\n\t                    this._params.push(param_1.Param.fromSearch(p.id, p.type, this.config.paramMap(p.cfg, true), paramTypes));\n\t                    last = placeholder.lastIndex;\n\t                }\n\t            }\n\t        }\n\t        this._segments.push(segment);\n\t        common_1.extend(this, {\n\t            _compiled: patterns.map(function (pattern) { return quoteRegExp.apply(null, pattern); }).concat(quoteRegExp(segment)),\n\t            prefix: this._segments[0]\n\t        });\n\t        Object.freeze(this);\n\t    }\n\t    /**\n\t     * Creates a new concatenated UrlMatcher\n\t     *\n\t     * Builds a new UrlMatcher by appending another UrlMatcher to this one.\n\t     *\n\t     * @param url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n\t     */\n\t    UrlMatcher.prototype.append = function (url) {\n\t        this._children.push(url);\n\t        common_1.forEach(url._cache, function (val, key) { return url._cache[key] = predicates_1.isArray(val) ? [] : null; });\n\t        url._cache.path = this._cache.path.concat(this);\n\t        return url;\n\t    };\n\t    /** @hidden */\n\t    UrlMatcher.prototype.isRoot = function () {\n\t        return this._cache.path.length === 0;\n\t    };\n\t    /** Returns the input pattern string */\n\t    UrlMatcher.prototype.toString = function () {\n\t        return this.pattern;\n\t    };\n\t    /**\n\t     * Tests the specified url/path against this matcher.\n\t     *\n\t     * Tests if the given url matches this matcher's pattern, and returns an object containing the captured\n\t     * parameter values.  Returns null if the path does not match.\n\t     *\n\t     * The returned object contains the values\n\t     * of any search parameters that are mentioned in the pattern, but their value may be null if\n\t     * they are not present in `search`. This means that search parameters are always treated\n\t     * as optional.\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n\t     *   x: '1', q: 'hello'\n\t     * });\n\t     * // returns { id: 'bob', q: 'hello', r: null }\n\t     * ```\n\t     *\n\t     * @param path    The URL path to match, e.g. `$location.path()`.\n\t     * @param search  URL search parameters, e.g. `$location.search()`.\n\t     * @param hash    URL hash e.g. `$location.hash()`.\n\t     * @param options\n\t     *\n\t     * @returns The captured parameter values.\n\t     */\n\t    UrlMatcher.prototype.exec = function (path, search, hash, options) {\n\t        var _this = this;\n\t        if (search === void 0) { search = {}; }\n\t        if (options === void 0) { options = {}; }\n\t        var match = memoizeTo(this._cache, 'pattern', function () {\n\t            return new RegExp([\n\t                '^',\n\t                common_1.unnest(_this._cache.path.concat(_this).map(hof_1.prop('_compiled'))).join(''),\n\t                _this.config.strict === false ? '\\/?' : '',\n\t                '$'\n\t            ].join(''), _this.config.caseInsensitive ? 'i' : undefined);\n\t        }).exec(path);\n\t        if (!match)\n\t            return null;\n\t        //options = defaults(options, { isolate: false });\n\t        var allParams = this.parameters(), pathParams = allParams.filter(function (param) { return !param.isSearch(); }), searchParams = allParams.filter(function (param) { return param.isSearch(); }), nPathSegments = this._cache.path.concat(this).map(function (urlm) { return urlm._segments.length - 1; }).reduce(function (a, x) { return a + x; }), values = {};\n\t        if (nPathSegments !== match.length - 1)\n\t            throw new Error(\"Unbalanced capture group in route '\" + this.pattern + \"'\");\n\t        function decodePathArray(string) {\n\t            var reverseString = function (str) { return str.split(\"\").reverse().join(\"\"); };\n\t            var unquoteDashes = function (str) { return str.replace(/\\\\-/g, \"-\"); };\n\t            var split = reverseString(string).split(/-(?!\\\\)/);\n\t            var allReversed = common_1.map(split, reverseString);\n\t            return common_1.map(allReversed, unquoteDashes).reverse();\n\t        }\n\t        for (var i = 0; i < nPathSegments; i++) {\n\t            var param = pathParams[i];\n\t            var value = match[i + 1];\n\t            // if the param value matches a pre-replace pair, replace the value before decoding.\n\t            for (var j = 0; j < param.replace.length; j++) {\n\t                if (param.replace[j].from === value)\n\t                    value = param.replace[j].to;\n\t            }\n\t            if (value && param.array === true)\n\t                value = decodePathArray(value);\n\t            if (predicates_2.isDefined(value))\n\t                value = param.type.decode(value);\n\t            values[param.id] = param.value(value);\n\t        }\n\t        searchParams.forEach(function (param) {\n\t            var value = search[param.id];\n\t            for (var j = 0; j < param.replace.length; j++) {\n\t                if (param.replace[j].from === value)\n\t                    value = param.replace[j].to;\n\t            }\n\t            if (predicates_2.isDefined(value))\n\t                value = param.type.decode(value);\n\t            values[param.id] = param.value(value);\n\t        });\n\t        if (hash)\n\t            values[\"#\"] = hash;\n\t        return values;\n\t    };\n\t    /**\n\t     * @hidden\n\t     * Returns all the [[Param]] objects of all path and search parameters of this pattern in order of appearance.\n\t     *\n\t     * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n\t     *    pattern has no parameters, an empty array is returned.\n\t     */\n\t    UrlMatcher.prototype.parameters = function (opts) {\n\t        if (opts === void 0) { opts = {}; }\n\t        if (opts.inherit === false)\n\t            return this._params;\n\t        return common_1.unnest(this._cache.path.concat(this).map(hof_1.prop('_params')));\n\t    };\n\t    /**\n\t     * @hidden\n\t     * Returns a single parameter from this UrlMatcher by id\n\t     *\n\t     * @param id\n\t     * @param opts\n\t     * @returns {T|Param|any|boolean|UrlMatcher|null}\n\t     */\n\t    UrlMatcher.prototype.parameter = function (id, opts) {\n\t        if (opts === void 0) { opts = {}; }\n\t        var parent = common_1.tail(this._cache.path);\n\t        return (common_1.find(this._params, hof_1.propEq('id', id)) ||\n\t            (opts.inherit !== false && parent && parent.parameter(id)) ||\n\t            null);\n\t    };\n\t    /**\n\t     * Validates the input parameter values against this UrlMatcher\n\t     *\n\t     * Checks an object hash of parameters to validate their correctness according to the parameter\n\t     * types of this `UrlMatcher`.\n\t     *\n\t     * @param params The object hash of parameters to validate.\n\t     * @returns Returns `true` if `params` validates, otherwise `false`.\n\t     */\n\t    UrlMatcher.prototype.validates = function (params) {\n\t        var _this = this;\n\t        var validParamVal = function (param, val) {\n\t            return !param || param.validates(val);\n\t        };\n\t        return common_1.pairs(params || {}).map(function (_a) {\n\t            var key = _a[0], val = _a[1];\n\t            return validParamVal(_this.parameter(key), val);\n\t        }).reduce(common_1.allTrueR, true);\n\t    };\n\t    /**\n\t     * Given a set of parameter values, creates a URL from this UrlMatcher.\n\t     *\n\t     * Creates a URL that matches this pattern by substituting the specified values\n\t     * for the path and search parameters.\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n\t     * // returns '/user/bob?q=yes'\n\t     * ```\n\t     *\n\t     * @param values  the values to substitute for the parameters in this pattern.\n\t     * @returns the formatted URL (path and optionally search part).\n\t     */\n\t    UrlMatcher.prototype.format = function (values) {\n\t        if (values === void 0) { values = {}; }\n\t        if (!this.validates(values))\n\t            return null;\n\t        // Build the full path of UrlMatchers (including all parent UrlMatchers)\n\t        var urlMatchers = this._cache.path.slice().concat(this);\n\t        // Extract all the static segments and Params into an ordered array\n\t        var pathSegmentsAndParams = urlMatchers.map(UrlMatcher.pathSegmentsAndParams).reduce(common_2.unnestR, []);\n\t        // Extract the query params into a separate array\n\t        var queryParams = urlMatchers.map(UrlMatcher.queryParams).reduce(common_2.unnestR, []);\n\t        /**\n\t         * Given a Param,\n\t         * Applies the parameter value, then returns details about it\n\t         */\n\t        function getDetails(param) {\n\t            // Normalize to typed value\n\t            var value = param.value(values[param.id]);\n\t            var isDefaultValue = param.isDefaultValue(value);\n\t            // Check if we're in squash mode for the parameter\n\t            var squash = isDefaultValue ? param.squash : false;\n\t            // Allow the Parameter's Type to encode the value\n\t            var encoded = param.type.encode(value);\n\t            return { param: param, value: value, isDefaultValue: isDefaultValue, squash: squash, encoded: encoded };\n\t        }\n\t        // Build up the path-portion from the list of static segments and parameters\n\t        var pathString = pathSegmentsAndParams.reduce(function (acc, x) {\n\t            // The element is a static segment (a raw string); just append it\n\t            if (predicates_1.isString(x))\n\t                return acc + x;\n\t            // Otherwise, it's a Param.  Fetch details about the parameter value\n\t            var _a = getDetails(x), squash = _a.squash, encoded = _a.encoded, param = _a.param;\n\t            // If squash is === true, try to remove a slash from the path\n\t            if (squash === true)\n\t                return (acc.match(/\\/$/)) ? acc.slice(0, -1) : acc;\n\t            // If squash is a string, use the string for the param value\n\t            if (predicates_1.isString(squash))\n\t                return acc + squash;\n\t            if (squash !== false)\n\t                return acc; // ?\n\t            if (encoded == null)\n\t                return acc;\n\t            // If this parameter value is an array, encode the value using encodeDashes\n\t            if (predicates_1.isArray(encoded))\n\t                return acc + common_1.map(encoded, UrlMatcher.encodeDashes).join(\"-\");\n\t            // If the parameter type is \"raw\", then do not encodeURIComponent\n\t            if (param.type.raw)\n\t                return acc + encoded;\n\t            // Encode the value\n\t            return acc + encodeURIComponent(encoded);\n\t        }, \"\");\n\t        // Build the query string by applying parameter values (array or regular)\n\t        // then mapping to key=value, then flattening and joining using \"&\"\n\t        var queryString = queryParams.map(function (param) {\n\t            var _a = getDetails(param), squash = _a.squash, encoded = _a.encoded, isDefaultValue = _a.isDefaultValue;\n\t            if (encoded == null || (isDefaultValue && squash !== false))\n\t                return;\n\t            if (!predicates_1.isArray(encoded))\n\t                encoded = [encoded];\n\t            if (encoded.length === 0)\n\t                return;\n\t            if (!param.type.raw)\n\t                encoded = common_1.map(encoded, encodeURIComponent);\n\t            return encoded.map(function (val) { return (param.id + \"=\" + val); });\n\t        }).filter(common_1.identity).reduce(common_2.unnestR, []).join(\"&\");\n\t        // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n\t        return pathString + (queryString ? \"?\" + queryString : \"\") + (values[\"#\"] ? \"#\" + values[\"#\"] : \"\");\n\t    };\n\t    /** @hidden */\n\t    UrlMatcher.encodeDashes = function (str) {\n\t        return encodeURIComponent(str).replace(/-/g, function (c) { return (\"%5C%\" + c.charCodeAt(0).toString(16).toUpperCase()); });\n\t    };\n\t    /** @hidden Given a matcher, return an array with the matcher's path segments and path params, in order */\n\t    UrlMatcher.pathSegmentsAndParams = function (matcher) {\n\t        var staticSegments = matcher._segments;\n\t        var pathParams = matcher._params.filter(function (p) { return p.location === param_2.DefType.PATH; });\n\t        return common_3.arrayTuples(staticSegments, pathParams.concat(undefined)).reduce(common_2.unnestR, []).filter(function (x) { return x !== \"\" && predicates_2.isDefined(x); });\n\t    };\n\t    /** @hidden Given a matcher, return an array with the matcher's query params */\n\t    UrlMatcher.queryParams = function (matcher) {\n\t        return matcher._params.filter(function (p) { return p.location === param_2.DefType.SEARCH; });\n\t    };\n\t    /** @hidden */\n\t    UrlMatcher.nameValidator = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n\t    return UrlMatcher;\n\t}());\n\texports.UrlMatcher = UrlMatcher;\n\t//# sourceMappingURL=urlMatcher.js.map\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module params */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar predicates_1 = __webpack_require__(4);\n\tvar hof_1 = __webpack_require__(5);\n\tvar coreservices_1 = __webpack_require__(6);\n\tvar type_1 = __webpack_require__(24);\n\t// Use tildes to pre-encode slashes.\n\t// If the slashes are simply URLEncoded, the browser can choose to pre-decode them,\n\t// and bidirectional encoding/decoding fails.\n\t// Tilde was chosen because it's not a RFC 3986 section 2.2 Reserved Character\n\tfunction valToString(val) { return val != null ? val.toString().replace(/(~|\\/)/g, function (m) { return ({ '~': '~~', '/': '~2F' }[m]); }) : val; }\n\tfunction valFromString(val) { return val != null ? val.toString().replace(/(~~|~2F)/g, function (m) { return ({ '~~': '~', '~2F': '/' }[m]); }) : val; }\n\tvar ParamTypes = (function () {\n\t    function ParamTypes() {\n\t        this.enqueue = true;\n\t        this.typeQueue = [];\n\t        this.defaultTypes = {\n\t            \"hash\": {\n\t                encode: valToString,\n\t                decode: valFromString,\n\t                is: hof_1.is(String),\n\t                pattern: /.*/,\n\t                equals: function (a, b) { return a == b; } // allow coersion for null/undefined/\"\"\n\t            },\n\t            \"string\": {\n\t                encode: valToString,\n\t                decode: valFromString,\n\t                is: hof_1.is(String),\n\t                pattern: /[^/]*/\n\t            },\n\t            \"int\": {\n\t                encode: valToString,\n\t                decode: function (val) { return parseInt(val, 10); },\n\t                is: function (val) { return predicates_1.isDefined(val) && this.decode(val.toString()) === val; },\n\t                pattern: /-?\\d+/\n\t            },\n\t            \"bool\": {\n\t                encode: function (val) { return val && 1 || 0; },\n\t                decode: function (val) { return parseInt(val, 10) !== 0; },\n\t                is: hof_1.is(Boolean),\n\t                pattern: /0|1/\n\t            },\n\t            \"date\": {\n\t                encode: function (val) {\n\t                    return !this.is(val) ? undefined : [\n\t                        val.getFullYear(),\n\t                        ('0' + (val.getMonth() + 1)).slice(-2),\n\t                        ('0' + val.getDate()).slice(-2)\n\t                    ].join(\"-\");\n\t                },\n\t                decode: function (val) {\n\t                    if (this.is(val))\n\t                        return val;\n\t                    var match = this.capture.exec(val);\n\t                    return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n\t                },\n\t                is: function (val) { return val instanceof Date && !isNaN(val.valueOf()); },\n\t                equals: function (l, r) {\n\t                    return ['getFullYear', 'getMonth', 'getDate']\n\t                        .reduce(function (acc, fn) { return acc && l[fn]() === r[fn](); }, true);\n\t                },\n\t                pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n\t                capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n\t            },\n\t            \"json\": {\n\t                encode: common_1.toJson,\n\t                decode: common_1.fromJson,\n\t                is: hof_1.is(Object),\n\t                equals: common_1.equals,\n\t                pattern: /[^/]*/\n\t            },\n\t            \"any\": {\n\t                encode: common_1.identity,\n\t                decode: common_1.identity,\n\t                equals: common_1.equals,\n\t                pattern: /.*/\n\t            }\n\t        };\n\t        // Register default types. Store them in the prototype of this.types.\n\t        var makeType = function (definition, name) { return new type_1.ParamType(common_1.extend({ name: name }, definition)); };\n\t        this.types = common_1.inherit(common_1.map(this.defaultTypes, makeType), {});\n\t    }\n\t    ParamTypes.prototype.type = function (name, definition, definitionFn) {\n\t        if (!predicates_1.isDefined(definition))\n\t            return this.types[name];\n\t        if (this.types.hasOwnProperty(name))\n\t            throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n\t        this.types[name] = new type_1.ParamType(common_1.extend({ name: name }, definition));\n\t        if (definitionFn) {\n\t            this.typeQueue.push({ name: name, def: definitionFn });\n\t            if (!this.enqueue)\n\t                this._flushTypeQueue();\n\t        }\n\t        return this;\n\t    };\n\t    ParamTypes.prototype._flushTypeQueue = function () {\n\t        while (this.typeQueue.length) {\n\t            var type = this.typeQueue.shift();\n\t            if (type.pattern)\n\t                throw new Error(\"You cannot override a type's .pattern at runtime.\");\n\t            common_1.extend(this.types[type.name], coreservices_1.services.$injector.invoke(type.def));\n\t        }\n\t    };\n\t    return ParamTypes;\n\t}());\n\texports.ParamTypes = ParamTypes;\n\t//# sourceMappingURL=paramTypes.js.map\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module url */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar predicates_1 = __webpack_require__(4);\n\tvar coreservices_1 = __webpack_require__(6);\n\t/** @hidden */\n\tvar $location = coreservices_1.services.location;\n\t/** @hidden Returns a string that is a prefix of all strings matching the RegExp */\n\tfunction regExpPrefix(re) {\n\t    var prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n\t    return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n\t}\n\t/** @hidden Interpolates matched values into a String.replace()-style pattern */\n\tfunction interpolate(pattern, match) {\n\t    return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n\t        return match[what === '$' ? 0 : Number(what)];\n\t    });\n\t}\n\t/** @hidden */\n\tfunction handleIfMatch($injector, $stateParams, handler, match) {\n\t    if (!match)\n\t        return false;\n\t    var result = $injector.invoke(handler, handler, { $match: match, $stateParams: $stateParams });\n\t    return predicates_1.isDefined(result) ? result : true;\n\t}\n\t/** @hidden */\n\tfunction appendBasePath(url, isHtml5, absolute) {\n\t    var baseHref = coreservices_1.services.locationConfig.baseHref();\n\t    if (baseHref === '/')\n\t        return url;\n\t    if (isHtml5)\n\t        return baseHref.slice(0, -1) + url;\n\t    if (absolute)\n\t        return baseHref.slice(1) + url;\n\t    return url;\n\t}\n\t// TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\n\t/** @hidden */\n\tfunction update(rules, otherwiseFn, evt) {\n\t    if (evt && evt.defaultPrevented)\n\t        return;\n\t    function check(rule) {\n\t        var handled = rule(coreservices_1.services.$injector, $location);\n\t        if (!handled)\n\t            return false;\n\t        if (predicates_1.isString(handled)) {\n\t            $location.setUrl(handled, true);\n\t        }\n\t        return true;\n\t    }\n\t    var n = rules.length;\n\t    for (var i = 0; i < n; i++) {\n\t        if (check(rules[i]))\n\t            return;\n\t    }\n\t    // always check otherwise last to allow dynamic updates to the set of rules\n\t    if (otherwiseFn)\n\t        check(otherwiseFn);\n\t}\n\t/**\n\t * Manages rules for client-side URL\n\t *\n\t * This class manages the router rules for what to do when the URL changes.\n\t */\n\tvar UrlRouterProvider = (function () {\n\t    function UrlRouterProvider($urlMatcherFactory, $stateParams) {\n\t        /** @hidden */\n\t        this.rules = [];\n\t        /** @hidden */\n\t        this.interceptDeferred = false;\n\t        this.$urlMatcherFactory = $urlMatcherFactory;\n\t        this.$stateParams = $stateParams;\n\t    }\n\t    /**\n\t     * Registers a url handler function.\n\t     *\n\t     * Registers a low level url handler (a `rule`). A rule detects specific URL patterns and returns\n\t     * a redirect, or performs some action.\n\t     *\n\t     * If a rule returns a string, the URL is replaced with the string, and all rules are fired again.\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * var app = angular.module('app', ['ui.router.router']);\n\t     *\n\t     * app.config(function ($urlRouterProvider) {\n\t     *   // Here's an example of how you might allow case insensitive urls\n\t     *   $urlRouterProvider.rule(function ($injector, $location) {\n\t     *     var path = $location.path(),\n\t     *         normalized = path.toLowerCase();\n\t     *\n\t     *     if (path !== normalized) {\n\t     *       return normalized;\n\t     *     }\n\t     *   });\n\t     * });\n\t     * ```\n\t     *\n\t     * @param rule\n\t     * Handler function that takes `$injector` and `$location` services as arguments.\n\t     * You can use them to detect a url and return a different url as a string.\n\t     *\n\t     * @return [[$urlRouterProvider]] (`this`)\n\t     */\n\t    UrlRouterProvider.prototype.rule = function (rule) {\n\t        if (!predicates_1.isFunction(rule))\n\t            throw new Error(\"'rule' must be a function\");\n\t        this.rules.push(rule);\n\t        return this;\n\t    };\n\t    ;\n\t    /**\n\t     * Remove a rule previously registered\n\t     *\n\t     * @param rule the matcher rule that was previously registered using [[rule]]\n\t     * @return true if the rule was found (and removed)\n\t     */\n\t    UrlRouterProvider.prototype.removeRule = function (rule) {\n\t        return this.rules.length !== common_1.removeFrom(this.rules, rule).length;\n\t    };\n\t    /**\n\t     * Defines the path or behavior to use when no url can be matched.\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * var app = angular.module('app', ['ui.router.router']);\n\t     *\n\t     * app.config(function ($urlRouterProvider) {\n\t     *   // if the path doesn't match any of the urls you configured\n\t     *   // otherwise will take care of routing the user to the\n\t     *   // specified url\n\t     *   $urlRouterProvider.otherwise('/index');\n\t     *\n\t     *   // Example of using function rule as param\n\t     *   $urlRouterProvider.otherwise(function ($injector, $location) {\n\t     *     return '/a/valid/url';\n\t     *   });\n\t     * });\n\t     * ```\n\t     *\n\t     * @param rule\n\t     * The url path you want to redirect to or a function rule that returns the url path or performs a `$state.go()`.\n\t     * The function version is passed two params: `$injector` and `$location` services, and should return a url string.\n\t     *\n\t     * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n\t     */\n\t    UrlRouterProvider.prototype.otherwise = function (rule) {\n\t        if (!predicates_1.isFunction(rule) && !predicates_1.isString(rule))\n\t            throw new Error(\"'rule' must be a string or function\");\n\t        this.otherwiseFn = predicates_1.isString(rule) ? function () { return rule; } : rule;\n\t        return this;\n\t    };\n\t    ;\n\t    /**\n\t     * Registers a handler for a given url matching.\n\t     *\n\t     * If the handler is a string, it is\n\t     * treated as a redirect, and is interpolated according to the syntax of match\n\t     * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n\t     *\n\t     * If the handler is a function, it is injectable.\n\t     * It gets invoked if `$location` matches.\n\t     * You have the option of inject the match object as `$match`.\n\t     *\n\t     * The handler can return\n\t     *\n\t     * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n\t     *   will continue trying to find another one that matches.\n\t     * - **string** which is treated as a redirect and passed to `$location.url()`\n\t     * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n\t     *\n\t     * @example\n\t     * ```js\n\t     *\n\t     * var app = angular.module('app', ['ui.router.router']);\n\t     *\n\t     * app.config(function ($urlRouterProvider) {\n\t     *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n\t     *     if ($state.$current.navigable !== state ||\n\t     *         !equalForKeys($match, $stateParams) {\n\t     *      $state.transitionTo(state, $match, false);\n\t     *     }\n\t     *   });\n\t     * });\n\t     * ```\n\t     *\n\t     * @param what A pattern string to match, compiled as a [[UrlMatcher]].\n\t     * @param handler The path (or function that returns a path) that you want to redirect your user to.\n\t     * @param ruleCallback [optional] A callback that receives the `rule` registered with [[UrlMatcher.rule]]\n\t     *\n\t     * Note: the handler may also invoke arbitrary code, such as `$state.go()`\n\t     */\n\t    UrlRouterProvider.prototype.when = function (what, handler, ruleCallback) {\n\t        if (ruleCallback === void 0) { ruleCallback = function (rule) { }; }\n\t        var _a = this, $urlMatcherFactory = _a.$urlMatcherFactory, $stateParams = _a.$stateParams;\n\t        var redirect, handlerIsString = predicates_1.isString(handler);\n\t        // @todo Queue this\n\t        if (predicates_1.isString(what))\n\t            what = $urlMatcherFactory.compile(what);\n\t        if (!handlerIsString && !predicates_1.isFunction(handler) && !predicates_1.isArray(handler))\n\t            throw new Error(\"invalid 'handler' in when()\");\n\t        var strategies = {\n\t            matcher: function (_what, _handler) {\n\t                if (handlerIsString) {\n\t                    redirect = $urlMatcherFactory.compile(_handler);\n\t                    _handler = ['$match', redirect.format.bind(redirect)];\n\t                }\n\t                return common_1.extend(function () {\n\t                    return handleIfMatch(coreservices_1.services.$injector, $stateParams, _handler, _what.exec($location.path(), $location.search(), $location.hash()));\n\t                }, {\n\t                    prefix: predicates_1.isString(_what.prefix) ? _what.prefix : ''\n\t                });\n\t            },\n\t            regex: function (_what, _handler) {\n\t                if (_what.global || _what.sticky)\n\t                    throw new Error(\"when() RegExp must not be global or sticky\");\n\t                if (handlerIsString) {\n\t                    redirect = _handler;\n\t                    _handler = ['$match', function ($match) { return interpolate(redirect, $match); }];\n\t                }\n\t                return common_1.extend(function () {\n\t                    return handleIfMatch(coreservices_1.services.$injector, $stateParams, _handler, _what.exec($location.path()));\n\t                }, {\n\t                    prefix: regExpPrefix(_what)\n\t                });\n\t            }\n\t        };\n\t        var check = {\n\t            matcher: $urlMatcherFactory.isMatcher(what),\n\t            regex: what instanceof RegExp\n\t        };\n\t        for (var n in check) {\n\t            if (check[n]) {\n\t                var rule = strategies[n](what, handler);\n\t                ruleCallback(rule);\n\t                return this.rule(rule);\n\t            }\n\t        }\n\t        throw new Error(\"invalid 'what' in when()\");\n\t    };\n\t    ;\n\t    /**\n\t     * Disables monitoring of the URL.\n\t     *\n\t     * Call this method before UI-Router has bootstrapped.\n\t     * It will stop UI-Router from performing the initial url sync.\n\t     *\n\t     * This can be useful to perform some asynchronous initialization before the router starts.\n\t     * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * var app = angular.module('app', ['ui.router']);\n\t     *\n\t     * app.config(function ($urlRouterProvider) {\n\t     *   // Prevent $urlRouter from automatically intercepting URL changes;\n\t     *   $urlRouterProvider.deferIntercept();\n\t     * })\n\t     *\n\t     * app.run(function (MyService, $urlRouter, $http) {\n\t     *   $http.get(\"/stuff\").then(function(resp) {\n\t     *     MyService.doStuff(resp.data);\n\t     *     $urlRouter.listen();\n\t     *     $urlRouter.sync();\n\t     *   });\n\t     * });\n\t     * ```\n\t     *\n\t     * @param defer Indicates whether to defer location change interception. Passing\n\t     *        no parameter is equivalent to `true`.\n\t     */\n\t    UrlRouterProvider.prototype.deferIntercept = function (defer) {\n\t        if (defer === undefined)\n\t            defer = true;\n\t        this.interceptDeferred = defer;\n\t    };\n\t    ;\n\t    return UrlRouterProvider;\n\t}());\n\texports.UrlRouterProvider = UrlRouterProvider;\n\tvar UrlRouter = (function () {\n\t    /** @hidden */\n\t    function UrlRouter(urlRouterProvider) {\n\t        this.urlRouterProvider = urlRouterProvider;\n\t        common_1.bindFunctions(UrlRouter.prototype, this, this);\n\t    }\n\t    /**\n\t     * Checks the current URL for a matching rule\n\t     *\n\t     * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n\t     * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n\t     * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n\t     * with the transition by calling `$urlRouter.sync()`.\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * angular.module('app', ['ui.router'])\n\t     *   .run(function($rootScope, $urlRouter) {\n\t     *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n\t     *       // Halt state change from even starting\n\t     *       evt.preventDefault();\n\t     *       // Perform custom logic\n\t     *       var meetsRequirement = ...\n\t     *       // Continue with the update and state transition if logic allows\n\t     *       if (meetsRequirement) $urlRouter.sync();\n\t     *     });\n\t     * });\n\t     * ```\n\t     */\n\t    UrlRouter.prototype.sync = function () {\n\t        update(this.urlRouterProvider.rules, this.urlRouterProvider.otherwiseFn);\n\t    };\n\t    /**\n\t     * Starts listening for URL changes\n\t     *\n\t     * Call this sometime after calling [[deferIntercept]] to start monitoring the url.\n\t     * This causes [[UrlRouter]] to start listening for changes to the URL, if it wasn't already listening.\n\t     */\n\t    UrlRouter.prototype.listen = function () {\n\t        var _this = this;\n\t        return this.listener = this.listener || $location.onChange(function (evt) { return update(_this.urlRouterProvider.rules, _this.urlRouterProvider.otherwiseFn, evt); });\n\t    };\n\t    /**\n\t     * Internal API.\n\t     */\n\t    UrlRouter.prototype.update = function (read) {\n\t        if (read) {\n\t            this.location = $location.path();\n\t            return;\n\t        }\n\t        if ($location.path() === this.location)\n\t            return;\n\t        $location.setUrl(this.location, true);\n\t    };\n\t    /**\n\t     * Internal API.\n\t     *\n\t     * Pushes a new location to the browser history.\n\t     *\n\t     * @param urlMatcher\n\t     * @param params\n\t     * @param options\n\t     */\n\t    UrlRouter.prototype.push = function (urlMatcher, params, options) {\n\t        var replace = options && !!options.replace;\n\t        $location.setUrl(urlMatcher.format(params || {}), replace);\n\t    };\n\t    /**\n\t     * Builds and returns a URL with interpolated parameters\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n\t     *   person: \"bob\"\n\t     * });\n\t     * // $bob == \"/about/bob\";\n\t     * ```\n\t     *\n\t     * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n\t     * @param params An object of parameter values to fill the matcher's required parameters.\n\t     * @param options Options object. The options are:\n\t     *\n\t     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n\t     *\n\t     * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n\t     */\n\t    UrlRouter.prototype.href = function (urlMatcher, params, options) {\n\t        if (!urlMatcher.validates(params))\n\t            return null;\n\t        var url = urlMatcher.format(params);\n\t        options = options || { absolute: false };\n\t        var cfg = coreservices_1.services.locationConfig;\n\t        var isHtml5 = cfg.html5Mode();\n\t        if (!isHtml5 && url !== null) {\n\t            url = \"#\" + cfg.hashPrefix() + url;\n\t        }\n\t        url = appendBasePath(url, isHtml5, options.absolute);\n\t        if (!options.absolute || !url) {\n\t            return url;\n\t        }\n\t        var slash = (!isHtml5 && url ? '/' : ''), port = cfg.port();\n\t        port = (port === 80 || port === 443 ? '' : ':' + port);\n\t        return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n\t    };\n\t    return UrlRouter;\n\t}());\n\texports.UrlRouter = UrlRouter;\n\t//# sourceMappingURL=urlRouter.js.map\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar transition_1 = __webpack_require__(11);\n\tvar hookRegistry_1 = __webpack_require__(15);\n\tvar resolve_1 = __webpack_require__(31);\n\tvar views_1 = __webpack_require__(32);\n\tvar url_1 = __webpack_require__(33);\n\tvar redirectTo_1 = __webpack_require__(34);\n\tvar onEnterExitRetain_1 = __webpack_require__(35);\n\tvar lazyLoadStates_1 = __webpack_require__(36);\n\t/**\n\t * The default [[Transition]] options.\n\t *\n\t * Include this object when applying custom defaults:\n\t * let reloadOpts = { reload: true, notify: true }\n\t * let options = defaults(theirOpts, customDefaults, defaultOptions);\n\t */\n\texports.defaultTransOpts = {\n\t    location: true,\n\t    relative: null,\n\t    inherit: false,\n\t    notify: true,\n\t    reload: false,\n\t    custom: {},\n\t    current: function () { return null; },\n\t    source: \"unknown\"\n\t};\n\t/**\n\t * This class provides services related to Transitions.\n\t *\n\t * - Most importantly, it allows global Transition Hooks to be registered.\n\t * - It allows the default transition error handler to be set.\n\t * - It also has a factory function for creating new [[Transition]] objects, (used internally by the [[StateService]]).\n\t *\n\t * At bootstrap, [[UIRouter]] creates a single instance (singleton) of this class.\n\t */\n\tvar TransitionService = (function () {\n\t    function TransitionService(_router) {\n\t        this._router = _router;\n\t        this.$view = _router.viewService;\n\t        hookRegistry_1.HookRegistry.mixin(new hookRegistry_1.HookRegistry(), this);\n\t        this._deregisterHookFns = {};\n\t        this.registerTransitionHooks();\n\t    }\n\t    /** @hidden */\n\t    TransitionService.prototype.registerTransitionHooks = function () {\n\t        var fns = this._deregisterHookFns;\n\t        // Wire up redirectTo hook\n\t        fns.redirectTo = redirectTo_1.registerRedirectToHook(this);\n\t        // Wire up onExit/Retain/Enter state hooks\n\t        fns.onExit = onEnterExitRetain_1.registerOnExitHook(this);\n\t        fns.onRetain = onEnterExitRetain_1.registerOnRetainHook(this);\n\t        fns.onEnter = onEnterExitRetain_1.registerOnEnterHook(this);\n\t        // Wire up Resolve hooks\n\t        fns.eagerResolve = resolve_1.registerEagerResolvePath(this);\n\t        fns.lazyResolve = resolve_1.registerLazyResolveState(this);\n\t        // Wire up the View management hooks\n\t        fns.loadViews = views_1.registerLoadEnteringViews(this);\n\t        fns.activateViews = views_1.registerActivateViews(this);\n\t        // After globals.current is updated at priority: 10000\n\t        fns.updateUrl = url_1.registerUpdateUrl(this);\n\t        // Lazy load state trees\n\t        fns.lazyLoad = lazyLoadStates_1.registerLazyLoadHook(this);\n\t    };\n\t    /** @inheritdoc */\n\t    TransitionService.prototype.onBefore = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    /** @inheritdoc */\n\t    TransitionService.prototype.onStart = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    /** @inheritdoc */\n\t    TransitionService.prototype.onExit = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    /** @inheritdoc */\n\t    TransitionService.prototype.onRetain = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    /** @inheritdoc */\n\t    TransitionService.prototype.onEnter = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    /** @inheritdoc */\n\t    TransitionService.prototype.onFinish = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    /** @inheritdoc */\n\t    TransitionService.prototype.onSuccess = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    /** @inheritdoc */\n\t    TransitionService.prototype.onError = function (matchCriteria, callback, options) { throw \"\"; };\n\t    ;\n\t    /**\n\t     * Creates a new [[Transition]] object\n\t     *\n\t     * This is a factory function for creating new Transition objects.\n\t     * It is used internally by the [[StateService]] and should generally not be called by application code.\n\t     *\n\t     * @param fromPath the path to the current state (the from state)\n\t     * @param targetState the target state (destination)\n\t     * @returns a Transition\n\t     */\n\t    TransitionService.prototype.create = function (fromPath, targetState) {\n\t        return new transition_1.Transition(fromPath, targetState, this._router);\n\t    };\n\t    return TransitionService;\n\t}());\n\texports.TransitionService = TransitionService;\n\t//# sourceMappingURL=transitionService.js.map\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module hooks */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar resolveContext_1 = __webpack_require__(17);\n\tvar hof_1 = __webpack_require__(5);\n\t/**\n\t * A [[TransitionHookFn]] which resolves all EAGER Resolvables in the To Path\n\t *\n\t * Registered using `transitionService.onStart({}, eagerResolvePath);`\n\t *\n\t * When a Transition starts, this hook resolves all the EAGER Resolvables, which the transition then waits for.\n\t *\n\t * See [[StateDeclaration.resolve]]\n\t */\n\tvar eagerResolvePath = function (trans) {\n\t    return new resolveContext_1.ResolveContext(trans.treeChanges().to)\n\t        .resolvePath(\"EAGER\", trans)\n\t        .then(common_1.noop);\n\t};\n\texports.registerEagerResolvePath = function (transitionService) {\n\t    return transitionService.onStart({}, eagerResolvePath, { priority: 1000 });\n\t};\n\t/**\n\t * A [[TransitionHookFn]] which resolves all LAZY Resolvables for the state (and all its ancestors) in the To Path\n\t *\n\t * Registered using `transitionService.onEnter({ entering: () => true }, lazyResolveState);`\n\t *\n\t * When a State is being entered, this hook resolves all the Resolvables for this state, which the transition then waits for.\n\t *\n\t * See [[StateDeclaration.resolve]]\n\t */\n\tvar lazyResolveState = function (trans, state) {\n\t    return new resolveContext_1.ResolveContext(trans.treeChanges().to)\n\t        .subContext(state)\n\t        .resolvePath(\"LAZY\", trans)\n\t        .then(common_1.noop);\n\t};\n\texports.registerLazyResolveState = function (transitionService) {\n\t    return transitionService.onEnter({ entering: hof_1.val(true) }, lazyResolveState, { priority: 1000 });\n\t};\n\t//# sourceMappingURL=resolve.js.map\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module hooks */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar coreservices_1 = __webpack_require__(6);\n\t/**\n\t * A [[TransitionHookFn]] which waits for the views to load\n\t *\n\t * Registered using `transitionService.onStart({}, loadEnteringViews);`\n\t *\n\t * Allows the views to do async work in [[ViewConfig.load]] before the transition continues.\n\t * In angular 1, this includes loading the templates.\n\t */\n\tvar loadEnteringViews = function (transition) {\n\t    var enteringViews = transition.views(\"entering\");\n\t    if (!enteringViews.length)\n\t        return;\n\t    return coreservices_1.services.$q.all(enteringViews.map(function (view) { return view.load(); })).then(common_1.noop);\n\t};\n\texports.registerLoadEnteringViews = function (transitionService) {\n\t    return transitionService.onStart({}, loadEnteringViews);\n\t};\n\t/**\n\t * A [[TransitionHookFn]] which activates the new views when a transition is successful.\n\t *\n\t * Registered using `transitionService.onSuccess({}, activateViews);`\n\t *\n\t * After a transition is complete, this hook deactivates the old views from the previous state,\n\t * and activates the new views from the destination state.\n\t *\n\t * See [[ViewService]]\n\t */\n\tvar activateViews = function (transition) {\n\t    var enteringViews = transition.views(\"entering\");\n\t    var exitingViews = transition.views(\"exiting\");\n\t    if (!enteringViews.length && !exitingViews.length)\n\t        return;\n\t    var $view = transition.router.viewService;\n\t    exitingViews.forEach(function (vc) { return $view.deactivateViewConfig(vc); });\n\t    enteringViews.forEach(function (vc) { return $view.activateViewConfig(vc); });\n\t    $view.sync();\n\t};\n\texports.registerActivateViews = function (transitionService) {\n\t    return transitionService.onSuccess({}, activateViews);\n\t};\n\t//# sourceMappingURL=views.js.map\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * A [[TransitionHookFn]] which updates the URL after a successful transition\n\t *\n\t * Registered using `transitionService.onSuccess({}, updateUrl);`\n\t */\n\tvar updateUrl = function (transition) {\n\t    var options = transition.options();\n\t    var $state = transition.router.stateService;\n\t    var $urlRouter = transition.router.urlRouter;\n\t    // Dont update the url in these situations:\n\t    // The transition was triggered by a URL sync (options.source === 'url')\n\t    // The user doesn't want the url to update (options.location === false)\n\t    // The destination state, and all parents have no navigable url\n\t    if (options.source !== 'url' && options.location && $state.$current.navigable) {\n\t        var urlOptions = { replace: options.location === 'replace' };\n\t        $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions);\n\t    }\n\t    $urlRouter.update(true);\n\t};\n\texports.registerUpdateUrl = function (transitionService) {\n\t    return transitionService.onSuccess({}, updateUrl, { priority: 9999 });\n\t};\n\t//# sourceMappingURL=url.js.map\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module hooks */ /** */\n\tvar predicates_1 = __webpack_require__(4);\n\tvar coreservices_1 = __webpack_require__(6);\n\tvar targetState_1 = __webpack_require__(14);\n\t/**\n\t * A [[TransitionHookFn]] that redirects to a different state or params\n\t *\n\t * Registered using `transitionService.onStart({ to: (state) => !!state.redirectTo }, redirectHook);`\n\t *\n\t * See [[StateDeclaration.redirectTo]]\n\t */\n\tvar redirectToHook = function (trans) {\n\t    var redirect = trans.to().redirectTo;\n\t    if (!redirect)\n\t        return;\n\t    function handleResult(result) {\n\t        var $state = trans.router.stateService;\n\t        if (result instanceof targetState_1.TargetState)\n\t            return result;\n\t        if (predicates_1.isString(result))\n\t            return $state.target(result, trans.params(), trans.options());\n\t        if (result['state'] || result['params'])\n\t            return $state.target(result['state'] || trans.to(), result['params'] || trans.params(), trans.options());\n\t    }\n\t    if (predicates_1.isFunction(redirect)) {\n\t        return coreservices_1.services.$q.when(redirect(trans)).then(handleResult);\n\t    }\n\t    return handleResult(redirect);\n\t};\n\texports.registerRedirectToHook = function (transitionService) {\n\t    return transitionService.onStart({ to: function (state) { return !!state.redirectTo; } }, redirectToHook);\n\t};\n\t//# sourceMappingURL=redirectTo.js.map\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * A factory which creates an onEnter, onExit or onRetain transition hook function\n\t *\n\t * The returned function invokes the (for instance) state.onEnter hook when the\n\t * state is being entered.\n\t *\n\t * @hidden\n\t */\n\tfunction makeEnterExitRetainHook(hookName) {\n\t    return function (transition, state) {\n\t        var hookFn = state[hookName];\n\t        return hookFn(transition, state);\n\t    };\n\t}\n\t/**\n\t * The [[TransitionStateHookFn]] for onExit\n\t *\n\t * When the state is being exited, the state's .onExit function is invoked.\n\t *\n\t * Registered using `transitionService.onExit({ exiting: (state) => !!state.onExit }, onExitHook);`\n\t *\n\t * See: [[IHookRegistry.onExit]]\n\t */\n\tvar onExitHook = makeEnterExitRetainHook('onExit');\n\texports.registerOnExitHook = function (transitionService) {\n\t    return transitionService.onExit({ exiting: function (state) { return !!state.onExit; } }, onExitHook);\n\t};\n\t/**\n\t * The [[TransitionStateHookFn]] for onRetain\n\t *\n\t * When the state was already entered, and is not being exited or re-entered, the state's .onRetain function is invoked.\n\t *\n\t * Registered using `transitionService.onRetain({ retained: (state) => !!state.onRetain }, onRetainHook);`\n\t *\n\t * See: [[IHookRegistry.onRetain]]\n\t */\n\tvar onRetainHook = makeEnterExitRetainHook('onRetain');\n\texports.registerOnRetainHook = function (transitionService) {\n\t    return transitionService.onRetain({ retained: function (state) { return !!state.onRetain; } }, onRetainHook);\n\t};\n\t/**\n\t * The [[TransitionStateHookFn]] for onEnter\n\t *\n\t * When the state is being entered, the state's .onEnter function is invoked.\n\t *\n\t * Registered using `transitionService.onEnter({ entering: (state) => !!state.onEnter }, onEnterHook);`\n\t *\n\t * See: [[IHookRegistry.onEnter]]\n\t */\n\tvar onEnterHook = makeEnterExitRetainHook('onEnter');\n\texports.registerOnEnterHook = function (transitionService) {\n\t    return transitionService.onEnter({ entering: function (state) { return !!state.onEnter; } }, onEnterHook);\n\t};\n\t//# sourceMappingURL=onEnterExitRetain.js.map\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar coreservices_1 = __webpack_require__(6);\n\t/**\n\t * A [[TransitionHookFn]] that lazy loads a state tree.\n\t *\n\t * When transitioning to a state \"abc\" which has a `lazyLoad` function defined:\n\t * - Invoke the `lazyLoad` function\n\t *   - The function should return a promise for an array of lazy loaded [[StateDeclaration]]s\n\t * - Wait for the promise to resolve\n\t * - Deregister the original state \"abc\"\n\t *   - The original state definition is a placeholder for the lazy loaded states\n\t * - Register the new states\n\t * - Retry the transition\n\t *\n\t * See [[StateDeclaration.lazyLoad]]\n\t */\n\tvar lazyLoadHook = function (transition) {\n\t    var toState = transition.to();\n\t    var registry = transition.router.stateRegistry;\n\t    function retryOriginalTransition() {\n\t        if (transition.options().source === 'url') {\n\t            var loc = coreservices_1.services.location, path_1 = loc.path(), search_1 = loc.search(), hash_1 = loc.hash();\n\t            var matchState = function (state) { return [state, state.url && state.url.exec(path_1, search_1, hash_1)]; };\n\t            var matches = registry.get().map(function (s) { return s.$$state(); }).map(matchState).filter(function (_a) {\n\t                var state = _a[0], params = _a[1];\n\t                return !!params;\n\t            });\n\t            if (matches.length) {\n\t                var _a = matches[0], state = _a[0], params = _a[1];\n\t                return transition.router.stateService.target(state, params, transition.options());\n\t            }\n\t            transition.router.urlRouter.sync();\n\t        }\n\t        // The original transition was not triggered via url sync\n\t        // The lazy state should be loaded now, so re-try the original transition\n\t        var orig = transition.targetState();\n\t        return transition.router.stateService.target(orig.identifier(), orig.params(), orig.options());\n\t    }\n\t    /**\n\t     * Replace the placeholder state with the newly loaded states from the NgModule.\n\t     */\n\t    function updateStateRegistry(result) {\n\t        // deregister placeholder state\n\t        registry.deregister(transition.$to());\n\t        if (result && Array.isArray(result.states)) {\n\t            result.states.forEach(function (state) { return registry.register(state); });\n\t        }\n\t    }\n\t    var hook = toState.lazyLoad;\n\t    // Store/get the lazy load promise on/from the hookfn so it doesn't get re-invoked\n\t    var promise = hook['_promise'];\n\t    if (!promise) {\n\t        promise = hook['_promise'] = hook(transition).then(updateStateRegistry);\n\t        var cleanup = function () { return delete hook['_promise']; };\n\t        promise.then(cleanup, cleanup);\n\t    }\n\t    return promise.then(retryOriginalTransition);\n\t};\n\texports.registerLazyLoadHook = function (transitionService) {\n\t    return transitionService.onBefore({ to: function (state) { return !!state.lazyLoad; } }, lazyLoadHook);\n\t};\n\t//# sourceMappingURL=lazyLoadStates.js.map\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module view */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar hof_1 = __webpack_require__(5);\n\tvar predicates_1 = __webpack_require__(4);\n\tvar trace_1 = __webpack_require__(12);\n\t/**\n\t * The View service\n\t */\n\tvar ViewService = (function () {\n\t    function ViewService() {\n\t        var _this = this;\n\t        this.uiViews = [];\n\t        this.viewConfigs = [];\n\t        this._viewConfigFactories = {};\n\t        this.sync = function () {\n\t            var uiViewsByFqn = _this.uiViews.map(function (uiv) { return [uiv.fqn, uiv]; }).reduce(common_1.applyPairs, {});\n\t            /**\n\t             * Given a ui-view and a ViewConfig, determines if they \"match\".\n\t             *\n\t             * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n\t             * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n\t             *\n\t             * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n\t             * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n\t             *\n\t             * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n\t             *\n\t             * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n\t             * - the ui-view's name matches the ViewConfig's target name\n\t             * - the ui-view's context matches the ViewConfig's anchor\n\t             *\n\t             * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n\t             * - There exists a parent ui-view where:\n\t             *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n\t             *    - the parent ui-view's context matches the ViewConfig's anchor\n\t             * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n\t             *\n\t             * Example:\n\t             *\n\t             * DOM:\n\t             * <div ui-view>                        <!-- created in the root context (name: \"\") -->\n\t             *   <div ui-view=\"foo\">                <!-- created in the context named: \"A\"      -->\n\t             *     <div ui-view>                    <!-- created in the context named: \"A.B\"    -->\n\t             *       <div ui-view=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n\t             *       </div>\n\t             *     </div>\n\t             *   </div>\n\t             * </div>\n\t             *\n\t             * uiViews: [\n\t             *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n\t             *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n\t             *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n\t             *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n\t             * ]\n\t             *\n\t             * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n\t             *\n\t             * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n\t             * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n\t             * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n\t             * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n\t             *\n\t             * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n\t             * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n\t             * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n\t             *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n\t             *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n\t             * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n\t             *   the tail of the ui-view's fqn \"default.bar\"\n\t             */\n\t            var matches = function (uiView) { return function (viewConfig) {\n\t                // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n\t                if (uiView.$type !== viewConfig.viewDecl.$type)\n\t                    return false;\n\t                // Split names apart from both viewConfig and uiView into segments\n\t                var vc = viewConfig.viewDecl;\n\t                var vcSegments = vc.$uiViewName.split(\".\");\n\t                var uivSegments = uiView.fqn.split(\".\");\n\t                // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n\t                // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n\t                if (!common_1.equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n\t                    return false;\n\t                // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n\t                // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n\t                var negOffset = (1 - vcSegments.length) || undefined;\n\t                var fqnToFirstSegment = uivSegments.slice(0, negOffset).join(\".\");\n\t                var uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n\t                return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n\t            }; };\n\t            // Return the number of dots in the fully qualified name\n\t            function uiViewDepth(uiView) {\n\t                return uiView.fqn.split(\".\").length;\n\t            }\n\t            // Return the ViewConfig's context's depth in the context tree.\n\t            function viewConfigDepth(config) {\n\t                var context = config.viewDecl.$context, count = 0;\n\t                while (++count && context.parent)\n\t                    context = context.parent;\n\t                return count;\n\t            }\n\t            // Given a depth function, returns a compare function which can return either ascending or descending order\n\t            var depthCompare = hof_1.curry(function (depthFn, posNeg, left, right) { return posNeg * (depthFn(left) - depthFn(right)); });\n\t            var matchingConfigPair = function (uiView) {\n\t                var matchingConfigs = _this.viewConfigs.filter(matches(uiView));\n\t                if (matchingConfigs.length > 1)\n\t                    matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n\t                return [uiView, matchingConfigs[0]];\n\t            };\n\t            var configureUIView = function (_a) {\n\t                var uiView = _a[0], viewConfig = _a[1];\n\t                // If a parent ui-view is reconfigured, it could destroy child ui-views.\n\t                // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n\t                if (_this.uiViews.indexOf(uiView) !== -1)\n\t                    uiView.configUpdated(viewConfig);\n\t            };\n\t            _this.uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair).forEach(configureUIView);\n\t        };\n\t    }\n\t    ViewService.prototype.rootContext = function (context) {\n\t        return this._rootContext = context || this._rootContext;\n\t    };\n\t    ;\n\t    ViewService.prototype.viewConfigFactory = function (viewType, factory) {\n\t        this._viewConfigFactories[viewType] = factory;\n\t    };\n\t    ViewService.prototype.createViewConfig = function (path, decl) {\n\t        var cfgFactory = this._viewConfigFactories[decl.$type];\n\t        if (!cfgFactory)\n\t            throw new Error(\"ViewService: No view config factory registered for type \" + decl.$type);\n\t        var cfgs = cfgFactory(path, decl);\n\t        return predicates_1.isArray(cfgs) ? cfgs : [cfgs];\n\t    };\n\t    /**\n\t     * De-registers a ViewConfig.\n\t     *\n\t     * @param viewConfig The ViewConfig view to deregister.\n\t     */\n\t    ViewService.prototype.deactivateViewConfig = function (viewConfig) {\n\t        trace_1.trace.traceViewServiceEvent(\"<- Removing\", viewConfig);\n\t        common_1.removeFrom(this.viewConfigs, viewConfig);\n\t    };\n\t    ;\n\t    ViewService.prototype.activateViewConfig = function (viewConfig) {\n\t        trace_1.trace.traceViewServiceEvent(\"-> Registering\", viewConfig);\n\t        this.viewConfigs.push(viewConfig);\n\t    };\n\t    ;\n\t    /**\n\t     * Allows a `ui-view` element to register its canonical name with a callback that allows it to\n\t     * be updated with a template, controller, and local variables.\n\t     *\n\t     * @param {String} name The fully-qualified name of the `ui-view` object being registered.\n\t     * @param {Function} configUpdatedCallback A callback that receives updates to the content & configuration\n\t     *                   of the view.\n\t     * @return {Function} Returns a de-registration function used when the view is destroyed.\n\t     */\n\t    ViewService.prototype.registerUIView = function (uiView) {\n\t        trace_1.trace.traceViewServiceUIViewEvent(\"-> Registering\", uiView);\n\t        var uiViews = this.uiViews;\n\t        var fqnMatches = function (uiv) { return uiv.fqn === uiView.fqn; };\n\t        if (uiViews.filter(fqnMatches).length)\n\t            trace_1.trace.traceViewServiceUIViewEvent(\"!!!! duplicate uiView named:\", uiView);\n\t        uiViews.push(uiView);\n\t        this.sync();\n\t        return function () {\n\t            var idx = uiViews.indexOf(uiView);\n\t            if (idx === -1) {\n\t                trace_1.trace.traceViewServiceUIViewEvent(\"Tried removing non-registered uiView\", uiView);\n\t                return;\n\t            }\n\t            trace_1.trace.traceViewServiceUIViewEvent(\"<- Deregistering\", uiView);\n\t            common_1.removeFrom(uiViews)(uiView);\n\t        };\n\t    };\n\t    ;\n\t    /**\n\t     * Returns the list of views currently available on the page, by fully-qualified name.\n\t     *\n\t     * @return {Array} Returns an array of fully-qualified view names.\n\t     */\n\t    ViewService.prototype.available = function () {\n\t        return this.uiViews.map(hof_1.prop(\"fqn\"));\n\t    };\n\t    /**\n\t     * Returns the list of views on the page containing loaded content.\n\t     *\n\t     * @return {Array} Returns an array of fully-qualified view names.\n\t     */\n\t    ViewService.prototype.active = function () {\n\t        return this.uiViews.filter(hof_1.prop(\"$config\")).map(hof_1.prop(\"name\"));\n\t    };\n\t    /**\n\t     * Normalizes a view's name from a state.views configuration block.\n\t     *\n\t     * @param context the context object (state declaration) that the view belongs to\n\t     * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n\t     *\n\t     * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n\t     */\n\t    ViewService.normalizeUIViewTarget = function (context, rawViewName) {\n\t        if (rawViewName === void 0) { rawViewName = \"\"; }\n\t        // TODO: Validate incoming view name with a regexp to allow:\n\t        // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n\t        // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n\t        var viewAtContext = rawViewName.split(\"@\");\n\t        var uiViewName = viewAtContext[0] || \"$default\"; // default to unnamed view\n\t        var uiViewContextAnchor = predicates_1.isString(viewAtContext[1]) ? viewAtContext[1] : \"^\"; // default to parent context\n\t        // Handle relative view-name sugar syntax.\n\t        // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n\t        var relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n\t        if (relativeViewNameSugar) {\n\t            // Clobbers existing contextAnchor (rawViewName validation will fix this)\n\t            uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n\t            uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n\t        }\n\t        if (uiViewName.charAt(0) === '!') {\n\t            uiViewName = uiViewName.substr(1);\n\t            uiViewContextAnchor = \"\"; // target absolutely from root\n\t        }\n\t        // handle parent relative targeting \"^.^.^\"\n\t        var relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n\t        if (relativeMatch.exec(uiViewContextAnchor)) {\n\t            var anchor = uiViewContextAnchor.split(\".\").reduce((function (anchor, x) { return anchor.parent; }), context);\n\t            uiViewContextAnchor = anchor.name;\n\t        }\n\t        return { uiViewName: uiViewName, uiViewContextAnchor: uiViewContextAnchor };\n\t    };\n\t    return ViewService;\n\t}());\n\texports.ViewService = ViewService;\n\t//# sourceMappingURL=view.js.map\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @module state */ /** for typedoc */\n\t\"use strict\";\n\tvar stateMatcher_1 = __webpack_require__(39);\n\tvar stateBuilder_1 = __webpack_require__(40);\n\tvar stateQueueManager_1 = __webpack_require__(41);\n\tvar common_1 = __webpack_require__(3);\n\tvar StateRegistry = (function () {\n\t    function StateRegistry(urlMatcherFactory, urlRouterProvider) {\n\t        this.urlRouterProvider = urlRouterProvider;\n\t        this.states = {};\n\t        this.listeners = [];\n\t        this.matcher = new stateMatcher_1.StateMatcher(this.states);\n\t        this.builder = new stateBuilder_1.StateBuilder(this.matcher, urlMatcherFactory);\n\t        this.stateQueue = new stateQueueManager_1.StateQueueManager(this.states, this.builder, urlRouterProvider, this.listeners);\n\t        var rootStateDef = {\n\t            name: '',\n\t            url: '^',\n\t            views: null,\n\t            params: {\n\t                '#': { value: null, type: 'hash', dynamic: true }\n\t            },\n\t            abstract: true\n\t        };\n\t        var _root = this._root = this.stateQueue.register(rootStateDef);\n\t        _root.navigable = null;\n\t    }\n\t    /**\n\t     * Listen for a State Registry events\n\t     *\n\t     * Adds a callback that is invoked when states are registered or deregistered with the StateRegistry.\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * let allStates = registry.get();\n\t     *\n\t     * // Later, invoke deregisterFn() to remove the listener\n\t     * let deregisterFn = registry.onStatesChanged((event, states) => {\n\t     *   switch(event) {\n\t     *     case: 'registered':\n\t     *       states.forEach(state => allStates.push(state));\n\t     *       break;\n\t     *     case: 'deregistered':\n\t     *       states.forEach(state => {\n\t     *         let idx = allStates.indexOf(state);\n\t     *         if (idx !== -1) allStates.splice(idx, 1);\n\t     *       });\n\t     *       break;\n\t     *   }\n\t     * });\n\t     * ```\n\t     *\n\t     * @param listener a callback function invoked when the registered states changes.\n\t     *        The function receives two parameters, `event` and `state`.\n\t     *        See [[StateRegistryListener]]\n\t     * @return a function that deregisters the listener\n\t     */\n\t    StateRegistry.prototype.onStatesChanged = function (listener) {\n\t        this.listeners.push(listener);\n\t        return function deregisterListener() {\n\t            common_1.removeFrom(this.listeners)(listener);\n\t        }.bind(this);\n\t    };\n\t    /**\n\t     * Gets the implicit root state\n\t     *\n\t     * Gets the root of the state tree.\n\t     * The root state is implicitly created by UI-Router.\n\t     * Note: this returns the internal [[State]] representation, not a [[StateDeclaration]]\n\t     *\n\t     * @return the root [[State]]\n\t     */\n\t    StateRegistry.prototype.root = function () {\n\t        return this._root;\n\t    };\n\t    /**\n\t     * Adds a state to the registry\n\t     *\n\t     * Registers a [[StateDeclaration]] or queues it for registration.\n\t     *\n\t     * Note: a state will be queued if the state's parent isn't yet registered.\n\t     * It will also be queued if the queue is not yet in [[StateQueueManager.autoFlush]] mode.\n\t     *\n\t     * @param stateDefinition the definition of the state to register.\n\t     * @returns the internal [[State]] object.\n\t     *          If the state was successfully registered, then the object is fully built (See: [[StateBuilder]]).\n\t     *          If the state was only queued, then the object is not fully built.\n\t     */\n\t    StateRegistry.prototype.register = function (stateDefinition) {\n\t        return this.stateQueue.register(stateDefinition);\n\t    };\n\t    /** @hidden */\n\t    StateRegistry.prototype._deregisterTree = function (state) {\n\t        var _this = this;\n\t        var all = this.get().map(function (s) { return s.$$state(); });\n\t        var getChildren = function (states) {\n\t            var children = all.filter(function (s) { return states.indexOf(s.parent) !== -1; });\n\t            return children.length === 0 ? children : children.concat(getChildren(children));\n\t        };\n\t        var children = getChildren([state]);\n\t        var deregistered = [state].concat(children).reverse();\n\t        deregistered.forEach(function (state) {\n\t            _this.urlRouterProvider.removeRule(state._urlRule);\n\t            delete _this.states[state.name];\n\t        });\n\t        return deregistered;\n\t    };\n\t    /**\n\t     * Removes a state from the registry\n\t     *\n\t     * This removes a state from the registry.\n\t     * If the state has children, they are are also removed from the registry.\n\t     *\n\t     * @param stateOrName the state's name or object representation\n\t     * @returns {State[]} a list of removed states\n\t     */\n\t    StateRegistry.prototype.deregister = function (stateOrName) {\n\t        var _state = this.get(stateOrName);\n\t        if (!_state)\n\t            throw new Error(\"Can't deregister state; not found: \" + stateOrName);\n\t        var deregisteredStates = this._deregisterTree(_state.$$state());\n\t        this.listeners.forEach(function (listener) { return listener(\"deregistered\", deregisteredStates.map(function (s) { return s.self; })); });\n\t        return deregisteredStates;\n\t    };\n\t    StateRegistry.prototype.get = function (stateOrName, base) {\n\t        var _this = this;\n\t        if (arguments.length === 0)\n\t            return Object.keys(this.states).map(function (name) { return _this.states[name].self; });\n\t        var found = this.matcher.find(stateOrName, base);\n\t        return found && found.self || null;\n\t    };\n\t    StateRegistry.prototype.decorator = function (name, func) {\n\t        return this.builder.builder(name, func);\n\t    };\n\t    return StateRegistry;\n\t}());\n\texports.StateRegistry = StateRegistry;\n\t//# sourceMappingURL=stateRegistry.js.map\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module state */ /** for typedoc */\n\tvar predicates_1 = __webpack_require__(4);\n\tvar glob_1 = __webpack_require__(7);\n\tvar common_1 = __webpack_require__(3);\n\tvar StateMatcher = (function () {\n\t    function StateMatcher(_states) {\n\t        this._states = _states;\n\t    }\n\t    StateMatcher.prototype.isRelative = function (stateName) {\n\t        stateName = stateName || \"\";\n\t        return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n\t    };\n\t    StateMatcher.prototype.find = function (stateOrName, base) {\n\t        if (!stateOrName && stateOrName !== \"\")\n\t            return undefined;\n\t        var isStr = predicates_1.isString(stateOrName);\n\t        var name = isStr ? stateOrName : stateOrName.name;\n\t        if (this.isRelative(name))\n\t            name = this.resolvePath(name, base);\n\t        var state = this._states[name];\n\t        if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n\t            return state;\n\t        }\n\t        else if (isStr) {\n\t            var matches = common_1.values(this._states)\n\t                .filter(function (state) { return new glob_1.Glob(state.name).matches(name); });\n\t            if (matches.length > 1) {\n\t                console.log(\"stateMatcher.find: Found multiple matches for \" + name + \" using glob: \", matches.map(function (match) { return match.name; }));\n\t            }\n\t            return matches[0];\n\t        }\n\t        return undefined;\n\t    };\n\t    StateMatcher.prototype.resolvePath = function (name, base) {\n\t        if (!base)\n\t            throw new Error(\"No reference point given for path '\" + name + \"'\");\n\t        var baseState = this.find(base);\n\t        var splitName = name.split(\".\"), i = 0, pathLength = splitName.length, current = baseState;\n\t        for (; i < pathLength; i++) {\n\t            if (splitName[i] === \"\" && i === 0) {\n\t                current = baseState;\n\t                continue;\n\t            }\n\t            if (splitName[i] === \"^\") {\n\t                if (!current.parent)\n\t                    throw new Error(\"Path '\" + name + \"' not valid for state '\" + baseState.name + \"'\");\n\t                current = current.parent;\n\t                continue;\n\t            }\n\t            break;\n\t        }\n\t        var relName = splitName.slice(i).join(\".\");\n\t        return current.name + (current.name && relName ? \".\" : \"\") + relName;\n\t    };\n\t    return StateMatcher;\n\t}());\n\texports.StateMatcher = StateMatcher;\n\t//# sourceMappingURL=stateMatcher.js.map\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module state */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar predicates_1 = __webpack_require__(4);\n\tvar strings_1 = __webpack_require__(9);\n\tvar hof_1 = __webpack_require__(5);\n\tvar param_1 = __webpack_require__(22);\n\tvar resolvable_1 = __webpack_require__(19);\n\tvar coreservices_1 = __webpack_require__(6);\n\tvar parseUrl = function (url) {\n\t    if (!predicates_1.isString(url))\n\t        return false;\n\t    var root = url.charAt(0) === '^';\n\t    return { val: root ? url.substring(1) : url, root: root };\n\t};\n\tfunction nameBuilder(state) {\n\t    if (state.lazyLoad)\n\t        state.name = state.self.name + \".**\";\n\t    return state.name;\n\t}\n\tfunction selfBuilder(state) {\n\t    state.self.$$state = function () { return state; };\n\t    return state.self;\n\t}\n\tfunction dataBuilder(state) {\n\t    if (state.parent && state.parent.data) {\n\t        state.data = state.self.data = common_1.inherit(state.parent.data, state.data);\n\t    }\n\t    return state.data;\n\t}\n\tvar getUrlBuilder = function ($urlMatcherFactoryProvider, root) {\n\t    return function urlBuilder(state) {\n\t        var stateDec = state;\n\t        if (stateDec && stateDec.url && stateDec.lazyLoad) {\n\t            stateDec.url += \"{remainder:any}\"; // match any path (.*)\n\t        }\n\t        var parsed = parseUrl(stateDec.url), parent = state.parent;\n\t        var url = !parsed ? stateDec.url : $urlMatcherFactoryProvider.compile(parsed.val, {\n\t            params: state.params || {},\n\t            paramMap: function (paramConfig, isSearch) {\n\t                if (stateDec.reloadOnSearch === false && isSearch)\n\t                    paramConfig = common_1.extend(paramConfig || {}, { dynamic: true });\n\t                return paramConfig;\n\t            }\n\t        });\n\t        if (!url)\n\t            return null;\n\t        if (!$urlMatcherFactoryProvider.isMatcher(url))\n\t            throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n\t        return (parsed && parsed.root) ? url : ((parent && parent.navigable) || root()).url.append(url);\n\t    };\n\t};\n\tvar getNavigableBuilder = function (isRoot) {\n\t    return function navigableBuilder(state) {\n\t        return !isRoot(state) && state.url ? state : (state.parent ? state.parent.navigable : null);\n\t    };\n\t};\n\tvar getParamsBuilder = function (paramTypes) {\n\t    return function paramsBuilder(state) {\n\t        var makeConfigParam = function (config, id) { return param_1.Param.fromConfig(id, null, config, paramTypes); };\n\t        var urlParams = (state.url && state.url.parameters({ inherit: false })) || [];\n\t        var nonUrlParams = common_1.values(common_1.mapObj(common_1.omit(state.params || {}, urlParams.map(hof_1.prop('id'))), makeConfigParam));\n\t        return urlParams.concat(nonUrlParams).map(function (p) { return [p.id, p]; }).reduce(common_1.applyPairs, {});\n\t    };\n\t};\n\tfunction pathBuilder(state) {\n\t    return state.parent ? state.parent.path.concat(state) : [state];\n\t}\n\tfunction includesBuilder(state) {\n\t    var includes = state.parent ? common_1.extend({}, state.parent.includes) : {};\n\t    includes[state.name] = true;\n\t    return includes;\n\t}\n\t/**\n\t * This is a [[StateBuilder.builder]] function for the `resolve:` block on a [[StateDeclaration]].\n\t *\n\t * When the [[StateBuilder]] builds a [[State]] object from a raw [[StateDeclaration]], this builder\n\t * validates the `resolve` property and converts it to a [[Resolvable]] array.\n\t *\n\t * resolve: input value can be:\n\t *\n\t * {\n\t *   // analyzed but not injected\n\t *   myFooResolve: function() { return \"myFooData\"; },\n\t *\n\t *   // function.toString() parsed, \"DependencyName\" dep as string (not min-safe)\n\t *   myBarResolve: function(DependencyName) { return DependencyName.fetchSomethingAsPromise() },\n\t *\n\t *   // Array split; \"DependencyName\" dep as string\n\t *   myBazResolve: [ \"DependencyName\", function(dep) { return dep.fetchSomethingAsPromise() },\n\t *\n\t *   // Array split; DependencyType dep as token (compared using ===)\n\t *   myQuxResolve: [ DependencyType, function(dep) { return dep.fetchSometingAsPromise() },\n\t *\n\t *   // val.$inject used as deps\n\t *   // where:\n\t *   //     corgeResolve.$inject = [\"DependencyName\"];\n\t *   //     function corgeResolve(dep) { dep.fetchSometingAsPromise() }\n\t *   // then \"DependencyName\" dep as string\n\t *   myCorgeResolve: corgeResolve,\n\t *\n\t *  // inject service by name\n\t *  // When a string is found, desugar creating a resolve that injects the named service\n\t *   myGraultResolve: \"SomeService\"\n\t * }\n\t *\n\t * or:\n\t *\n\t * [\n\t *   new Resolvable(\"myFooResolve\", function() { return \"myFooData\" }),\n\t *   new Resolvable(\"myBarResolve\", function(dep) { return dep.fetchSomethingAsPromise() }, [ \"DependencyName\" ]),\n\t *   { provide: \"myBazResolve\", useFactory: function(dep) { dep.fetchSomethingAsPromise() }, deps: [ \"DependencyName\" ] }\n\t * ]\n\t */\n\tfunction resolvablesBuilder(state) {\n\t    /** convert resolve: {} and resolvePolicy: {} objects to an array of tuples */\n\t    var objects2Tuples = function (resolveObj, resolvePolicies) {\n\t        return Object.keys(resolveObj || {}).map(function (token) { return ({ token: token, val: resolveObj[token], deps: undefined, policy: resolvePolicies[token] }); });\n\t    };\n\t    /** fetch DI annotations from a function or ng1-style array */\n\t    var annotate = function (fn) {\n\t        return fn['$inject'] || coreservices_1.services.$injector.annotate(fn, coreservices_1.services.$injector.strictDi);\n\t    };\n\t    /** true if the object has both `token` and `resolveFn`, and is probably a [[ResolveLiteral]] */\n\t    var isResolveLiteral = function (obj) { return !!(obj.token && obj.resolveFn); };\n\t    /** true if the object looks like a provide literal, or a ng2 Provider */\n\t    var isLikeNg2Provider = function (obj) { return !!((obj.provide || obj.token) && (obj.useValue || obj.useFactory || obj.useExisting || obj.useClass)); };\n\t    /** true if the object looks like a tuple from obj2Tuples */\n\t    var isTupleFromObj = function (obj) { return !!(obj && obj.val && (predicates_1.isString(obj.val) || predicates_1.isArray(obj.val) || predicates_1.isFunction(obj.val))); };\n\t    /** extracts the token from a Provider or provide literal */\n\t    var token = function (p) { return p.provide || p.token; };\n\t    /** Given a literal resolve or provider object, returns a Resolvable */\n\t    var literal2Resolvable = hof_1.pattern([\n\t        [hof_1.prop('resolveFn'), function (p) { return new resolvable_1.Resolvable(token(p), p.resolveFn, p.deps, p.policy); }],\n\t        [hof_1.prop('useFactory'), function (p) { return new resolvable_1.Resolvable(token(p), p.useFactory, (p.deps || p.dependencies), p.policy); }],\n\t        [hof_1.prop('useClass'), function (p) { return new resolvable_1.Resolvable(token(p), function () { return new p.useClass(); }, [], p.policy); }],\n\t        [hof_1.prop('useValue'), function (p) { return new resolvable_1.Resolvable(token(p), function () { return p.useValue; }, [], p.policy, p.useValue); }],\n\t        [hof_1.prop('useExisting'), function (p) { return new resolvable_1.Resolvable(token(p), common_1.identity, [p.useExisting], p.policy); }],\n\t    ]);\n\t    var tuple2Resolvable = hof_1.pattern([\n\t        [hof_1.pipe(hof_1.prop(\"val\"), predicates_1.isString), function (tuple) { return new resolvable_1.Resolvable(tuple.token, common_1.identity, [tuple.val], tuple.policy); }],\n\t        [hof_1.pipe(hof_1.prop(\"val\"), predicates_1.isArray), function (tuple) { return new resolvable_1.Resolvable(tuple.token, common_1.tail(tuple.val), tuple.val.slice(0, -1), tuple.policy); }],\n\t        [hof_1.pipe(hof_1.prop(\"val\"), predicates_1.isFunction), function (tuple) { return new resolvable_1.Resolvable(tuple.token, tuple.val, annotate(tuple.val), tuple.policy); }],\n\t    ]);\n\t    var item2Resolvable = hof_1.pattern([\n\t        [hof_1.is(resolvable_1.Resolvable), function (r) { return r; }],\n\t        [isResolveLiteral, literal2Resolvable],\n\t        [isLikeNg2Provider, literal2Resolvable],\n\t        [isTupleFromObj, tuple2Resolvable],\n\t        [hof_1.val(true), function (obj) { throw new Error(\"Invalid resolve value: \" + strings_1.stringify(obj)); }]\n\t    ]);\n\t    // If resolveBlock is already an array, use it as-is.\n\t    // Otherwise, assume it's an object and convert to an Array of tuples\n\t    var decl = state.resolve;\n\t    var items = predicates_1.isArray(decl) ? decl : objects2Tuples(decl, state.resolvePolicy || {});\n\t    return items.map(item2Resolvable);\n\t}\n\texports.resolvablesBuilder = resolvablesBuilder;\n\t/**\n\t * @internalapi A internal global service\n\t *\n\t * StateBuilder is a factory for the internal [[State]] objects.\n\t *\n\t * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n\t * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n\t * [[State]] object, which has an API and is used internally.\n\t *\n\t * Custom properties or API may be added to the internal [[State]] object by registering a decorator function\n\t * using the [[builder]] method.\n\t */\n\tvar StateBuilder = (function () {\n\t    function StateBuilder(matcher, $urlMatcherFactoryProvider) {\n\t        this.matcher = matcher;\n\t        var self = this;\n\t        var root = function () { return matcher.find(\"\"); };\n\t        var isRoot = function (state) { return state.name === \"\"; };\n\t        function parentBuilder(state) {\n\t            if (isRoot(state))\n\t                return null;\n\t            return matcher.find(self.parentName(state)) || root();\n\t        }\n\t        this.builders = {\n\t            name: [nameBuilder],\n\t            self: [selfBuilder],\n\t            parent: [parentBuilder],\n\t            data: [dataBuilder],\n\t            // Build a URLMatcher if necessary, either via a relative or absolute URL\n\t            url: [getUrlBuilder($urlMatcherFactoryProvider, root)],\n\t            // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n\t            navigable: [getNavigableBuilder(isRoot)],\n\t            params: [getParamsBuilder($urlMatcherFactoryProvider.paramTypes)],\n\t            // Each framework-specific ui-router implementation should define its own `views` builder\n\t            // e.g., src/ng1/statebuilders/views.ts\n\t            views: [],\n\t            // Keep a full path from the root down to this state as this is needed for state activation.\n\t            path: [pathBuilder],\n\t            // Speed up $state.includes() as it's used a lot\n\t            includes: [includesBuilder],\n\t            resolvables: [resolvablesBuilder]\n\t        };\n\t    }\n\t    /**\n\t     * Registers a [[BuilderFunction]] for a specific [[State]] property (e.g., `parent`, `url`, or `path`).\n\t     * More than one BuilderFunction can be registered for a given property.\n\t     *\n\t     * The BuilderFunction(s) will be used to define the property on any subsequently built [[State]] objects.\n\t     *\n\t     * @param name The name of the State property being registered for.\n\t     * @param fn The BuilderFunction which will be used to build the State property\n\t     * @returns a function which deregisters the BuilderFunction\n\t     */\n\t    StateBuilder.prototype.builder = function (name, fn) {\n\t        var builders = this.builders;\n\t        var array = builders[name] || [];\n\t        // Backwards compat: if only one builder exists, return it, else return whole arary.\n\t        if (predicates_1.isString(name) && !predicates_1.isDefined(fn))\n\t            return array.length > 1 ? array : array[0];\n\t        if (!predicates_1.isString(name) || !predicates_1.isFunction(fn))\n\t            return;\n\t        builders[name] = array;\n\t        builders[name].push(fn);\n\t        return function () { return builders[name].splice(builders[name].indexOf(fn, 1)) && null; };\n\t    };\n\t    /**\n\t     * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n\t     * properties and API built.\n\t     *\n\t     * @param state an uninitialized State object\n\t     * @returns the built State object\n\t     */\n\t    StateBuilder.prototype.build = function (state) {\n\t        var _a = this, matcher = _a.matcher, builders = _a.builders;\n\t        var parent = this.parentName(state);\n\t        if (parent && !matcher.find(parent))\n\t            return null;\n\t        for (var key in builders) {\n\t            if (!builders.hasOwnProperty(key))\n\t                continue;\n\t            var chain = builders[key].reduce(function (parentFn, step) { return function (_state) { return step(_state, parentFn); }; }, common_1.noop);\n\t            state[key] = chain(state);\n\t        }\n\t        return state;\n\t    };\n\t    StateBuilder.prototype.parentName = function (state) {\n\t        var name = state.name || \"\";\n\t        var segments = name.split('.');\n\t        if (segments.length > 1) {\n\t            if (state.parent) {\n\t                throw new Error(\"States that specify the 'parent:' property should not have a '.' in their name (\" + name + \")\");\n\t            }\n\t            var lastSegment = segments.pop();\n\t            if (lastSegment === '**')\n\t                segments.pop();\n\t            return segments.join(\".\");\n\t        }\n\t        if (!state.parent)\n\t            return \"\";\n\t        return predicates_1.isString(state.parent) ? state.parent : state.parent.name;\n\t    };\n\t    StateBuilder.prototype.name = function (state) {\n\t        var name = state.name;\n\t        if (name.indexOf('.') !== -1 || !state.parent)\n\t            return name;\n\t        var parentName = predicates_1.isString(state.parent) ? state.parent : state.parent.name;\n\t        return parentName ? parentName + \".\" + name : name;\n\t    };\n\t    return StateBuilder;\n\t}());\n\texports.StateBuilder = StateBuilder;\n\t//# sourceMappingURL=stateBuilder.js.map\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module state */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar predicates_1 = __webpack_require__(4);\n\tvar stateObject_1 = __webpack_require__(42);\n\tvar StateQueueManager = (function () {\n\t    function StateQueueManager(states, builder, $urlRouterProvider, listeners) {\n\t        this.states = states;\n\t        this.builder = builder;\n\t        this.$urlRouterProvider = $urlRouterProvider;\n\t        this.listeners = listeners;\n\t        this.queue = [];\n\t    }\n\t    StateQueueManager.prototype.register = function (config) {\n\t        var _a = this, states = _a.states, queue = _a.queue, $state = _a.$state;\n\t        // Wrap a new object around the state so we can store our private details easily.\n\t        // @TODO: state = new State(extend({}, config, { ... }))\n\t        var state = common_1.inherit(new stateObject_1.State(), common_1.extend({}, config, {\n\t            self: config,\n\t            resolve: config.resolve || [],\n\t            toString: function () { return config.name; }\n\t        }));\n\t        if (!predicates_1.isString(state.name))\n\t            throw new Error(\"State must have a valid name\");\n\t        if (states.hasOwnProperty(state.name) || common_1.pluck(queue, 'name').indexOf(state.name) !== -1)\n\t            throw new Error(\"State '\" + state.name + \"' is already defined\");\n\t        queue.push(state);\n\t        if (this.$state) {\n\t            this.flush($state);\n\t        }\n\t        return state;\n\t    };\n\t    StateQueueManager.prototype.flush = function ($state) {\n\t        var _a = this, queue = _a.queue, states = _a.states, builder = _a.builder;\n\t        var registered = [], // states that got registered\n\t        orphans = [], // states that dodn't yet have a parent registered\n\t        previousQueueLength = {}; // keep track of how long the queue when an orphan was first encountered\n\t        while (queue.length > 0) {\n\t            var state = queue.shift();\n\t            var result = builder.build(state);\n\t            var orphanIdx = orphans.indexOf(state);\n\t            if (result) {\n\t                if (states.hasOwnProperty(state.name))\n\t                    throw new Error(\"State '\" + name + \"' is already defined\");\n\t                states[state.name] = state;\n\t                this.attachRoute($state, state);\n\t                if (orphanIdx >= 0)\n\t                    orphans.splice(orphanIdx, 1);\n\t                registered.push(state);\n\t                continue;\n\t            }\n\t            var prev = previousQueueLength[state.name];\n\t            previousQueueLength[state.name] = queue.length;\n\t            if (orphanIdx >= 0 && prev === queue.length) {\n\t                // Wait until two consecutive iterations where no additional states were dequeued successfully.\n\t                // throw new Error(`Cannot register orphaned state '${state.name}'`);\n\t                queue.push(state);\n\t                return states;\n\t            }\n\t            else if (orphanIdx < 0) {\n\t                orphans.push(state);\n\t            }\n\t            queue.push(state);\n\t        }\n\t        if (registered.length) {\n\t            this.listeners.forEach(function (listener) { return listener(\"registered\", registered.map(function (s) { return s.self; })); });\n\t        }\n\t        return states;\n\t    };\n\t    StateQueueManager.prototype.autoFlush = function ($state) {\n\t        this.$state = $state;\n\t        this.flush($state);\n\t    };\n\t    StateQueueManager.prototype.attachRoute = function ($state, state) {\n\t        var $urlRouterProvider = this.$urlRouterProvider;\n\t        if (state.abstract || !state.url)\n\t            return;\n\t        $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\n\t                if ($state.$current.navigable !== state || !common_1.equalForKeys($match, $stateParams)) {\n\t                    $state.transitionTo(state, $match, { inherit: true, source: \"url\" });\n\t                }\n\t            }], function (rule) { return state._urlRule = rule; });\n\t    };\n\t    return StateQueueManager;\n\t}());\n\texports.StateQueueManager = StateQueueManager;\n\t//# sourceMappingURL=stateQueueManager.js.map\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @module state */ /** for typedoc */\n\t\"use strict\";\n\tvar common_1 = __webpack_require__(3);\n\tvar hof_1 = __webpack_require__(5);\n\t/**\n\t * Internal representation of a UI-Router state.\n\t *\n\t * Instances of this class are created when a [[StateDeclaration]] is registered with the [[StateRegistry]].\n\t *\n\t * A registered [[StateDeclaration]] is augmented with a getter ([[StateDeclaration.$$state]]) which returns the corresponding [[State]] object.\n\t *\n\t * This class prototypally inherits from the corresponding [[StateDeclaration]].\n\t * Each of its own properties (i.e., `hasOwnProperty`) are built using builders from the [[StateBuilder]].\n\t */\n\tvar State = (function () {\n\t    function State(config) {\n\t        common_1.extend(this, config);\n\t        // Object.freeze(this);\n\t    }\n\t    /**\n\t     * Returns true if the provided parameter is the same state.\n\t     *\n\t     * Compares the identity of the state against the passed value, which is either an object\n\t     * reference to the actual `State` instance, the original definition object passed to\n\t     * `$stateProvider.state()`, or the fully-qualified name.\n\t     *\n\t     * @param ref Can be one of (a) a `State` instance, (b) an object that was passed\n\t     *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n\t     * @returns Returns `true` if `ref` matches the current `State` instance.\n\t     */\n\t    State.prototype.is = function (ref) {\n\t        return this === ref || this.self === ref || this.fqn() === ref;\n\t    };\n\t    /**\n\t     * @deprecated this does not properly handle dot notation\n\t     * @returns Returns a dot-separated name of the state.\n\t     */\n\t    State.prototype.fqn = function () {\n\t        if (!this.parent || !(this.parent instanceof this.constructor))\n\t            return this.name;\n\t        var name = this.parent.fqn();\n\t        return name ? name + \".\" + this.name : this.name;\n\t    };\n\t    /**\n\t     * Returns the root node of this state's tree.\n\t     *\n\t     * @returns The root of this state's tree.\n\t     */\n\t    State.prototype.root = function () {\n\t        return this.parent && this.parent.root() || this;\n\t    };\n\t    /**\n\t     * Gets the state's `Param`eters\n\t     *\n\t     * Gets [[Param]] information that is owned by the state.\n\t     * If `opts.inherit` is true, it also includes the ancestor states' [[Param]] information.\n\t     *\n\t     * @param opts options\n\t     */\n\t    State.prototype.parameters = function (opts) {\n\t        opts = common_1.defaults(opts, { inherit: true });\n\t        var inherited = opts.inherit && this.parent && this.parent.parameters() || [];\n\t        return inherited.concat(common_1.values(this.params));\n\t    };\n\t    /**\n\t     * Returns a single [[Param]] that is owned by the state\n\t     *\n\t     * If `opts.inherit` is true, it also searches the ancestor states` [[Param]] information.\n\t     * @param id the name of the [[Param]] to return\n\t     * @param opts options\n\t     */\n\t    State.prototype.parameter = function (id, opts) {\n\t        if (opts === void 0) { opts = {}; }\n\t        return (this.url && this.url.parameter(id, opts) ||\n\t            common_1.find(common_1.values(this.params), hof_1.propEq('id', id)) ||\n\t            opts.inherit && this.parent && this.parent.parameter(id));\n\t    };\n\t    State.prototype.toString = function () {\n\t        return this.fqn();\n\t    };\n\t    return State;\n\t}());\n\texports.State = State;\n\t//# sourceMappingURL=stateObject.js.map\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module state */ /** */\n\tvar common_1 = __webpack_require__(3);\n\tvar predicates_1 = __webpack_require__(4);\n\tvar queue_1 = __webpack_require__(8);\n\tvar coreservices_1 = __webpack_require__(6);\n\tvar pathFactory_1 = __webpack_require__(20);\n\tvar node_1 = __webpack_require__(21);\n\tvar transitionService_1 = __webpack_require__(30);\n\tvar rejectFactory_1 = __webpack_require__(10);\n\tvar targetState_1 = __webpack_require__(14);\n\tvar param_1 = __webpack_require__(22);\n\tvar glob_1 = __webpack_require__(7);\n\tvar common_2 = __webpack_require__(3);\n\tvar common_3 = __webpack_require__(3);\n\tvar resolveContext_1 = __webpack_require__(17);\n\t/**\n\t * Provides state related service functions\n\t *\n\t * This class provides services related to ui-router states.\n\t * An instance of this class is located on the global [[UIRouter]] object.\n\t */\n\tvar StateService = (function () {\n\t    /** @internalapi */\n\t    function StateService(router) {\n\t        this.router = router;\n\t        /** @internalapi */\n\t        this.invalidCallbacks = [];\n\t        /** @hidden */\n\t        this._defaultErrorHandler = function $defaultErrorHandler($error$) {\n\t            if ($error$ instanceof Error && $error$.stack) {\n\t                console.error($error$);\n\t                console.error($error$.stack);\n\t            }\n\t            else if ($error$ instanceof rejectFactory_1.Rejection) {\n\t                console.error($error$.toString());\n\t                if ($error$.detail && $error$.detail.stack)\n\t                    console.error($error$.detail.stack);\n\t            }\n\t            else {\n\t                console.error($error$);\n\t            }\n\t        };\n\t        var getters = ['current', '$current', 'params', 'transition'];\n\t        var boundFns = Object.keys(StateService.prototype).filter(function (key) { return getters.indexOf(key) === -1; });\n\t        common_3.bindFunctions(StateService.prototype, this, this, boundFns);\n\t    }\n\t    Object.defineProperty(StateService.prototype, \"transition\", {\n\t        /**\n\t         * The [[Transition]] currently in progress (or null)\n\t         *\n\t         * This is a passthrough through to [[UIRouterGlobals.transition]]\n\t         */\n\t        get: function () { return this.router.globals.transition; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StateService.prototype, \"params\", {\n\t        /**\n\t         * The latest successful state parameters\n\t         *\n\t         * This is a passthrough through to [[UIRouterGlobals.params]]\n\t         */\n\t        get: function () { return this.router.globals.params; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StateService.prototype, \"current\", {\n\t        /**\n\t         * The current [[StateDeclaration]]\n\t         *\n\t         * This is a passthrough through to [[UIRouterGlobals.current]]\n\t         */\n\t        get: function () { return this.router.globals.current; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StateService.prototype, \"$current\", {\n\t        /**\n\t         * The current [[State]]\n\t         *\n\t         * This is a passthrough through to [[UIRouterGlobals.$current]]\n\t         */\n\t        get: function () { return this.router.globals.$current; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /**\n\t     * Handler for when [[transitionTo]] is called with an invalid state.\n\t     *\n\t     * Invokes the [[onInvalid]] callbacks, in natural order.\n\t     * Each callback's return value is checked in sequence until one of them returns an instance of TargetState.\n\t     * The results of the callbacks are wrapped in $q.when(), so the callbacks may return promises.\n\t     *\n\t     * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and the result returned.\n\t     *\n\t     * @internalapi\n\t     */\n\t    StateService.prototype._handleInvalidTargetState = function (fromPath, toState) {\n\t        var _this = this;\n\t        var fromState = pathFactory_1.PathFactory.makeTargetState(fromPath);\n\t        var globals = this.router.globals;\n\t        var latestThing = function () { return globals.transitionHistory.peekTail(); };\n\t        var latest = latestThing();\n\t        var callbackQueue = new queue_1.Queue(this.invalidCallbacks.slice());\n\t        var injector = new resolveContext_1.ResolveContext(fromPath).injector();\n\t        var checkForRedirect = function (result) {\n\t            if (!(result instanceof targetState_1.TargetState)) {\n\t                return;\n\t            }\n\t            var target = result;\n\t            // Recreate the TargetState, in case the state is now defined.\n\t            target = _this.target(target.identifier(), target.params(), target.options());\n\t            if (!target.valid())\n\t                return rejectFactory_1.Rejection.invalid(target.error()).toPromise();\n\t            if (latestThing() !== latest)\n\t                return rejectFactory_1.Rejection.superseded().toPromise();\n\t            return _this.transitionTo(target.identifier(), target.params(), target.options());\n\t        };\n\t        function invokeNextCallback() {\n\t            var nextCallback = callbackQueue.dequeue();\n\t            if (nextCallback === undefined)\n\t                return rejectFactory_1.Rejection.invalid(toState.error()).toPromise();\n\t            var callbackResult = coreservices_1.services.$q.when(nextCallback(toState, fromState, injector));\n\t            return callbackResult.then(checkForRedirect).then(function (result) { return result || invokeNextCallback(); });\n\t        }\n\t        return invokeNextCallback();\n\t    };\n\t    /**\n\t     * Registers an Invalid State handler\n\t     *\n\t     * Registers a [[OnInvalidCallback]] function to be invoked when [[StateService.transitionTo]]\n\t     * has been called with an invalid state reference parameter\n\t     *\n\t     * Example:\n\t     * ```js\n\t     * stateService.onInvalid(function(to, from, injector) {\n\t     *   if (to.name() === 'foo') {\n\t     *     let lazyLoader = injector.get('LazyLoadService');\n\t     *     return lazyLoader.load('foo')\n\t     *         .then(() => stateService.target('foo'));\n\t     *   }\n\t     * });\n\t     * ```\n\t     *\n\t     * @param {function} callback invoked when the toState is invalid\n\t     *   This function receives the (invalid) toState, the fromState, and an injector.\n\t     *   The function may optionally return a [[TargetState]] or a Promise for a TargetState.\n\t     *   If one is returned, it is treated as a redirect.\n\t     *\n\t     * @returns a function which deregisters the callback\n\t     */\n\t    StateService.prototype.onInvalid = function (callback) {\n\t        this.invalidCallbacks.push(callback);\n\t        return function deregisterListener() {\n\t            common_1.removeFrom(this.invalidCallbacks)(callback);\n\t        }.bind(this);\n\t    };\n\t    /**\n\t     * Reloads the current state\n\t     *\n\t     * A method that force reloads the current state, or a partial state hierarchy.\n\t     * All resolves are re-resolved, and components reinstantiated.\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * let app angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.reload = function(){\n\t     *     $state.reload();\n\t     *   }\n\t     * });\n\t     * ```\n\t     *\n\t     * Note: `reload()` is just an alias for:\n\t     *\n\t     * ```js\n\t     * $state.transitionTo($state.current, $state.params, {\n\t     *   reload: true, inherit: false\n\t     * });\n\t     * ```\n\t     *\n\t     * @param reloadState A state name or a state object.\n\t     *    If present, this state and all its children will be reloaded, but ancestors will not reload.\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n\t     * //and current state is 'contacts.detail.item'\n\t     * let app angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.reload = function(){\n\t     *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n\t     *     $state.reload('contact.detail');\n\t     *   }\n\t     * });\n\t     * ```\n\t     *\n\t     * @returns A promise representing the state of the new transition. See [[StateService.go]]\n\t     */\n\t    StateService.prototype.reload = function (reloadState) {\n\t        return this.transitionTo(this.current, this.params, {\n\t            reload: predicates_1.isDefined(reloadState) ? reloadState : true,\n\t            inherit: false,\n\t            notify: false\n\t        });\n\t    };\n\t    ;\n\t    /**\n\t     * Transition to a different state or parameters\n\t     *\n\t     * Convenience method for transitioning to a new state.\n\t     *\n\t     * `$state.go` calls `$state.transitionTo` internally but automatically sets options to\n\t     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`.\n\t     * This allows you to easily use an absolute or relative to path and specify\n\t     * only the parameters you'd like to update (while letting unspecified parameters\n\t     * inherit from the currently active ancestor states).\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * let app = angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.changeState = function () {\n\t     *     $state.go('contact.detail');\n\t     *   };\n\t     * });\n\t     * ```\n\t     *\n\t     *\n\t     * @param to Absolute state name, state object, or relative state path. Some examples:\n\t     *\n\t     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n\t     * - `$state.go('^')` - will go to a parent state\n\t     * - `$state.go('^.sibling')` - will go to a sibling state\n\t     * - `$state.go('.child.grandchild')` - will go to grandchild state\n\t     *\n\t     * @param params A map of the parameters that will be sent to the state, will populate $stateParams.\n\t     *\n\t     *    Any parameters that are not specified will be inherited from currently defined parameters (because of `inherit: true`).\n\t     *    This allows, for example, going to a sibling state that shares parameters specified in a parent state.\n\t     *\n\t     *    Parameter inheritance only works between common ancestor states, I.e.\n\t     *    transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n\t     *    will get you all current parameters, etc.\n\t     *\n\t     * @param options Transition options\n\t     *\n\t     * @returns {promise} A promise representing the state of the new transition.\n\t     *\n\t     * - Possible success values:\n\t     *    - $state.current\n\t     *\n\t     * - Possible rejection reasons:\n\t     *   - transition superseded - when a newer transition has been started after this one\n\t     *   - transition aborted - when the transition is cancelled by a Transition Hook returning `false`\n\t     *   - transition failed - when a transition hook errors\n\t     *   - resolve error - when a resolve has errored or rejected\n\t     *\n\t     */\n\t    StateService.prototype.go = function (to, params, options) {\n\t        var defautGoOpts = { relative: this.$current, inherit: true };\n\t        var transOpts = common_1.defaults(options, defautGoOpts, transitionService_1.defaultTransOpts);\n\t        return this.transitionTo(to, params, transOpts);\n\t    };\n\t    ;\n\t    /**\n\t     * Creates a [[TargetState]]\n\t     *\n\t     * This is a factory method for creating a TargetState\n\t     *\n\t     * This may be returned from a Transition Hook to redirect a transition, for example.\n\t     */\n\t    StateService.prototype.target = function (identifier, params, options) {\n\t        if (options === void 0) { options = {}; }\n\t        // If we're reloading, find the state object to reload from\n\t        if (predicates_1.isObject(options.reload) && !options.reload.name)\n\t            throw new Error('Invalid reload state object');\n\t        var reg = this.router.stateRegistry;\n\t        options.reloadState = options.reload === true ? reg.root() : reg.matcher.find(options.reload, options.relative);\n\t        if (options.reload && !options.reloadState)\n\t            throw new Error(\"No such reload state '\" + (predicates_1.isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n\t        var stateDefinition = reg.matcher.find(identifier, options.relative);\n\t        return new targetState_1.TargetState(identifier, stateDefinition, params, options);\n\t    };\n\t    ;\n\t    /**\n\t     * Low-level method for transitioning to a new state.\n\t     *\n\t     * The [[go]] method (which uses `transitionTo` internally) is recommended in most situations.\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * let app = angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.changeState = function () {\n\t     *     $state.transitionTo('contact.detail');\n\t     *   };\n\t     * });\n\t     * ```\n\t     *\n\t     * @param to State name or state object.\n\t     * @param toParams A map of the parameters that will be sent to the state,\n\t     *      will populate $stateParams.\n\t     * @param options Transition options\n\t     *\n\t     * @returns A promise representing the state of the new transition. See [[go]]\n\t     */\n\t    StateService.prototype.transitionTo = function (to, toParams, options) {\n\t        var _this = this;\n\t        if (toParams === void 0) { toParams = {}; }\n\t        if (options === void 0) { options = {}; }\n\t        var router = this.router;\n\t        var globals = router.globals;\n\t        var transHistory = globals.transitionHistory;\n\t        options = common_1.defaults(options, transitionService_1.defaultTransOpts);\n\t        options = common_1.extend(options, { current: transHistory.peekTail.bind(transHistory) });\n\t        var ref = this.target(to, toParams, options);\n\t        var latestSuccess = globals.successfulTransitions.peekTail();\n\t        var rootPath = function () { return [new node_1.PathNode(_this.router.stateRegistry.root())]; };\n\t        var currentPath = latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n\t        if (!ref.exists())\n\t            return this._handleInvalidTargetState(currentPath, ref);\n\t        if (!ref.valid())\n\t            return common_1.silentRejection(ref.error());\n\t        /**\n\t         * Special handling for Ignored, Aborted, and Redirected transitions\n\t         *\n\t         * The semantics for the transition.run() promise and the StateService.transitionTo()\n\t         * promise differ. For instance, the run() promise may be rejected because it was\n\t         * IGNORED, but the transitionTo() promise is resolved because from the user perspective\n\t         * no error occurred.  Likewise, the transition.run() promise may be rejected because of\n\t         * a Redirect, but the transitionTo() promise is chained to the new Transition's promise.\n\t         */\n\t        var rejectedTransitionHandler = function (transition) { return function (error) {\n\t            if (error instanceof rejectFactory_1.Rejection) {\n\t                if (error.type === rejectFactory_1.RejectType.IGNORED) {\n\t                    // Consider ignored `Transition.run()` as a successful `transitionTo`\n\t                    router.urlRouter.update();\n\t                    return coreservices_1.services.$q.when(globals.current);\n\t                }\n\t                var detail = error.detail;\n\t                if (error.type === rejectFactory_1.RejectType.SUPERSEDED && error.redirected && detail instanceof targetState_1.TargetState) {\n\t                    // If `Transition.run()` was redirected, allow the `transitionTo()` promise to resolve successfully\n\t                    // by returning the promise for the new (redirect) `Transition.run()`.\n\t                    var redirect = transition.redirect(detail);\n\t                    return redirect.run().catch(rejectedTransitionHandler(redirect));\n\t                }\n\t                if (error.type === rejectFactory_1.RejectType.ABORTED) {\n\t                    router.urlRouter.update();\n\t                }\n\t            }\n\t            var errorHandler = _this.defaultErrorHandler();\n\t            errorHandler(error);\n\t            return coreservices_1.services.$q.reject(error);\n\t        }; };\n\t        var transition = this.router.transitionService.create(currentPath, ref);\n\t        var transitionToPromise = transition.run().catch(rejectedTransitionHandler(transition));\n\t        common_1.silenceUncaughtInPromise(transitionToPromise); // issue #2676\n\t        // Return a promise for the transition, which also has the transition object on it.\n\t        return common_1.extend(transitionToPromise, { transition: transition });\n\t    };\n\t    ;\n\t    /**\n\t     * Checks if the current state *is* the provided state\n\t     *\n\t     * Similar to [[includes]] but only checks for the full state name.\n\t     * If params is supplied then it will be tested for strict equality against the current\n\t     * active params object, so all params must match with none missing and no extras.\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * $state.$current.name = 'contacts.details.item';\n\t     *\n\t     * // absolute name\n\t     * $state.is('contact.details.item'); // returns true\n\t     * $state.is(contactDetailItemStateObject); // returns true\n\t     * ```\n\t     *\n\t     * // relative name (. and ^), typically from a template\n\t     * // E.g. from the 'contacts.details' template\n\t     * ```html\n\t     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n\t     * ```\n\t     *\n\t     * @param stateOrName The state name (absolute or relative) or state object you'd like to check.\n\t     * @param params A param object, e.g. `{sectionId: section.id}`, that you'd like\n\t     * to test against the current active state.\n\t     * @param options An options object. The options are:\n\t     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n\t     *     test relative to `options.relative` state (or name).\n\t     *\n\t     * @returns Returns true if it is the state.\n\t     */\n\t    StateService.prototype.is = function (stateOrName, params, options) {\n\t        options = common_1.defaults(options, { relative: this.$current });\n\t        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n\t        if (!predicates_1.isDefined(state))\n\t            return undefined;\n\t        if (this.$current !== state)\n\t            return false;\n\t        return predicates_1.isDefined(params) && params !== null ? param_1.Param.equals(state.parameters(), this.params, params) : true;\n\t    };\n\t    ;\n\t    /**\n\t     * Checks if the current state *includes* the provided state\n\t     *\n\t     * A method to determine if the current active state is equal to or is the child of the\n\t     * state stateName. If any params are passed then they will be tested for a match as well.\n\t     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n\t     *\n\t     * #### Example when `$state.$current.name === 'contacts.details.item'`\n\t     * ```js\n\t     * // Using partial names\n\t     * $state.includes(\"contacts\"); // returns true\n\t     * $state.includes(\"contacts.details\"); // returns true\n\t     * $state.includes(\"contacts.details.item\"); // returns true\n\t     * $state.includes(\"contacts.list\"); // returns false\n\t     * $state.includes(\"about\"); // returns false\n\t     * ```\n\t     *\n\t     * #### Glob Examples when `* $state.$current.name === 'contacts.details.item.url'`:\n\t     * ```js\n\t     * $state.includes(\"*.details.*.*\"); // returns true\n\t     * $state.includes(\"*.details.**\"); // returns true\n\t     * $state.includes(\"**.item.**\"); // returns true\n\t     * $state.includes(\"*.details.item.url\"); // returns true\n\t     * $state.includes(\"*.details.*.url\"); // returns true\n\t     * $state.includes(\"*.details.*\"); // returns false\n\t     * $state.includes(\"item.**\"); // returns false\n\t     * ```\n\t     *\n\t     * @param stateOrName A partial name, relative name, glob pattern,\n\t     *   or state object to be searched for within the current state name.\n\t     * @param params A param object, e.g. `{sectionId: section.id}`,\n\t     *   that you'd like to test against the current active state.\n\t     * @param options An options object. The options are:\n\t     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n\t     *     test relative to `options.relative` state (or name).\n\t     *\n\t     * @returns {boolean} Returns true if it does include the state\n\t     */\n\t    StateService.prototype.includes = function (stateOrName, params, options) {\n\t        options = common_1.defaults(options, { relative: this.$current });\n\t        var glob = predicates_1.isString(stateOrName) && glob_1.Glob.fromString(stateOrName);\n\t        if (glob) {\n\t            if (!glob.matches(this.$current.name))\n\t                return false;\n\t            stateOrName = this.$current.name;\n\t        }\n\t        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n\t        if (!predicates_1.isDefined(state))\n\t            return undefined;\n\t        if (!predicates_1.isDefined(include[state.name]))\n\t            return false;\n\t        // @TODO Replace with Param.equals() ?\n\t        return params ? common_2.equalForKeys(param_1.Param.values(state.parameters(), params), this.params, Object.keys(params)) : true;\n\t    };\n\t    ;\n\t    /**\n\t     * Generates a URL for a state and parameters\n\t     *\n\t     * Returns the url for the given state populated with the given params.\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n\t     * ```\n\t     *\n\t     * @param stateOrName The state name or state object you'd like to generate a url from.\n\t     * @param params An object of parameter values to fill the state's required parameters.\n\t     * @param options Options object. The options are:\n\t     *\n\t     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n\t     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n\t     *    ancestor with a valid url).\n\t     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n\t     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'),\n\t     *    defines which state to be relative from.\n\t     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n\t     *\n\t     * @returns {string} compiled state url\n\t     */\n\t    StateService.prototype.href = function (stateOrName, params, options) {\n\t        var defaultHrefOpts = {\n\t            lossy: true,\n\t            inherit: true,\n\t            absolute: false,\n\t            relative: this.$current\n\t        };\n\t        options = common_1.defaults(options, defaultHrefOpts);\n\t        params = params || {};\n\t        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n\t        if (!predicates_1.isDefined(state))\n\t            return null;\n\t        if (options.inherit)\n\t            params = this.params.$inherit(params, this.$current, state);\n\t        var nav = (state && options.lossy) ? state.navigable : state;\n\t        if (!nav || nav.url === undefined || nav.url === null) {\n\t            return null;\n\t        }\n\t        return this.router.urlRouter.href(nav.url, param_1.Param.values(state.parameters(), params), {\n\t            absolute: options.absolute\n\t        });\n\t    };\n\t    ;\n\t    /**\n\t     * Sets or gets the default [[transitionTo]] error handler.\n\t     *\n\t     * The error handler is called when a [[Transition]] is rejected or when any error occurred during the Transition.\n\t     * This includes errors caused by resolves and transition hooks.\n\t     *\n\t     * Note:\n\t     * This handler does not receive certain Transition rejections.\n\t     * Redirected and Ignored Transitions are not considered to be errors by [[StateService.transitionTo]].\n\t     *\n\t     * The built-in default error handler logs the error to the console.\n\t     *\n\t     * You can provide your own custom handler.\n\t     *\n\t     * #### Example:\n\t     * ```js\n\t     * stateService.defaultErrorHandler(function() {\n\t     *   // Do not log transitionTo errors\n\t     * });\n\t     * ```\n\t     *\n\t     * @param handler a global error handler function\n\t     * @returns the current global error handler\n\t     */\n\t    StateService.prototype.defaultErrorHandler = function (handler) {\n\t        return this._defaultErrorHandler = handler || this._defaultErrorHandler;\n\t    };\n\t    StateService.prototype.get = function (stateOrName, base) {\n\t        var reg = this.router.stateRegistry;\n\t        if (arguments.length === 0)\n\t            return reg.get();\n\t        return reg.get(stateOrName, base || this.$current);\n\t    };\n\t    return StateService;\n\t}());\n\texports.StateService = StateService;\n\t//# sourceMappingURL=stateService.js.map\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module core */ /** */\n\tvar stateParams_1 = __webpack_require__(45);\n\tvar queue_1 = __webpack_require__(8);\n\tvar common_1 = __webpack_require__(3);\n\t/**\n\t * Global mutable state\n\t */\n\tvar Globals = (function () {\n\t    function Globals(transitionService) {\n\t        var _this = this;\n\t        this.params = new stateParams_1.StateParams();\n\t        this.transitionHistory = new queue_1.Queue([], 1);\n\t        this.successfulTransitions = new queue_1.Queue([], 1);\n\t        var beforeNewTransition = function ($transition$) {\n\t            _this.transition = $transition$;\n\t            _this.transitionHistory.enqueue($transition$);\n\t            var updateGlobalState = function () {\n\t                _this.successfulTransitions.enqueue($transition$);\n\t                _this.$current = $transition$.$to();\n\t                _this.current = _this.$current.self;\n\t                common_1.copy($transition$.params(), _this.params);\n\t            };\n\t            $transition$.onSuccess({}, updateGlobalState, { priority: 10000 });\n\t            var clearCurrentTransition = function () { if (_this.transition === $transition$)\n\t                _this.transition = null; };\n\t            $transition$.promise.then(clearCurrentTransition, clearCurrentTransition);\n\t        };\n\t        transitionService.onBefore({}, beforeNewTransition);\n\t    }\n\t    return Globals;\n\t}());\n\texports.Globals = Globals;\n\t//# sourceMappingURL=globals.js.map\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/** @module params */ /** for typedoc */\n\tvar common_1 = __webpack_require__(3);\n\tvar StateParams = (function () {\n\t    function StateParams(params) {\n\t        if (params === void 0) { params = {}; }\n\t        common_1.extend(this, params);\n\t    }\n\t    /**\n\t     * Merges a set of parameters with all parameters inherited between the common parents of the\n\t     * current state and a given destination state.\n\t     *\n\t     * @param {Object} newParams The set of parameters which will be composited with inherited params.\n\t     * @param {Object} $current Internal definition of object representing the current state.\n\t     * @param {Object} $to Internal definition of object representing state to transition to.\n\t     */\n\t    StateParams.prototype.$inherit = function (newParams, $current, $to) {\n\t        var parents = common_1.ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n\t        for (var i in parents) {\n\t            if (!parents[i] || !parents[i].params)\n\t                continue;\n\t            parentParams = Object.keys(parents[i].params);\n\t            if (!parentParams.length)\n\t                continue;\n\t            for (var j in parentParams) {\n\t                if (inheritList.indexOf(parentParams[j]) >= 0)\n\t                    continue;\n\t                inheritList.push(parentParams[j]);\n\t                inherited[parentParams[j]] = this[parentParams[j]];\n\t            }\n\t        }\n\t        return common_1.extend({}, inherited, newParams);\n\t    };\n\t    ;\n\t    return StateParams;\n\t}());\n\texports.StateParams = StateParams;\n\t//# sourceMappingURL=stateParams.js.map\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t/**\n\t * This module contains code for State Parameters.\n\t *\n\t * See [[ParamDeclaration]]\n\t *\n\t * @preferred @module params\n\t */ /** for typedoc */\n\t__export(__webpack_require__(22));\n\t__export(__webpack_require__(28));\n\t__export(__webpack_require__(45));\n\t__export(__webpack_require__(24));\n\t//# sourceMappingURL=module.js.map\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t/** @module path */ /** for typedoc */\n\t__export(__webpack_require__(21));\n\t__export(__webpack_require__(20));\n\t//# sourceMappingURL=module.js.map\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t/** @module resolve */ /** for typedoc */\n\t__export(__webpack_require__(18));\n\t__export(__webpack_require__(19));\n\t__export(__webpack_require__(17));\n\t//# sourceMappingURL=module.js.map\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t/**\n\t * The state subsystem\n\t *\n\t * This subsystem implements the ui-router state tree\n\t *\n\t * - The [[StateService]] has state-related service methods such as:\n\t *   - [[StateService.get]]: Get a registered [[StateDeclaration]] object\n\t *   - [[StateService.go]]: Transition from the current state to a new state\n\t *   - [[StateService.reload]]: Reload the current state\n\t *   - [[StateService.target]]: Get a [[TargetState]] (useful when redirecting from a Transition Hook)\n\t *   - [[StateService.onInvalid]]: Register a callback for when a transition to an invalid state is started\n\t *   - [[StateService.defaultErrorHandler]]: Register a global callback for when a transition errors\n\t * - The [[StateDeclaration]] interface defines the shape of a state declaration\n\t * - The [[StateRegistry]] contains all the registered states\n\t *   - States can be added/removed using the [[StateRegistry.register]] and [[StateRegistry.deregister]]\n\t *     - Note: Bootstrap state registration differs by front-end framework.\n\t *   - Get notified of state registration/deregistration using [[StateRegistry.onStatesChanged]].\n\t *\n\t * @preferred @module state\n\t */ /** for typedoc */\n\t__export(__webpack_require__(40));\n\t__export(__webpack_require__(42));\n\t__export(__webpack_require__(39));\n\t__export(__webpack_require__(41));\n\t__export(__webpack_require__(38));\n\t__export(__webpack_require__(43));\n\t__export(__webpack_require__(14));\n\t//# sourceMappingURL=module.js.map\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t/**\n\t * This module contains APIs related to a Transition.\n\t *\n\t * See:\n\t * - [[TransitionService]]\n\t * - [[Transition]]\n\t * - [[HookFn]], [[TransitionHookFn]], [[TransitionStateHookFn]], [[HookMatchCriteria]], [[HookResult]]\n\t *\n\t * @internal @preferred @module transition\n\t */ /** for typedoc */\n\t__export(__webpack_require__(16));\n\t__export(__webpack_require__(15));\n\t__export(__webpack_require__(10));\n\t__export(__webpack_require__(11));\n\t__export(__webpack_require__(13));\n\t__export(__webpack_require__(30));\n\t//# sourceMappingURL=module.js.map\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t/** @module url */ /** for typedoc */\n\t__export(__webpack_require__(27));\n\t__export(__webpack_require__(23));\n\t__export(__webpack_require__(26));\n\t__export(__webpack_require__(29));\n\t//# sourceMappingURL=module.js.map\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t/** @module view */ /** for typedoc */\n\t__export(__webpack_require__(37));\n\t//# sourceMappingURL=module.js.map\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t/**\n\t * Naive, pure JS implementation of core ui-router services\n\t *\n\t * @module justjs\n\t */ /** */\n\t__export(__webpack_require__(1));\n\tvar coreservices_1 = __webpack_require__(6);\n\tvar strings_1 = __webpack_require__(9);\n\tvar predicates_1 = __webpack_require__(4);\n\tvar common_1 = __webpack_require__(3);\n\t/** $q-like promise api */\n\tcoreservices_1.services.$q = (function (executor) { return new Promise(executor); });\n\tcoreservices_1.services.$q.when = function (val) { return Promise.resolve(val); };\n\tcoreservices_1.services.$q.reject = function (val) { return Promise.reject(val); };\n\tcoreservices_1.services.$q.defer = function () {\n\t    var deferred = {};\n\t    deferred.promise = new Promise(function (resolve, reject) {\n\t        deferred.resolve = resolve;\n\t        deferred.reject = reject;\n\t    });\n\t    return deferred;\n\t};\n\tcoreservices_1.services.$q.all = function (promises) {\n\t    if (predicates_1.isArray(promises)) {\n\t        return Promise.all(promises);\n\t    }\n\t    if (predicates_1.isObject(promises)) {\n\t        var p = promises;\n\t        // Convert promises map to promises array.\n\t        // When each promise resolves, map it to a tuple { key: key, val: val }\n\t        var objectToTuples = Object.keys(promises)\n\t            .map(function (key) { return p[key].then(function (val) { return ({ key: key, val: val }); }); });\n\t        var tuplesToObject = function (values) {\n\t            return values.reduce(function (acc, tuple) { acc[tuple.key] = tuple.val; return acc; }, {});\n\t        };\n\t        // Then wait for all promises to resolve, and convert them back to an object\n\t        return coreservices_1.services.$q.all(objectToTuples).then(tuplesToObject);\n\t    }\n\t};\n\t// angular1-like injector api\n\t// globally available injectables\n\tvar globals = {};\n\tcoreservices_1.services.$injector = {\n\t    get: function (name) { return globals[name]; },\n\t    has: function (name) { return coreservices_1.services.$injector.get(name) != null; },\n\t    invoke: function (fn, context, locals) {\n\t        var all = common_1.extend({}, globals, locals || {});\n\t        var params = coreservices_1.services.$injector.annotate(fn);\n\t        var ensureExist = common_1.assertPredicate(function (key) { return all.hasOwnProperty(key); }, function (key) { return (\"Could not find Dependency Injection token: \" + strings_1.stringify(key)); });\n\t        var args = params.filter(ensureExist).map(function (x) { return all[x]; });\n\t        if (predicates_1.isFunction(fn))\n\t            return fn.apply(context, args);\n\t        return fn.slice(-1)[0].apply(context, args);\n\t    },\n\t    // http://stackoverflow.com/questions/1007981\n\t    annotate: function (fn) {\n\t        var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\t        var ARGUMENT_NAMES = /([^\\s,]+)/g;\n\t        if (!predicates_1.isInjectable(fn))\n\t            throw new Error(\"Not an injectable function: \" + fn);\n\t        if (fn && fn['$inject'])\n\t            return fn['$inject'];\n\t        if (predicates_1.isArray(fn))\n\t            return fn.slice(0, -1);\n\t        var fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n\t        var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n\t        return result || [];\n\t    }\n\t};\n\tvar loc = coreservices_1.services.location;\n\tloc.hash = function () { return \"\"; };\n\tloc.path = function () { return location.hash.replace(/^#/, \"\"); };\n\tloc.search = function () { return location.search; };\n\tloc.setUrl = function (url, replace) {\n\t    if (replace === void 0) { replace = true; }\n\t    if (url)\n\t        location.hash = url;\n\t};\n\tloc.onChange = function (cb) {\n\t    window.addEventListener(\"hashchange\", cb, false);\n\t};\n\tvar locCfg = coreservices_1.services.locationConfig;\n\tlocCfg.port = function () { return location.port; };\n\tlocCfg.protocol = function () { return location.protocol; };\n\tlocCfg.host = function () { return location.host; };\n\tlocCfg.baseHref = function () { return \"\"; };\n\tlocCfg.html5Mode = function () { return false; };\n\tlocCfg.hashPrefix = function () { return \"\"; };\n\t//# sourceMappingURL=justjs.js.map\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(55);\n\tvar of_1 = __webpack_require__(69);\n\tObservable_1.Observable.of = of_1.of;\n\t//# sourceMappingURL=of.js.map\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(56);\n\tvar toSubscriber_1 = __webpack_require__(57);\n\tvar observable_1 = __webpack_require__(68);\n\t/**\n\t * A representation of any set of values over any amount of time. This the most basic building block\n\t * of RxJS.\n\t *\n\t * @class Observable<T>\n\t */\n\tvar Observable = (function () {\n\t    /**\n\t     * @constructor\n\t     * @param {Function} subscribe the function that is  called when the Observable is\n\t     * initially subscribed to. This function is given a Subscriber, to which new values\n\t     * can be `next`ed, or an `error` method can be called to raise an error, or\n\t     * `complete` can be called to notify of a successful completion.\n\t     */\n\t    function Observable(subscribe) {\n\t        this._isScalar = false;\n\t        if (subscribe) {\n\t            this._subscribe = subscribe;\n\t        }\n\t    }\n\t    /**\n\t     * Creates a new Observable, with this Observable as the source, and the passed\n\t     * operator defined as the new observable's operator.\n\t     * @method lift\n\t     * @param {Operator} operator the operator defining the operation to take on the observable\n\t     * @return {Observable} a new observable with the Operator applied\n\t     */\n\t    Observable.prototype.lift = function (operator) {\n\t        var observable = new Observable();\n\t        observable.source = this;\n\t        observable.operator = operator;\n\t        return observable;\n\t    };\n\t    /**\n\t     * Registers handlers for handling emitted values, error and completions from the observable, and\n\t     *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n\t     * @method subscribe\n\t     * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n\t     *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n\t     * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n\t     *  the error will be thrown as unhandled\n\t     * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n\t     * @return {ISubscription} a subscription reference to the registered handlers\n\t     */\n\t    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n\t        var operator = this.operator;\n\t        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n\t        if (operator) {\n\t            operator.call(sink, this);\n\t        }\n\t        else {\n\t            sink.add(this._subscribe(sink));\n\t        }\n\t        if (sink.syncErrorThrowable) {\n\t            sink.syncErrorThrowable = false;\n\t            if (sink.syncErrorThrown) {\n\t                throw sink.syncErrorValue;\n\t            }\n\t        }\n\t        return sink;\n\t    };\n\t    /**\n\t     * @method forEach\n\t     * @param {Function} next a handler for each value emitted by the observable\n\t     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n\t     * @return {Promise} a promise that either resolves on observable completion or\n\t     *  rejects with the handled error\n\t     */\n\t    Observable.prototype.forEach = function (next, PromiseCtor) {\n\t        var _this = this;\n\t        if (!PromiseCtor) {\n\t            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n\t                PromiseCtor = root_1.root.Rx.config.Promise;\n\t            }\n\t            else if (root_1.root.Promise) {\n\t                PromiseCtor = root_1.root.Promise;\n\t            }\n\t        }\n\t        if (!PromiseCtor) {\n\t            throw new Error('no Promise impl found');\n\t        }\n\t        return new PromiseCtor(function (resolve, reject) {\n\t            var subscription = _this.subscribe(function (value) {\n\t                if (subscription) {\n\t                    // if there is a subscription, then we can surmise\n\t                    // the next handling is asynchronous. Any errors thrown\n\t                    // need to be rejected explicitly and unsubscribe must be\n\t                    // called manually\n\t                    try {\n\t                        next(value);\n\t                    }\n\t                    catch (err) {\n\t                        reject(err);\n\t                        subscription.unsubscribe();\n\t                    }\n\t                }\n\t                else {\n\t                    // if there is NO subscription, then we're getting a nexted\n\t                    // value synchronously during subscription. We can just call it.\n\t                    // If it errors, Observable's `subscribe` will ensure the\n\t                    // unsubscription logic is called, then synchronously rethrow the error.\n\t                    // After that, Promise will trap the error and send it\n\t                    // down the rejection path.\n\t                    next(value);\n\t                }\n\t            }, reject, resolve);\n\t        });\n\t    };\n\t    Observable.prototype._subscribe = function (subscriber) {\n\t        return this.source.subscribe(subscriber);\n\t    };\n\t    /**\n\t     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n\t     * @method Symbol.observable\n\t     * @return {Observable} this instance of the observable\n\t     */\n\t    Observable.prototype[observable_1.$$observable] = function () {\n\t        return this;\n\t    };\n\t    // HACK: Since TypeScript inherits static properties too, we have to\n\t    // fight against TypeScript here so Subject can have a different static create signature\n\t    /**\n\t     * Creates a new cold Observable by calling the Observable constructor\n\t     * @static true\n\t     * @owner Observable\n\t     * @method create\n\t     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n\t     * @return {Observable} a new cold observable\n\t     */\n\t    Observable.create = function (subscribe) {\n\t        return new Observable(subscribe);\n\t    };\n\t    return Observable;\n\t}());\n\texports.Observable = Observable;\n\t//# sourceMappingURL=Observable.js.map\n\n/***/ },\n/* 56 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\tvar objectTypes = {\n\t    'boolean': false,\n\t    'function': true,\n\t    'object': true,\n\t    'number': false,\n\t    'string': false,\n\t    'undefined': false\n\t};\n\texports.root = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);\n\tvar freeGlobal = objectTypes[typeof global] && global;\n\tif (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n\t    exports.root = freeGlobal;\n\t}\n\t//# sourceMappingURL=root.js.map\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Subscriber_1 = __webpack_require__(58);\n\tvar rxSubscriber_1 = __webpack_require__(67);\n\tfunction toSubscriber(nextOrObserver, error, complete) {\n\t    if (nextOrObserver) {\n\t        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n\t            return nextOrObserver;\n\t        }\n\t        if (nextOrObserver[rxSubscriber_1.$$rxSubscriber]) {\n\t            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();\n\t        }\n\t    }\n\t    if (!nextOrObserver && !error && !complete) {\n\t        return new Subscriber_1.Subscriber();\n\t    }\n\t    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n\t}\n\texports.toSubscriber = toSubscriber;\n\t//# sourceMappingURL=toSubscriber.js.map\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar isFunction_1 = __webpack_require__(59);\n\tvar Subscription_1 = __webpack_require__(60);\n\tvar Observer_1 = __webpack_require__(66);\n\tvar rxSubscriber_1 = __webpack_require__(67);\n\t/**\n\t * Implements the {@link Observer} interface and extends the\n\t * {@link Subscription} class. While the {@link Observer} is the public API for\n\t * consuming the values of an {@link Observable}, all Observers get converted to\n\t * a Subscriber, in order to provide Subscription-like capabilities such as\n\t * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n\t * implementing operators, but it is rarely used as a public API.\n\t *\n\t * @class Subscriber<T>\n\t */\n\tvar Subscriber = (function (_super) {\n\t    __extends(Subscriber, _super);\n\t    /**\n\t     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n\t     * defined Observer or a `next` callback function.\n\t     * @param {function(e: ?any): void} [error] The `error` callback of an\n\t     * Observer.\n\t     * @param {function(): void} [complete] The `complete` callback of an\n\t     * Observer.\n\t     */\n\t    function Subscriber(destinationOrNext, error, complete) {\n\t        _super.call(this);\n\t        this.syncErrorValue = null;\n\t        this.syncErrorThrown = false;\n\t        this.syncErrorThrowable = false;\n\t        this.isStopped = false;\n\t        switch (arguments.length) {\n\t            case 0:\n\t                this.destination = Observer_1.empty;\n\t                break;\n\t            case 1:\n\t                if (!destinationOrNext) {\n\t                    this.destination = Observer_1.empty;\n\t                    break;\n\t                }\n\t                if (typeof destinationOrNext === 'object') {\n\t                    if (destinationOrNext instanceof Subscriber) {\n\t                        this.destination = destinationOrNext;\n\t                        this.destination.add(this);\n\t                    }\n\t                    else {\n\t                        this.syncErrorThrowable = true;\n\t                        this.destination = new SafeSubscriber(this, destinationOrNext);\n\t                    }\n\t                    break;\n\t                }\n\t            default:\n\t                this.syncErrorThrowable = true;\n\t                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n\t                break;\n\t        }\n\t    }\n\t    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () { return this; };\n\t    /**\n\t     * A static factory for a Subscriber, given a (potentially partial) definition\n\t     * of an Observer.\n\t     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n\t     * @param {function(e: ?any): void} [error] The `error` callback of an\n\t     * Observer.\n\t     * @param {function(): void} [complete] The `complete` callback of an\n\t     * Observer.\n\t     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n\t     * Observer represented by the given arguments.\n\t     */\n\t    Subscriber.create = function (next, error, complete) {\n\t        var subscriber = new Subscriber(next, error, complete);\n\t        subscriber.syncErrorThrowable = false;\n\t        return subscriber;\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive notifications of type `next` from\n\t     * the Observable, with a value. The Observable may call this method 0 or more\n\t     * times.\n\t     * @param {T} [value] The `next` value.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.next = function (value) {\n\t        if (!this.isStopped) {\n\t            this._next(value);\n\t        }\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive notifications of type `error` from\n\t     * the Observable, with an attached {@link Error}. Notifies the Observer that\n\t     * the Observable has experienced an error condition.\n\t     * @param {any} [err] The `error` exception.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.error = function (err) {\n\t        if (!this.isStopped) {\n\t            this.isStopped = true;\n\t            this._error(err);\n\t        }\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive a valueless notification of type\n\t     * `complete` from the Observable. Notifies the Observer that the Observable\n\t     * has finished sending push-based notifications.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.complete = function () {\n\t        if (!this.isStopped) {\n\t            this.isStopped = true;\n\t            this._complete();\n\t        }\n\t    };\n\t    Subscriber.prototype.unsubscribe = function () {\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.isStopped = true;\n\t        _super.prototype.unsubscribe.call(this);\n\t    };\n\t    Subscriber.prototype._next = function (value) {\n\t        this.destination.next(value);\n\t    };\n\t    Subscriber.prototype._error = function (err) {\n\t        this.destination.error(err);\n\t        this.unsubscribe();\n\t    };\n\t    Subscriber.prototype._complete = function () {\n\t        this.destination.complete();\n\t        this.unsubscribe();\n\t    };\n\t    return Subscriber;\n\t}(Subscription_1.Subscription));\n\texports.Subscriber = Subscriber;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar SafeSubscriber = (function (_super) {\n\t    __extends(SafeSubscriber, _super);\n\t    function SafeSubscriber(_parent, observerOrNext, error, complete) {\n\t        _super.call(this);\n\t        this._parent = _parent;\n\t        var next;\n\t        var context = this;\n\t        if (isFunction_1.isFunction(observerOrNext)) {\n\t            next = observerOrNext;\n\t        }\n\t        else if (observerOrNext) {\n\t            context = observerOrNext;\n\t            next = observerOrNext.next;\n\t            error = observerOrNext.error;\n\t            complete = observerOrNext.complete;\n\t            if (isFunction_1.isFunction(context.unsubscribe)) {\n\t                this.add(context.unsubscribe.bind(context));\n\t            }\n\t            context.unsubscribe = this.unsubscribe.bind(this);\n\t        }\n\t        this._context = context;\n\t        this._next = next;\n\t        this._error = error;\n\t        this._complete = complete;\n\t    }\n\t    SafeSubscriber.prototype.next = function (value) {\n\t        if (!this.isStopped && this._next) {\n\t            var _parent = this._parent;\n\t            if (!_parent.syncErrorThrowable) {\n\t                this.__tryOrUnsub(this._next, value);\n\t            }\n\t            else if (this.__tryOrSetError(_parent, this._next, value)) {\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.error = function (err) {\n\t        if (!this.isStopped) {\n\t            var _parent = this._parent;\n\t            if (this._error) {\n\t                if (!_parent.syncErrorThrowable) {\n\t                    this.__tryOrUnsub(this._error, err);\n\t                    this.unsubscribe();\n\t                }\n\t                else {\n\t                    this.__tryOrSetError(_parent, this._error, err);\n\t                    this.unsubscribe();\n\t                }\n\t            }\n\t            else if (!_parent.syncErrorThrowable) {\n\t                this.unsubscribe();\n\t                throw err;\n\t            }\n\t            else {\n\t                _parent.syncErrorValue = err;\n\t                _parent.syncErrorThrown = true;\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.complete = function () {\n\t        if (!this.isStopped) {\n\t            var _parent = this._parent;\n\t            if (this._complete) {\n\t                if (!_parent.syncErrorThrowable) {\n\t                    this.__tryOrUnsub(this._complete);\n\t                    this.unsubscribe();\n\t                }\n\t                else {\n\t                    this.__tryOrSetError(_parent, this._complete);\n\t                    this.unsubscribe();\n\t                }\n\t            }\n\t            else {\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n\t        try {\n\t            fn.call(this._context, value);\n\t        }\n\t        catch (err) {\n\t            this.unsubscribe();\n\t            throw err;\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n\t        try {\n\t            fn.call(this._context, value);\n\t        }\n\t        catch (err) {\n\t            parent.syncErrorValue = err;\n\t            parent.syncErrorThrown = true;\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    SafeSubscriber.prototype._unsubscribe = function () {\n\t        var _parent = this._parent;\n\t        this._context = null;\n\t        this._parent = null;\n\t        _parent.unsubscribe();\n\t    };\n\t    return SafeSubscriber;\n\t}(Subscriber));\n\t//# sourceMappingURL=Subscriber.js.map\n\n/***/ },\n/* 59 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction isFunction(x) {\n\t    return typeof x === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t//# sourceMappingURL=isFunction.js.map\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar isArray_1 = __webpack_require__(61);\n\tvar isObject_1 = __webpack_require__(62);\n\tvar isFunction_1 = __webpack_require__(59);\n\tvar tryCatch_1 = __webpack_require__(63);\n\tvar errorObject_1 = __webpack_require__(64);\n\tvar UnsubscriptionError_1 = __webpack_require__(65);\n\t/**\n\t * Represents a disposable resource, such as the execution of an Observable. A\n\t * Subscription has one important method, `unsubscribe`, that takes no argument\n\t * and just disposes the resource held by the subscription.\n\t *\n\t * Additionally, subscriptions may be grouped together through the `add()`\n\t * method, which will attach a child Subscription to the current Subscription.\n\t * When a Subscription is unsubscribed, all its children (and its grandchildren)\n\t * will be unsubscribed as well.\n\t *\n\t * @class Subscription\n\t */\n\tvar Subscription = (function () {\n\t    /**\n\t     * @param {function(): void} [unsubscribe] A function describing how to\n\t     * perform the disposal of resources when the `unsubscribe` method is called.\n\t     */\n\t    function Subscription(unsubscribe) {\n\t        /**\n\t         * A flag to indicate whether this Subscription has already been unsubscribed.\n\t         * @type {boolean}\n\t         */\n\t        this.closed = false;\n\t        if (unsubscribe) {\n\t            this._unsubscribe = unsubscribe;\n\t        }\n\t    }\n\t    /**\n\t     * Disposes the resources held by the subscription. May, for instance, cancel\n\t     * an ongoing Observable execution or cancel any other type of work that\n\t     * started when the Subscription was created.\n\t     * @return {void}\n\t     */\n\t    Subscription.prototype.unsubscribe = function () {\n\t        var hasErrors = false;\n\t        var errors;\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.closed = true;\n\t        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n\t        this._subscriptions = null;\n\t        if (isFunction_1.isFunction(_unsubscribe)) {\n\t            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n\t            if (trial === errorObject_1.errorObject) {\n\t                hasErrors = true;\n\t                (errors = errors || []).push(errorObject_1.errorObject.e);\n\t            }\n\t        }\n\t        if (isArray_1.isArray(_subscriptions)) {\n\t            var index = -1;\n\t            var len = _subscriptions.length;\n\t            while (++index < len) {\n\t                var sub = _subscriptions[index];\n\t                if (isObject_1.isObject(sub)) {\n\t                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n\t                    if (trial === errorObject_1.errorObject) {\n\t                        hasErrors = true;\n\t                        errors = errors || [];\n\t                        var err = errorObject_1.errorObject.e;\n\t                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n\t                            errors = errors.concat(err.errors);\n\t                        }\n\t                        else {\n\t                            errors.push(err);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        if (hasErrors) {\n\t            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n\t        }\n\t    };\n\t    /**\n\t     * Adds a tear down to be called during the unsubscribe() of this\n\t     * Subscription.\n\t     *\n\t     * If the tear down being added is a subscription that is already\n\t     * unsubscribed, is the same reference `add` is being called on, or is\n\t     * `Subscription.EMPTY`, it will not be added.\n\t     *\n\t     * If this subscription is already in an `closed` state, the passed\n\t     * tear down logic will be executed immediately.\n\t     *\n\t     * @param {TeardownLogic} teardown The additional logic to execute on\n\t     * teardown.\n\t     * @return {Subscription} Returns the Subscription used or created to be\n\t     * added to the inner subscriptions list. This Subscription can be used with\n\t     * `remove()` to remove the passed teardown logic from the inner subscriptions\n\t     * list.\n\t     */\n\t    Subscription.prototype.add = function (teardown) {\n\t        if (!teardown || (teardown === Subscription.EMPTY)) {\n\t            return Subscription.EMPTY;\n\t        }\n\t        if (teardown === this) {\n\t            return this;\n\t        }\n\t        var sub = teardown;\n\t        switch (typeof teardown) {\n\t            case 'function':\n\t                sub = new Subscription(teardown);\n\t            case 'object':\n\t                if (sub.closed || typeof sub.unsubscribe !== 'function') {\n\t                    break;\n\t                }\n\t                else if (this.closed) {\n\t                    sub.unsubscribe();\n\t                }\n\t                else {\n\t                    (this._subscriptions || (this._subscriptions = [])).push(sub);\n\t                }\n\t                break;\n\t            default:\n\t                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n\t        }\n\t        return sub;\n\t    };\n\t    /**\n\t     * Removes a Subscription from the internal list of subscriptions that will\n\t     * unsubscribe during the unsubscribe process of this Subscription.\n\t     * @param {Subscription} subscription The subscription to remove.\n\t     * @return {void}\n\t     */\n\t    Subscription.prototype.remove = function (subscription) {\n\t        // HACK: This might be redundant because of the logic in `add()`\n\t        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {\n\t            return;\n\t        }\n\t        var subscriptions = this._subscriptions;\n\t        if (subscriptions) {\n\t            var subscriptionIndex = subscriptions.indexOf(subscription);\n\t            if (subscriptionIndex !== -1) {\n\t                subscriptions.splice(subscriptionIndex, 1);\n\t            }\n\t        }\n\t    };\n\t    Subscription.EMPTY = (function (empty) {\n\t        empty.closed = true;\n\t        return empty;\n\t    }(new Subscription()));\n\t    return Subscription;\n\t}());\n\texports.Subscription = Subscription;\n\t//# sourceMappingURL=Subscription.js.map\n\n/***/ },\n/* 61 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\t//# sourceMappingURL=isArray.js.map\n\n/***/ },\n/* 62 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction isObject(x) {\n\t    return x != null && typeof x === 'object';\n\t}\n\texports.isObject = isObject;\n\t//# sourceMappingURL=isObject.js.map\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar errorObject_1 = __webpack_require__(64);\n\tvar tryCatchTarget;\n\tfunction tryCatcher() {\n\t    try {\n\t        return tryCatchTarget.apply(this, arguments);\n\t    }\n\t    catch (e) {\n\t        errorObject_1.errorObject.e = e;\n\t        return errorObject_1.errorObject;\n\t    }\n\t}\n\tfunction tryCatch(fn) {\n\t    tryCatchTarget = fn;\n\t    return tryCatcher;\n\t}\n\texports.tryCatch = tryCatch;\n\t;\n\t//# sourceMappingURL=tryCatch.js.map\n\n/***/ },\n/* 64 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// typeof any so that it we don't have to cast when comparing a result to the error object\n\texports.errorObject = { e: {} };\n\t//# sourceMappingURL=errorObject.js.map\n\n/***/ },\n/* 65 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * An error thrown when one or more errors have occurred during the\n\t * `unsubscribe` of a {@link Subscription}.\n\t */\n\tvar UnsubscriptionError = (function (_super) {\n\t    __extends(UnsubscriptionError, _super);\n\t    function UnsubscriptionError(errors) {\n\t        _super.call(this);\n\t        this.errors = errors;\n\t        var err = Error.call(this, errors ?\n\t            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n\t        this.name = err.name = 'UnsubscriptionError';\n\t        this.stack = err.stack;\n\t        this.message = err.message;\n\t    }\n\t    return UnsubscriptionError;\n\t}(Error));\n\texports.UnsubscriptionError = UnsubscriptionError;\n\t//# sourceMappingURL=UnsubscriptionError.js.map\n\n/***/ },\n/* 66 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.empty = {\n\t    closed: true,\n\t    next: function (value) { },\n\t    error: function (err) { throw err; },\n\t    complete: function () { }\n\t};\n\t//# sourceMappingURL=Observer.js.map\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(56);\n\tvar Symbol = root_1.root.Symbol;\n\texports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n\t    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\t//# sourceMappingURL=rxSubscriber.js.map\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(56);\n\tfunction getSymbolObservable(context) {\n\t    var $$observable;\n\t    var Symbol = context.Symbol;\n\t    if (typeof Symbol === 'function') {\n\t        if (Symbol.observable) {\n\t            $$observable = Symbol.observable;\n\t        }\n\t        else {\n\t            $$observable = Symbol('observable');\n\t            Symbol.observable = $$observable;\n\t        }\n\t    }\n\t    else {\n\t        $$observable = '@@observable';\n\t    }\n\t    return $$observable;\n\t}\n\texports.getSymbolObservable = getSymbolObservable;\n\texports.$$observable = getSymbolObservable(root_1.root);\n\t//# sourceMappingURL=observable.js.map\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar ArrayObservable_1 = __webpack_require__(70);\n\texports.of = ArrayObservable_1.ArrayObservable.of;\n\t//# sourceMappingURL=of.js.map\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Observable_1 = __webpack_require__(55);\n\tvar ScalarObservable_1 = __webpack_require__(71);\n\tvar EmptyObservable_1 = __webpack_require__(72);\n\tvar isScheduler_1 = __webpack_require__(73);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @extends {Ignored}\n\t * @hide true\n\t */\n\tvar ArrayObservable = (function (_super) {\n\t    __extends(ArrayObservable, _super);\n\t    function ArrayObservable(array, scheduler) {\n\t        _super.call(this);\n\t        this.array = array;\n\t        this.scheduler = scheduler;\n\t        if (!scheduler && array.length === 1) {\n\t            this._isScalar = true;\n\t            this.value = array[0];\n\t        }\n\t    }\n\t    ArrayObservable.create = function (array, scheduler) {\n\t        return new ArrayObservable(array, scheduler);\n\t    };\n\t    /**\n\t     * Creates an Observable that emits some values you specify as arguments,\n\t     * immediately one after the other, and then emits a complete notification.\n\t     *\n\t     * <span class=\"informal\">Emits the arguments you provide, then completes.\n\t     * </span>\n\t     *\n\t     * <img src=\"./img/of.png\" width=\"100%\">\n\t     *\n\t     * This static operator is useful for creating a simple Observable that only\n\t     * emits the arguments given, and the complete notification thereafter. It can\n\t     * be used for composing with other Observables, such as with {@link concat}.\n\t     * By default, it uses a `null` Scheduler, which means the `next`\n\t     * notifications are sent synchronously, although with a different Scheduler\n\t     * it is possible to determine when those notifications will be delivered.\n\t     *\n\t     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n\t     * var numbers = Rx.Observable.of(10, 20, 30);\n\t     * var letters = Rx.Observable.of('a', 'b', 'c');\n\t     * var interval = Rx.Observable.interval(1000);\n\t     * var result = numbers.concat(letters).concat(interval);\n\t     * result.subscribe(x => console.log(x));\n\t     *\n\t     * @see {@link create}\n\t     * @see {@link empty}\n\t     * @see {@link never}\n\t     * @see {@link throw}\n\t     *\n\t     * @param {...T} values Arguments that represent `next` values to be emitted.\n\t     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n\t     * the emissions of the `next` notifications.\n\t     * @return {Observable<T>} An Observable that emits each given input value.\n\t     * @static true\n\t     * @name of\n\t     * @owner Observable\n\t     */\n\t    ArrayObservable.of = function () {\n\t        var array = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            array[_i - 0] = arguments[_i];\n\t        }\n\t        var scheduler = array[array.length - 1];\n\t        if (isScheduler_1.isScheduler(scheduler)) {\n\t            array.pop();\n\t        }\n\t        else {\n\t            scheduler = null;\n\t        }\n\t        var len = array.length;\n\t        if (len > 1) {\n\t            return new ArrayObservable(array, scheduler);\n\t        }\n\t        else if (len === 1) {\n\t            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n\t        }\n\t        else {\n\t            return new EmptyObservable_1.EmptyObservable(scheduler);\n\t        }\n\t    };\n\t    ArrayObservable.dispatch = function (state) {\n\t        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n\t        if (index >= count) {\n\t            subscriber.complete();\n\t            return;\n\t        }\n\t        subscriber.next(array[index]);\n\t        if (subscriber.closed) {\n\t            return;\n\t        }\n\t        state.index = index + 1;\n\t        this.schedule(state);\n\t    };\n\t    ArrayObservable.prototype._subscribe = function (subscriber) {\n\t        var index = 0;\n\t        var array = this.array;\n\t        var count = array.length;\n\t        var scheduler = this.scheduler;\n\t        if (scheduler) {\n\t            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n\t                array: array, index: index, count: count, subscriber: subscriber\n\t            });\n\t        }\n\t        else {\n\t            for (var i = 0; i < count && !subscriber.closed; i++) {\n\t                subscriber.next(array[i]);\n\t            }\n\t            subscriber.complete();\n\t        }\n\t    };\n\t    return ArrayObservable;\n\t}(Observable_1.Observable));\n\texports.ArrayObservable = ArrayObservable;\n\t//# sourceMappingURL=ArrayObservable.js.map\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Observable_1 = __webpack_require__(55);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @extends {Ignored}\n\t * @hide true\n\t */\n\tvar ScalarObservable = (function (_super) {\n\t    __extends(ScalarObservable, _super);\n\t    function ScalarObservable(value, scheduler) {\n\t        _super.call(this);\n\t        this.value = value;\n\t        this.scheduler = scheduler;\n\t        this._isScalar = true;\n\t        if (scheduler) {\n\t            this._isScalar = false;\n\t        }\n\t    }\n\t    ScalarObservable.create = function (value, scheduler) {\n\t        return new ScalarObservable(value, scheduler);\n\t    };\n\t    ScalarObservable.dispatch = function (state) {\n\t        var done = state.done, value = state.value, subscriber = state.subscriber;\n\t        if (done) {\n\t            subscriber.complete();\n\t            return;\n\t        }\n\t        subscriber.next(value);\n\t        if (subscriber.closed) {\n\t            return;\n\t        }\n\t        state.done = true;\n\t        this.schedule(state);\n\t    };\n\t    ScalarObservable.prototype._subscribe = function (subscriber) {\n\t        var value = this.value;\n\t        var scheduler = this.scheduler;\n\t        if (scheduler) {\n\t            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n\t                done: false, value: value, subscriber: subscriber\n\t            });\n\t        }\n\t        else {\n\t            subscriber.next(value);\n\t            if (!subscriber.closed) {\n\t                subscriber.complete();\n\t            }\n\t        }\n\t    };\n\t    return ScalarObservable;\n\t}(Observable_1.Observable));\n\texports.ScalarObservable = ScalarObservable;\n\t//# sourceMappingURL=ScalarObservable.js.map\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Observable_1 = __webpack_require__(55);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @extends {Ignored}\n\t * @hide true\n\t */\n\tvar EmptyObservable = (function (_super) {\n\t    __extends(EmptyObservable, _super);\n\t    function EmptyObservable(scheduler) {\n\t        _super.call(this);\n\t        this.scheduler = scheduler;\n\t    }\n\t    /**\n\t     * Creates an Observable that emits no items to the Observer and immediately\n\t     * emits a complete notification.\n\t     *\n\t     * <span class=\"informal\">Just emits 'complete', and nothing else.\n\t     * </span>\n\t     *\n\t     * <img src=\"./img/empty.png\" width=\"100%\">\n\t     *\n\t     * This static operator is useful for creating a simple Observable that only\n\t     * emits the complete notification. It can be used for composing with other\n\t     * Observables, such as in a {@link mergeMap}.\n\t     *\n\t     * @example <caption>Emit the number 7, then complete.</caption>\n\t     * var result = Rx.Observable.empty().startWith(7);\n\t     * result.subscribe(x => console.log(x));\n\t     *\n\t     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n\t     * var interval = Rx.Observable.interval(1000);\n\t     * var result = interval.mergeMap(x =>\n\t     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n\t     * );\n\t     * result.subscribe(x => console.log(x));\n\t     *\n\t     * @see {@link create}\n\t     * @see {@link never}\n\t     * @see {@link of}\n\t     * @see {@link throw}\n\t     *\n\t     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n\t     * the emission of the complete notification.\n\t     * @return {Observable} An \"empty\" Observable: emits only the complete\n\t     * notification.\n\t     * @static true\n\t     * @name empty\n\t     * @owner Observable\n\t     */\n\t    EmptyObservable.create = function (scheduler) {\n\t        return new EmptyObservable(scheduler);\n\t    };\n\t    EmptyObservable.dispatch = function (arg) {\n\t        var subscriber = arg.subscriber;\n\t        subscriber.complete();\n\t    };\n\t    EmptyObservable.prototype._subscribe = function (subscriber) {\n\t        var scheduler = this.scheduler;\n\t        if (scheduler) {\n\t            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n\t        }\n\t        else {\n\t            subscriber.complete();\n\t        }\n\t    };\n\t    return EmptyObservable;\n\t}(Observable_1.Observable));\n\texports.EmptyObservable = EmptyObservable;\n\t//# sourceMappingURL=EmptyObservable.js.map\n\n/***/ },\n/* 73 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction isScheduler(value) {\n\t    return value && typeof value.schedule === 'function';\n\t}\n\texports.isScheduler = isScheduler;\n\t//# sourceMappingURL=isScheduler.js.map\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(55);\n\tvar combineLatest_1 = __webpack_require__(75);\n\tObservable_1.Observable.combineLatest = combineLatest_1.combineLatest;\n\t//# sourceMappingURL=combineLatest.js.map\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar isScheduler_1 = __webpack_require__(73);\n\tvar isArray_1 = __webpack_require__(61);\n\tvar ArrayObservable_1 = __webpack_require__(70);\n\tvar combineLatest_1 = __webpack_require__(76);\n\t/* tslint:enable:max-line-length */\n\t/**\n\t * Combines multiple Observables to create an Observable whose values are\n\t * calculated from the latest values of each of its input Observables.\n\t *\n\t * <span class=\"informal\">Whenever any input Observable emits a value, it\n\t * computes a formula using the latest values from all the inputs, then emits\n\t * the output of that formula.</span>\n\t *\n\t * <img src=\"./img/combineLatest.png\" width=\"100%\">\n\t *\n\t * `combineLatest` combines the values from all the Observables passed as\n\t * arguments. This is done by subscribing to each Observable, in order, and\n\t * collecting an array of each of the most recent values any time any of the\n\t * input Observables emits, then either taking that array and passing it as\n\t * arguments to an optional `project` function and emitting the return value of\n\t * that, or just emitting the array of recent values directly if there is no\n\t * `project` function.\n\t *\n\t * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n\t * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n\t * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n\t * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n\t * bmi.subscribe(x => console.log('BMI is ' + x));\n\t *\n\t * @see {@link combineAll}\n\t * @see {@link merge}\n\t * @see {@link withLatestFrom}\n\t *\n\t * @param {Observable} observable1 An input Observable to combine with the\n\t * source Observable.\n\t * @param {Observable} observable2 An input Observable to combine with the\n\t * source Observable. More than one input Observables may be given as argument.\n\t * @param {function} [project] An optional function to project the values from\n\t * the combined latest values into a new value on the output Observable.\n\t * @param {Scheduler} [scheduler=null] The Scheduler to use for subscribing to\n\t * each input Observable.\n\t * @return {Observable} An Observable of projected values from the most recent\n\t * values from each input Observable, or an array of the most recent values from\n\t * each input Observable.\n\t * @static true\n\t * @name combineLatest\n\t * @owner Observable\n\t */\n\tfunction combineLatest() {\n\t    var observables = [];\n\t    for (var _i = 0; _i < arguments.length; _i++) {\n\t        observables[_i - 0] = arguments[_i];\n\t    }\n\t    var project = null;\n\t    var scheduler = null;\n\t    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {\n\t        scheduler = observables.pop();\n\t    }\n\t    if (typeof observables[observables.length - 1] === 'function') {\n\t        project = observables.pop();\n\t    }\n\t    // if the first and only other argument besides the resultSelector is an array\n\t    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n\t    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n\t        observables = observables[0];\n\t    }\n\t    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));\n\t}\n\texports.combineLatest = combineLatest;\n\t//# sourceMappingURL=combineLatest.js.map\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar ArrayObservable_1 = __webpack_require__(70);\n\tvar isArray_1 = __webpack_require__(61);\n\tvar OuterSubscriber_1 = __webpack_require__(77);\n\tvar subscribeToResult_1 = __webpack_require__(78);\n\tvar none = {};\n\t/**\n\t * Combines multiple Observables to create an Observable whose values are\n\t * calculated from the latest values of each of its input Observables.\n\t *\n\t * <span class=\"informal\">Whenever any input Observable emits a value, it\n\t * computes a formula using the latest values from all the inputs, then emits\n\t * the output of that formula.</span>\n\t *\n\t * <img src=\"./img/combineLatest.png\" width=\"100%\">\n\t *\n\t * `combineLatest` combines the values from this Observable with values from\n\t * Observables passed as arguments. This is done by subscribing to each\n\t * Observable, in order, and collecting an array of each of the most recent\n\t * values any time any of the input Observables emits, then either taking that\n\t * array and passing it as arguments to an optional `project` function and\n\t * emitting the return value of that, or just emitting the array of recent\n\t * values directly if there is no `project` function.\n\t *\n\t * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n\t * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n\t * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n\t * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n\t * bmi.subscribe(x => console.log('BMI is ' + x));\n\t *\n\t * @see {@link combineAll}\n\t * @see {@link merge}\n\t * @see {@link withLatestFrom}\n\t *\n\t * @param {Observable} other An input Observable to combine with the source\n\t * Observable. More than one input Observables may be given as argument.\n\t * @param {function} [project] An optional function to project the values from\n\t * the combined latest values into a new value on the output Observable.\n\t * @return {Observable} An Observable of projected values from the most recent\n\t * values from each input Observable, or an array of the most recent values from\n\t * each input Observable.\n\t * @method combineLatest\n\t * @owner Observable\n\t */\n\tfunction combineLatest() {\n\t    var observables = [];\n\t    for (var _i = 0; _i < arguments.length; _i++) {\n\t        observables[_i - 0] = arguments[_i];\n\t    }\n\t    var project = null;\n\t    if (typeof observables[observables.length - 1] === 'function') {\n\t        project = observables.pop();\n\t    }\n\t    // if the first and only other argument besides the resultSelector is an array\n\t    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n\t    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n\t        observables = observables[0];\n\t    }\n\t    observables.unshift(this);\n\t    return new ArrayObservable_1.ArrayObservable(observables).lift(new CombineLatestOperator(project));\n\t}\n\texports.combineLatest = combineLatest;\n\t/* tslint:enable:max-line-length */\n\tvar CombineLatestOperator = (function () {\n\t    function CombineLatestOperator(project) {\n\t        this.project = project;\n\t    }\n\t    CombineLatestOperator.prototype.call = function (subscriber, source) {\n\t        return source._subscribe(new CombineLatestSubscriber(subscriber, this.project));\n\t    };\n\t    return CombineLatestOperator;\n\t}());\n\texports.CombineLatestOperator = CombineLatestOperator;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar CombineLatestSubscriber = (function (_super) {\n\t    __extends(CombineLatestSubscriber, _super);\n\t    function CombineLatestSubscriber(destination, project) {\n\t        _super.call(this, destination);\n\t        this.project = project;\n\t        this.active = 0;\n\t        this.values = [];\n\t        this.observables = [];\n\t    }\n\t    CombineLatestSubscriber.prototype._next = function (observable) {\n\t        this.values.push(none);\n\t        this.observables.push(observable);\n\t    };\n\t    CombineLatestSubscriber.prototype._complete = function () {\n\t        var observables = this.observables;\n\t        var len = observables.length;\n\t        if (len === 0) {\n\t            this.destination.complete();\n\t        }\n\t        else {\n\t            this.active = len;\n\t            this.toRespond = len;\n\t            for (var i = 0; i < len; i++) {\n\t                var observable = observables[i];\n\t                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n\t            }\n\t        }\n\t    };\n\t    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n\t        if ((this.active -= 1) === 0) {\n\t            this.destination.complete();\n\t        }\n\t    };\n\t    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n\t        var values = this.values;\n\t        var oldVal = values[outerIndex];\n\t        var toRespond = !this.toRespond\n\t            ? 0\n\t            : oldVal === none ? --this.toRespond : this.toRespond;\n\t        values[outerIndex] = innerValue;\n\t        if (toRespond === 0) {\n\t            if (this.project) {\n\t                this._tryProject(values);\n\t            }\n\t            else {\n\t                this.destination.next(values.slice());\n\t            }\n\t        }\n\t    };\n\t    CombineLatestSubscriber.prototype._tryProject = function (values) {\n\t        var result;\n\t        try {\n\t            result = this.project.apply(this, values);\n\t        }\n\t        catch (err) {\n\t            this.destination.error(err);\n\t            return;\n\t        }\n\t        this.destination.next(result);\n\t    };\n\t    return CombineLatestSubscriber;\n\t}(OuterSubscriber_1.OuterSubscriber));\n\texports.CombineLatestSubscriber = CombineLatestSubscriber;\n\t//# sourceMappingURL=combineLatest.js.map\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscriber_1 = __webpack_require__(58);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar OuterSubscriber = (function (_super) {\n\t    __extends(OuterSubscriber, _super);\n\t    function OuterSubscriber() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n\t        this.destination.next(innerValue);\n\t    };\n\t    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n\t        this.destination.error(error);\n\t    };\n\t    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n\t        this.destination.complete();\n\t    };\n\t    return OuterSubscriber;\n\t}(Subscriber_1.Subscriber));\n\texports.OuterSubscriber = OuterSubscriber;\n\t//# sourceMappingURL=OuterSubscriber.js.map\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(56);\n\tvar isArray_1 = __webpack_require__(61);\n\tvar isPromise_1 = __webpack_require__(79);\n\tvar Observable_1 = __webpack_require__(55);\n\tvar iterator_1 = __webpack_require__(80);\n\tvar InnerSubscriber_1 = __webpack_require__(81);\n\tvar observable_1 = __webpack_require__(68);\n\tfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n\t    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\t    if (destination.closed) {\n\t        return null;\n\t    }\n\t    if (result instanceof Observable_1.Observable) {\n\t        if (result._isScalar) {\n\t            destination.next(result.value);\n\t            destination.complete();\n\t            return null;\n\t        }\n\t        else {\n\t            return result.subscribe(destination);\n\t        }\n\t    }\n\t    if (isArray_1.isArray(result)) {\n\t        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n\t            destination.next(result[i]);\n\t        }\n\t        if (!destination.closed) {\n\t            destination.complete();\n\t        }\n\t    }\n\t    else if (isPromise_1.isPromise(result)) {\n\t        result.then(function (value) {\n\t            if (!destination.closed) {\n\t                destination.next(value);\n\t                destination.complete();\n\t            }\n\t        }, function (err) { return destination.error(err); })\n\t            .then(null, function (err) {\n\t            // Escaping the Promise trap: globally throw unhandled errors\n\t            root_1.root.setTimeout(function () { throw err; });\n\t        });\n\t        return destination;\n\t    }\n\t    else if (typeof result[iterator_1.$$iterator] === 'function') {\n\t        var iterator = result[iterator_1.$$iterator]();\n\t        do {\n\t            var item = iterator.next();\n\t            if (item.done) {\n\t                destination.complete();\n\t                break;\n\t            }\n\t            destination.next(item.value);\n\t            if (destination.closed) {\n\t                break;\n\t            }\n\t        } while (true);\n\t    }\n\t    else if (typeof result[observable_1.$$observable] === 'function') {\n\t        var obs = result[observable_1.$$observable]();\n\t        if (typeof obs.subscribe !== 'function') {\n\t            destination.error(new Error('invalid observable'));\n\t        }\n\t        else {\n\t            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n\t        }\n\t    }\n\t    else {\n\t        destination.error(new TypeError('unknown type returned'));\n\t    }\n\t    return null;\n\t}\n\texports.subscribeToResult = subscribeToResult;\n\t//# sourceMappingURL=subscribeToResult.js.map\n\n/***/ },\n/* 79 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction isPromise(value) {\n\t    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n\t}\n\texports.isPromise = isPromise;\n\t//# sourceMappingURL=isPromise.js.map\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(56);\n\tvar Symbol = root_1.root.Symbol;\n\tif (typeof Symbol === 'function') {\n\t    if (Symbol.iterator) {\n\t        exports.$$iterator = Symbol.iterator;\n\t    }\n\t    else if (typeof Symbol.for === 'function') {\n\t        exports.$$iterator = Symbol.for('iterator');\n\t    }\n\t}\n\telse {\n\t    if (root_1.root.Set && typeof new root_1.root.Set()['@@iterator'] === 'function') {\n\t        // Bug for mozilla version\n\t        exports.$$iterator = '@@iterator';\n\t    }\n\t    else if (root_1.root.Map) {\n\t        // es6-shim specific logic\n\t        var keys = Object.getOwnPropertyNames(root_1.root.Map.prototype);\n\t        for (var i = 0; i < keys.length; ++i) {\n\t            var key = keys[i];\n\t            if (key !== 'entries' && key !== 'size' && root_1.root.Map.prototype[key] === root_1.root.Map.prototype['entries']) {\n\t                exports.$$iterator = key;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t    else {\n\t        exports.$$iterator = '@@iterator';\n\t    }\n\t}\n\t//# sourceMappingURL=iterator.js.map\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscriber_1 = __webpack_require__(58);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar InnerSubscriber = (function (_super) {\n\t    __extends(InnerSubscriber, _super);\n\t    function InnerSubscriber(parent, outerValue, outerIndex) {\n\t        _super.call(this);\n\t        this.parent = parent;\n\t        this.outerValue = outerValue;\n\t        this.outerIndex = outerIndex;\n\t        this.index = 0;\n\t    }\n\t    InnerSubscriber.prototype._next = function (value) {\n\t        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n\t    };\n\t    InnerSubscriber.prototype._error = function (error) {\n\t        this.parent.notifyError(error, this);\n\t        this.unsubscribe();\n\t    };\n\t    InnerSubscriber.prototype._complete = function () {\n\t        this.parent.notifyComplete(this);\n\t        this.unsubscribe();\n\t    };\n\t    return InnerSubscriber;\n\t}(Subscriber_1.Subscriber));\n\texports.InnerSubscriber = InnerSubscriber;\n\t//# sourceMappingURL=InnerSubscriber.js.map\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(55);\n\tvar fromPromise_1 = __webpack_require__(83);\n\tObservable_1.Observable.fromPromise = fromPromise_1.fromPromise;\n\t//# sourceMappingURL=fromPromise.js.map\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar PromiseObservable_1 = __webpack_require__(84);\n\texports.fromPromise = PromiseObservable_1.PromiseObservable.create;\n\t//# sourceMappingURL=fromPromise.js.map\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar root_1 = __webpack_require__(56);\n\tvar Observable_1 = __webpack_require__(55);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @extends {Ignored}\n\t * @hide true\n\t */\n\tvar PromiseObservable = (function (_super) {\n\t    __extends(PromiseObservable, _super);\n\t    function PromiseObservable(promise, scheduler) {\n\t        _super.call(this);\n\t        this.promise = promise;\n\t        this.scheduler = scheduler;\n\t    }\n\t    /**\n\t     * Converts a Promise to an Observable.\n\t     *\n\t     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n\t     * resolved value, then completes.</span>\n\t     *\n\t     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n\t     * Observable. If the Promise resolves with a value, the output Observable\n\t     * emits that resolved value as a `next`, and then completes. If the Promise\n\t     * is rejected, then the output Observable emits the corresponding Error.\n\t     *\n\t     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n\t     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n\t     * result.subscribe(x => console.log(x), e => console.error(e));\n\t     *\n\t     * @see {@link bindCallback}\n\t     * @see {@link from}\n\t     *\n\t     * @param {Promise<T>} promise The promise to be converted.\n\t     * @param {Scheduler} [scheduler] An optional Scheduler to use for scheduling\n\t     * the delivery of the resolved value (or the rejection).\n\t     * @return {Observable<T>} An Observable which wraps the Promise.\n\t     * @static true\n\t     * @name fromPromise\n\t     * @owner Observable\n\t     */\n\t    PromiseObservable.create = function (promise, scheduler) {\n\t        return new PromiseObservable(promise, scheduler);\n\t    };\n\t    PromiseObservable.prototype._subscribe = function (subscriber) {\n\t        var _this = this;\n\t        var promise = this.promise;\n\t        var scheduler = this.scheduler;\n\t        if (scheduler == null) {\n\t            if (this._isScalar) {\n\t                if (!subscriber.closed) {\n\t                    subscriber.next(this.value);\n\t                    subscriber.complete();\n\t                }\n\t            }\n\t            else {\n\t                promise.then(function (value) {\n\t                    _this.value = value;\n\t                    _this._isScalar = true;\n\t                    if (!subscriber.closed) {\n\t                        subscriber.next(value);\n\t                        subscriber.complete();\n\t                    }\n\t                }, function (err) {\n\t                    if (!subscriber.closed) {\n\t                        subscriber.error(err);\n\t                    }\n\t                })\n\t                    .then(null, function (err) {\n\t                    // escape the promise trap, throw unhandled errors\n\t                    root_1.root.setTimeout(function () { throw err; });\n\t                });\n\t            }\n\t        }\n\t        else {\n\t            if (this._isScalar) {\n\t                if (!subscriber.closed) {\n\t                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n\t                }\n\t            }\n\t            else {\n\t                promise.then(function (value) {\n\t                    _this.value = value;\n\t                    _this._isScalar = true;\n\t                    if (!subscriber.closed) {\n\t                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n\t                    }\n\t                }, function (err) {\n\t                    if (!subscriber.closed) {\n\t                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n\t                    }\n\t                })\n\t                    .then(null, function (err) {\n\t                    // escape the promise trap, throw unhandled errors\n\t                    root_1.root.setTimeout(function () { throw err; });\n\t                });\n\t            }\n\t        }\n\t    };\n\t    return PromiseObservable;\n\t}(Observable_1.Observable));\n\texports.PromiseObservable = PromiseObservable;\n\tfunction dispatchNext(arg) {\n\t    var value = arg.value, subscriber = arg.subscriber;\n\t    if (!subscriber.closed) {\n\t        subscriber.next(value);\n\t        subscriber.complete();\n\t    }\n\t}\n\tfunction dispatchError(arg) {\n\t    var err = arg.err, subscriber = arg.subscriber;\n\t    if (!subscriber.closed) {\n\t        subscriber.error(err);\n\t    }\n\t}\n\t//# sourceMappingURL=PromiseObservable.js.map\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(55);\n\tvar switchMap_1 = __webpack_require__(86);\n\tObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n\t//# sourceMappingURL=switchMap.js.map\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar OuterSubscriber_1 = __webpack_require__(77);\n\tvar subscribeToResult_1 = __webpack_require__(78);\n\t/**\n\t * Projects each source value to an Observable which is merged in the output\n\t * Observable, emitting values only from the most recently projected Observable.\n\t *\n\t * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n\t * these inner Observables using {@link switch}.</span>\n\t *\n\t * <img src=\"./img/switchMap.png\" width=\"100%\">\n\t *\n\t * Returns an Observable that emits items based on applying a function that you\n\t * supply to each item emitted by the source Observable, where that function\n\t * returns an (so-called \"inner\") Observable. Each time it observes one of these\n\t * inner Observables, the output Observable begins emitting the items emitted by\n\t * that inner Observable. When a new inner Observable is emitted, `switchMap`\n\t * stops emitting items from the earlier-emitted inner Observable and begins\n\t * emitting items from the new one. It continues to behave like this for\n\t * subsequent inner Observables.\n\t *\n\t * @example <caption>Rerun an interval Observable on every click event</caption>\n\t * var clicks = Rx.Observable.fromEvent(document, 'click');\n\t * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * @see {@link concatMap}\n\t * @see {@link exhaustMap}\n\t * @see {@link mergeMap}\n\t * @see {@link switch}\n\t * @see {@link switchMapTo}\n\t *\n\t * @param {function(value: T, ?index: number): Observable} project A function\n\t * that, when applied to an item emitted by the source Observable, returns an\n\t * Observable.\n\t * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n\t * A function to produce the value on the output Observable based on the values\n\t * and the indices of the source (outer) emission and the inner Observable\n\t * emission. The arguments passed to this function are:\n\t * - `outerValue`: the value that came from the source\n\t * - `innerValue`: the value that came from the projected Observable\n\t * - `outerIndex`: the \"index\" of the value that came from the source\n\t * - `innerIndex`: the \"index\" of the value from the projected Observable\n\t * @return {Observable} An Observable that emits the result of applying the\n\t * projection function (and the optional `resultSelector`) to each item emitted\n\t * by the source Observable and taking only the values from the most recently\n\t * projected inner Observable.\n\t * @method switchMap\n\t * @owner Observable\n\t */\n\tfunction switchMap(project, resultSelector) {\n\t    return this.lift(new SwitchMapOperator(project, resultSelector));\n\t}\n\texports.switchMap = switchMap;\n\tvar SwitchMapOperator = (function () {\n\t    function SwitchMapOperator(project, resultSelector) {\n\t        this.project = project;\n\t        this.resultSelector = resultSelector;\n\t    }\n\t    SwitchMapOperator.prototype.call = function (subscriber, source) {\n\t        return source._subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n\t    };\n\t    return SwitchMapOperator;\n\t}());\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar SwitchMapSubscriber = (function (_super) {\n\t    __extends(SwitchMapSubscriber, _super);\n\t    function SwitchMapSubscriber(destination, project, resultSelector) {\n\t        _super.call(this, destination);\n\t        this.project = project;\n\t        this.resultSelector = resultSelector;\n\t        this.index = 0;\n\t    }\n\t    SwitchMapSubscriber.prototype._next = function (value) {\n\t        var result;\n\t        var index = this.index++;\n\t        try {\n\t            result = this.project(value, index);\n\t        }\n\t        catch (error) {\n\t            this.destination.error(error);\n\t            return;\n\t        }\n\t        this._innerSub(result, value, index);\n\t    };\n\t    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n\t        var innerSubscription = this.innerSubscription;\n\t        if (innerSubscription) {\n\t            innerSubscription.unsubscribe();\n\t        }\n\t        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n\t    };\n\t    SwitchMapSubscriber.prototype._complete = function () {\n\t        var innerSubscription = this.innerSubscription;\n\t        if (!innerSubscription || innerSubscription.closed) {\n\t            _super.prototype._complete.call(this);\n\t        }\n\t    };\n\t    SwitchMapSubscriber.prototype._unsubscribe = function () {\n\t        this.innerSubscription = null;\n\t    };\n\t    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n\t        this.remove(innerSub);\n\t        this.innerSubscription = null;\n\t        if (this.isStopped) {\n\t            _super.prototype._complete.call(this);\n\t        }\n\t    };\n\t    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n\t        if (this.resultSelector) {\n\t            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n\t        }\n\t        else {\n\t            this.destination.next(innerValue);\n\t        }\n\t    };\n\t    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n\t        var result;\n\t        try {\n\t            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n\t        }\n\t        catch (err) {\n\t            this.destination.error(err);\n\t            return;\n\t        }\n\t        this.destination.next(result);\n\t    };\n\t    return SwitchMapSubscriber;\n\t}(OuterSubscriber_1.OuterSubscriber));\n\t//# sourceMappingURL=switchMap.js.map\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(55);\n\tvar mergeMap_1 = __webpack_require__(88);\n\tObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\n\tObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n\t//# sourceMappingURL=mergeMap.js.map\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar subscribeToResult_1 = __webpack_require__(78);\n\tvar OuterSubscriber_1 = __webpack_require__(77);\n\t/**\n\t * Projects each source value to an Observable which is merged in the output\n\t * Observable.\n\t *\n\t * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n\t * these inner Observables using {@link mergeAll}.</span>\n\t *\n\t * <img src=\"./img/mergeMap.png\" width=\"100%\">\n\t *\n\t * Returns an Observable that emits items based on applying a function that you\n\t * supply to each item emitted by the source Observable, where that function\n\t * returns an Observable, and then merging those resulting Observables and\n\t * emitting the results of this merger.\n\t *\n\t * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n\t * var letters = Rx.Observable.of('a', 'b', 'c');\n\t * var result = letters.mergeMap(x =>\n\t *   Rx.Observable.interval(1000).map(i => x+i)\n\t * );\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * @see {@link concatMap}\n\t * @see {@link exhaustMap}\n\t * @see {@link merge}\n\t * @see {@link mergeAll}\n\t * @see {@link mergeMapTo}\n\t * @see {@link mergeScan}\n\t * @see {@link switchMap}\n\t *\n\t * @param {function(value: T, ?index: number): Observable} project A function\n\t * that, when applied to an item emitted by the source Observable, returns an\n\t * Observable.\n\t * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n\t * A function to produce the value on the output Observable based on the values\n\t * and the indices of the source (outer) emission and the inner Observable\n\t * emission. The arguments passed to this function are:\n\t * - `outerValue`: the value that came from the source\n\t * - `innerValue`: the value that came from the projected Observable\n\t * - `outerIndex`: the \"index\" of the value that came from the source\n\t * - `innerIndex`: the \"index\" of the value from the projected Observable\n\t * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n\t * Observables being subscribed to concurrently.\n\t * @return {Observable} An Observable that emits the result of applying the\n\t * projection function (and the optional `resultSelector`) to each item emitted\n\t * by the source Observable and merging the results of the Observables obtained\n\t * from this transformation.\n\t * @method mergeMap\n\t * @owner Observable\n\t */\n\tfunction mergeMap(project, resultSelector, concurrent) {\n\t    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n\t    if (typeof resultSelector === 'number') {\n\t        concurrent = resultSelector;\n\t        resultSelector = null;\n\t    }\n\t    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));\n\t}\n\texports.mergeMap = mergeMap;\n\tvar MergeMapOperator = (function () {\n\t    function MergeMapOperator(project, resultSelector, concurrent) {\n\t        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n\t        this.project = project;\n\t        this.resultSelector = resultSelector;\n\t        this.concurrent = concurrent;\n\t    }\n\t    MergeMapOperator.prototype.call = function (observer, source) {\n\t        return source._subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n\t    };\n\t    return MergeMapOperator;\n\t}());\n\texports.MergeMapOperator = MergeMapOperator;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar MergeMapSubscriber = (function (_super) {\n\t    __extends(MergeMapSubscriber, _super);\n\t    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n\t        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n\t        _super.call(this, destination);\n\t        this.project = project;\n\t        this.resultSelector = resultSelector;\n\t        this.concurrent = concurrent;\n\t        this.hasCompleted = false;\n\t        this.buffer = [];\n\t        this.active = 0;\n\t        this.index = 0;\n\t    }\n\t    MergeMapSubscriber.prototype._next = function (value) {\n\t        if (this.active < this.concurrent) {\n\t            this._tryNext(value);\n\t        }\n\t        else {\n\t            this.buffer.push(value);\n\t        }\n\t    };\n\t    MergeMapSubscriber.prototype._tryNext = function (value) {\n\t        var result;\n\t        var index = this.index++;\n\t        try {\n\t            result = this.project(value, index);\n\t        }\n\t        catch (err) {\n\t            this.destination.error(err);\n\t            return;\n\t        }\n\t        this.active++;\n\t        this._innerSub(result, value, index);\n\t    };\n\t    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n\t        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n\t    };\n\t    MergeMapSubscriber.prototype._complete = function () {\n\t        this.hasCompleted = true;\n\t        if (this.active === 0 && this.buffer.length === 0) {\n\t            this.destination.complete();\n\t        }\n\t    };\n\t    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n\t        if (this.resultSelector) {\n\t            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n\t        }\n\t        else {\n\t            this.destination.next(innerValue);\n\t        }\n\t    };\n\t    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n\t        var result;\n\t        try {\n\t            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n\t        }\n\t        catch (err) {\n\t            this.destination.error(err);\n\t            return;\n\t        }\n\t        this.destination.next(result);\n\t    };\n\t    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n\t        var buffer = this.buffer;\n\t        this.remove(innerSub);\n\t        this.active--;\n\t        if (buffer.length > 0) {\n\t            this._next(buffer.shift());\n\t        }\n\t        else if (this.active === 0 && this.hasCompleted) {\n\t            this.destination.complete();\n\t        }\n\t    };\n\t    return MergeMapSubscriber;\n\t}(OuterSubscriber_1.OuterSubscriber));\n\texports.MergeMapSubscriber = MergeMapSubscriber;\n\t//# sourceMappingURL=mergeMap.js.map\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(55);\n\tvar concat_1 = __webpack_require__(90);\n\tObservable_1.Observable.prototype.concat = concat_1.concat;\n\t//# sourceMappingURL=concat.js.map\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar isScheduler_1 = __webpack_require__(73);\n\tvar ArrayObservable_1 = __webpack_require__(70);\n\tvar mergeAll_1 = __webpack_require__(91);\n\t/**\n\t * Creates an output Observable which sequentially emits all values from every\n\t * given input Observable after the current Observable.\n\t *\n\t * <span class=\"informal\">Concatenates multiple Observables together by\n\t * sequentially emitting their values, one Observable after the other.</span>\n\t *\n\t * <img src=\"./img/concat.png\" width=\"100%\">\n\t *\n\t * Joins this Observable with multiple other Observables by subscribing to them\n\t * one at a time, starting with the source, and merging their results into the\n\t * output Observable. Will wait for each Observable to complete before moving\n\t * on to the next.\n\t *\n\t * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n\t * var timer = Rx.Observable.interval(1000).take(4);\n\t * var sequence = Rx.Observable.range(1, 10);\n\t * var result = timer.concat(sequence);\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * @example <caption>Concatenate 3 Observables</caption>\n\t * var timer1 = Rx.Observable.interval(1000).take(10);\n\t * var timer2 = Rx.Observable.interval(2000).take(6);\n\t * var timer3 = Rx.Observable.interval(500).take(10);\n\t * var result = timer1.concat(timer2, timer3);\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * @see {@link concatAll}\n\t * @see {@link concatMap}\n\t * @see {@link concatMapTo}\n\t *\n\t * @param {Observable} other An input Observable to concatenate after the source\n\t * Observable. More than one input Observables may be given as argument.\n\t * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n\t * Observable subscription on.\n\t * @return {Observable} All values of each passed Observable merged into a\n\t * single Observable, in order, in serial fashion.\n\t * @method concat\n\t * @owner Observable\n\t */\n\tfunction concat() {\n\t    var observables = [];\n\t    for (var _i = 0; _i < arguments.length; _i++) {\n\t        observables[_i - 0] = arguments[_i];\n\t    }\n\t    return concatStatic.apply(void 0, [this].concat(observables));\n\t}\n\texports.concat = concat;\n\t/* tslint:enable:max-line-length */\n\t/**\n\t * Creates an output Observable which sequentially emits all values from every\n\t * given input Observable after the current Observable.\n\t *\n\t * <span class=\"informal\">Concatenates multiple Observables together by\n\t * sequentially emitting their values, one Observable after the other.</span>\n\t *\n\t * <img src=\"./img/concat.png\" width=\"100%\">\n\t *\n\t * Joins multiple Observables together by subscribing to them one at a time and\n\t * merging their results into the output Observable. Will wait for each\n\t * Observable to complete before moving on to the next.\n\t *\n\t * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n\t * var timer = Rx.Observable.interval(1000).take(4);\n\t * var sequence = Rx.Observable.range(1, 10);\n\t * var result = Rx.Observable.concat(timer, sequence);\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * @example <caption>Concatenate 3 Observables</caption>\n\t * var timer1 = Rx.Observable.interval(1000).take(10);\n\t * var timer2 = Rx.Observable.interval(2000).take(6);\n\t * var timer3 = Rx.Observable.interval(500).take(10);\n\t * var result = Rx.Observable.concat(timer1, timer2, timer3);\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * @see {@link concatAll}\n\t * @see {@link concatMap}\n\t * @see {@link concatMapTo}\n\t *\n\t * @param {Observable} input1 An input Observable to concatenate with others.\n\t * @param {Observable} input2 An input Observable to concatenate with others.\n\t * More than one input Observables may be given as argument.\n\t * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n\t * Observable subscription on.\n\t * @return {Observable} All values of each passed Observable merged into a\n\t * single Observable, in order, in serial fashion.\n\t * @static true\n\t * @name concat\n\t * @owner Observable\n\t */\n\tfunction concatStatic() {\n\t    var observables = [];\n\t    for (var _i = 0; _i < arguments.length; _i++) {\n\t        observables[_i - 0] = arguments[_i];\n\t    }\n\t    var scheduler = null;\n\t    var args = observables;\n\t    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n\t        scheduler = args.pop();\n\t    }\n\t    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n\t}\n\texports.concatStatic = concatStatic;\n\t//# sourceMappingURL=concat.js.map\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar OuterSubscriber_1 = __webpack_require__(77);\n\tvar subscribeToResult_1 = __webpack_require__(78);\n\t/**\n\t * Converts a higher-order Observable into a first-order Observable which\n\t * concurrently delivers all values that are emitted on the inner Observables.\n\t *\n\t * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n\t *\n\t * <img src=\"./img/mergeAll.png\" width=\"100%\">\n\t *\n\t * `mergeAll` subscribes to an Observable that emits Observables, also known as\n\t * a higher-order Observable. Each time it observes one of these emitted inner\n\t * Observables, it subscribes to that and delivers all the values from the\n\t * inner Observable on the output Observable. The output Observable only\n\t * completes once all inner Observables have completed. Any error delivered by\n\t * a inner Observable will be immediately emitted on the output Observable.\n\t *\n\t * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n\t * var clicks = Rx.Observable.fromEvent(document, 'click');\n\t * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n\t * var firstOrder = higherOrder.mergeAll();\n\t * firstOrder.subscribe(x => console.log(x));\n\t *\n\t * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n\t * var clicks = Rx.Observable.fromEvent(document, 'click');\n\t * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n\t * var firstOrder = higherOrder.mergeAll(2);\n\t * firstOrder.subscribe(x => console.log(x));\n\t *\n\t * @see {@link combineAll}\n\t * @see {@link concatAll}\n\t * @see {@link exhaust}\n\t * @see {@link merge}\n\t * @see {@link mergeMap}\n\t * @see {@link mergeMapTo}\n\t * @see {@link mergeScan}\n\t * @see {@link switch}\n\t * @see {@link zipAll}\n\t *\n\t * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n\t * Observables being subscribed to concurrently.\n\t * @return {Observable} An Observable that emits values coming from all the\n\t * inner Observables emitted by the source Observable.\n\t * @method mergeAll\n\t * @owner Observable\n\t */\n\tfunction mergeAll(concurrent) {\n\t    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n\t    return this.lift(new MergeAllOperator(concurrent));\n\t}\n\texports.mergeAll = mergeAll;\n\tvar MergeAllOperator = (function () {\n\t    function MergeAllOperator(concurrent) {\n\t        this.concurrent = concurrent;\n\t    }\n\t    MergeAllOperator.prototype.call = function (observer, source) {\n\t        return source._subscribe(new MergeAllSubscriber(observer, this.concurrent));\n\t    };\n\t    return MergeAllOperator;\n\t}());\n\texports.MergeAllOperator = MergeAllOperator;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar MergeAllSubscriber = (function (_super) {\n\t    __extends(MergeAllSubscriber, _super);\n\t    function MergeAllSubscriber(destination, concurrent) {\n\t        _super.call(this, destination);\n\t        this.concurrent = concurrent;\n\t        this.hasCompleted = false;\n\t        this.buffer = [];\n\t        this.active = 0;\n\t    }\n\t    MergeAllSubscriber.prototype._next = function (observable) {\n\t        if (this.active < this.concurrent) {\n\t            this.active++;\n\t            this.add(subscribeToResult_1.subscribeToResult(this, observable));\n\t        }\n\t        else {\n\t            this.buffer.push(observable);\n\t        }\n\t    };\n\t    MergeAllSubscriber.prototype._complete = function () {\n\t        this.hasCompleted = true;\n\t        if (this.active === 0 && this.buffer.length === 0) {\n\t            this.destination.complete();\n\t        }\n\t    };\n\t    MergeAllSubscriber.prototype.notifyComplete = function (innerSub) {\n\t        var buffer = this.buffer;\n\t        this.remove(innerSub);\n\t        this.active--;\n\t        if (buffer.length > 0) {\n\t            this._next(buffer.shift());\n\t        }\n\t        else if (this.active === 0 && this.hasCompleted) {\n\t            this.destination.complete();\n\t        }\n\t    };\n\t    return MergeAllSubscriber;\n\t}(OuterSubscriber_1.OuterSubscriber));\n\texports.MergeAllSubscriber = MergeAllSubscriber;\n\t//# sourceMappingURL=mergeAll.js.map\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(55);\n\tvar map_1 = __webpack_require__(93);\n\tObservable_1.Observable.prototype.map = map_1.map;\n\t//# sourceMappingURL=map.js.map\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscriber_1 = __webpack_require__(58);\n\t/**\n\t * Applies a given `project` function to each value emitted by the source\n\t * Observable, and emits the resulting values as an Observable.\n\t *\n\t * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n\t * it passes each source value through a transformation function to get\n\t * corresponding output values.</span>\n\t *\n\t * <img src=\"./img/map.png\" width=\"100%\">\n\t *\n\t * Similar to the well known `Array.prototype.map` function, this operator\n\t * applies a projection to each value and emits that projection in the output\n\t * Observable.\n\t *\n\t * @example <caption>Map every every click to the clientX position of that click</caption>\n\t * var clicks = Rx.Observable.fromEvent(document, 'click');\n\t * var positions = clicks.map(ev => ev.clientX);\n\t * positions.subscribe(x => console.log(x));\n\t *\n\t * @see {@link mapTo}\n\t * @see {@link pluck}\n\t *\n\t * @param {function(value: T, index: number): R} project The function to apply\n\t * to each `value` emitted by the source Observable. The `index` parameter is\n\t * the number `i` for the i-th emission that has happened since the\n\t * subscription, starting from the number `0`.\n\t * @param {any} [thisArg] An optional argument to define what `this` is in the\n\t * `project` function.\n\t * @return {Observable<R>} An Observable that emits the values from the source\n\t * Observable transformed by the given `project` function.\n\t * @method map\n\t * @owner Observable\n\t */\n\tfunction map(project, thisArg) {\n\t    if (typeof project !== 'function') {\n\t        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n\t    }\n\t    return this.lift(new MapOperator(project, thisArg));\n\t}\n\texports.map = map;\n\tvar MapOperator = (function () {\n\t    function MapOperator(project, thisArg) {\n\t        this.project = project;\n\t        this.thisArg = thisArg;\n\t    }\n\t    MapOperator.prototype.call = function (subscriber, source) {\n\t        return source._subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n\t    };\n\t    return MapOperator;\n\t}());\n\texports.MapOperator = MapOperator;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar MapSubscriber = (function (_super) {\n\t    __extends(MapSubscriber, _super);\n\t    function MapSubscriber(destination, project, thisArg) {\n\t        _super.call(this, destination);\n\t        this.project = project;\n\t        this.count = 0;\n\t        this.thisArg = thisArg || this;\n\t    }\n\t    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n\t    // using try/catch optimizations.\n\t    MapSubscriber.prototype._next = function (value) {\n\t        var result;\n\t        try {\n\t            result = this.project.call(this.thisArg, value, this.count++);\n\t        }\n\t        catch (err) {\n\t            this.destination.error(err);\n\t            return;\n\t        }\n\t        this.destination.next(result);\n\t    };\n\t    return MapSubscriber;\n\t}(Subscriber_1.Subscriber));\n\t//# sourceMappingURL=map.js.map\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t/** @ng2api @module core */ /** */\r\n\tvar core_1 = __webpack_require__(95);\r\n\tvar ui_router_core_1 = __webpack_require__(1);\r\n\tvar uiRouterNgModule_1 = __webpack_require__(96);\r\n\tvar uiRouterConfig_1 = __webpack_require__(122);\r\n\t/**\r\n\t * Returns a function which lazy loads a nested module\r\n\t *\r\n\t * Use this function as a [[StateDeclaration.lazyLoad]] property to lazy load an NgModule and its state.\r\n\t *\r\n\t * Example using `System.import()`:\r\n\t * ```js\r\n\t * {\r\n\t *   name: 'home',\r\n\t *   url: '/home',\r\n\t *   lazyLoad: loadNgModule(() => System.import('./home.module').then(result => result.HomeModule))\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * Example using `NgModuleFactoryLoader`:\r\n\t * ```js\r\n\t * {\r\n\t *   name: 'home',\r\n\t *   url: '/home',\r\n\t *   lazyLoad: loadNgModule('./home.module')\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param moduleToLoad\r\n\t *    If a string, it should be the path to the NgModule code, which will then be loaded by the `NgModuleFactoryLoader`.\r\n\t *    If a function, the function should load the NgModule code and return a reference to the `NgModule` class being loaded.\r\n\t *\r\n\t * @returns A function which takes a transition, which:\r\n\t * - Gets the Injector (scoped properly for the destination state)\r\n\t * - Loads and creates the NgModule\r\n\t * - Finds the \"replacement state\" for the target state, and adds the new NgModule Injector to it (as a resolve)\r\n\t * - Returns the new states array\r\n\t */\r\n\tfunction loadNgModule(moduleToLoad) {\r\n\t    return function (transition) {\r\n\t        var ng2Injector = transition.injector().get(ui_router_core_1.NATIVE_INJECTOR_TOKEN);\r\n\t        var createModule = function (factory) {\r\n\t            return factory.create(ng2Injector);\r\n\t        };\r\n\t        var applyModule = function (moduleRef) {\r\n\t            return applyNgModule(transition, moduleRef);\r\n\t        };\r\n\t        return loadModuleFactory(moduleToLoad, ng2Injector)\r\n\t            .then(createModule)\r\n\t            .then(applyModule);\r\n\t    };\r\n\t}\r\n\texports.loadNgModule = loadNgModule;\r\n\t/**\r\n\t * Returns the module factory that can be used to instantiate a module\r\n\t *\r\n\t * For strings this:\r\n\t * - Finds the correct NgModuleFactoryLoader\r\n\t * - Loads the new NgModuleFactory from the path string (async)\r\n\t *\r\n\t * For a Type<any> or Promise<Type<any>> this:\r\n\t * - Compiles the component type (if not running with AOT)\r\n\t * - Returns the NgModuleFactory resulting from compilation (or direct loading if using AOT) as a Promise\r\n\t *\r\n\t * @internalapi\r\n\t */\r\n\tfunction loadModuleFactory(moduleToLoad, ng2Injector) {\r\n\t    if (ui_router_core_1.isString(moduleToLoad)) {\r\n\t        return ng2Injector.get(core_1.NgModuleFactoryLoader).load(moduleToLoad);\r\n\t    }\r\n\t    var compiler = ng2Injector.get(core_1.Compiler);\r\n\t    var offlineMode = compiler instanceof core_1.Compiler;\r\n\t    var loadChildrenPromise = Promise.resolve(moduleToLoad());\r\n\t    var compileAsync = function (moduleType) {\r\n\t        return compiler.compileModuleAsync(moduleType);\r\n\t    };\r\n\t    return offlineMode ? loadChildrenPromise : loadChildrenPromise.then(compileAsync);\r\n\t}\r\n\texports.loadModuleFactory = loadModuleFactory;\r\n\t/**\r\n\t * Apply the UI-Router Modules found in the lazy loaded module.\r\n\t *\r\n\t * Apply the Lazy Loaded NgModule's newly created Injector to the right state in the state tree.\r\n\t *\r\n\t * Lazy loading uses a placeholder state which is removed (and replaced) after the module is loaded.\r\n\t * The NgModule should include a state with the same name as the placeholder.\r\n\t *\r\n\t * Find the *newly loaded state* with the same name as the *placeholder state*.\r\n\t * The NgModule's Injector (and ComponentFactoryResolver) will be added to that state.\r\n\t * The Injector/Factory are used when creating Components for the `replacement` state and all its children.\r\n\t *\r\n\t * @internalapi\r\n\t */\r\n\tfunction applyNgModule(transition, ng2Module) {\r\n\t    var injector = ng2Module.injector;\r\n\t    var parentInjector = ng2Module.injector['parent'];\r\n\t    var uiRouter = injector.get(ui_router_core_1.UIRouter);\r\n\t    var originalName = transition.to().name;\r\n\t    var originalState = uiRouter.stateRegistry.get(originalName);\r\n\t    var newRootModules = multiProviderParentChildDelta(parentInjector, injector, uiRouterNgModule_1.UIROUTER_ROOT_MODULE);\r\n\t    if (newRootModules.length) {\r\n\t        console.log(newRootModules);\r\n\t        throw new Error('Lazy loaded modules should not contain a UIRouterModule.forRoot() module');\r\n\t    }\r\n\t    var newModules = multiProviderParentChildDelta(parentInjector, injector, uiRouterNgModule_1.UIROUTER_MODULE_TOKEN);\r\n\t    newModules.forEach(function (module) { return uiRouterConfig_1.applyModuleConfig(uiRouter, injector, module); });\r\n\t    var replacementState = uiRouter.stateRegistry.get(originalName);\r\n\t    if (replacementState === originalState) {\r\n\t        throw new Error(\"The Future State named '\" + originalName + \"' lazy loaded an NgModule. That NgModule should also have a UIRouterModule.forChild() state named '\" + originalName + \"' to replace the Future State, but it did not.\");\r\n\t    }\r\n\t    // Supply the newly loaded states with the Injector from the lazy loaded NgModule\r\n\t    replacementState.$$state().resolvables.push(ui_router_core_1.Resolvable.fromData(ui_router_core_1.NATIVE_INJECTOR_TOKEN, injector));\r\n\t    return {};\r\n\t}\r\n\texports.applyNgModule = applyNgModule;\r\n\t/**\r\n\t * Returns the new dependency injection values from the Child Injector\r\n\t *\r\n\t * When a DI token is defined as multi: true, the child injector\r\n\t * can add new values for the token.\r\n\t *\r\n\t * This function returns the values added by the child injector,  and excludes all values from the parent injector.\r\n\t *\r\n\t * @internalapi\r\n\t */\r\n\tfunction multiProviderParentChildDelta(parent, child, token) {\r\n\t    var childVals = child.get(token);\r\n\t    var parentVals = parent.get(token);\r\n\t    return childVals.filter(function (val) { return parentVals.indexOf(val) === -1; });\r\n\t}\r\n\texports.multiProviderParentChildDelta = multiProviderParentChildDelta;\r\n\n\n/***/ },\n/* 95 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_95__;\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(95);\r\n\tvar common_1 = __webpack_require__(97);\r\n\tvar directives_1 = __webpack_require__(98);\r\n\tvar uiView_1 = __webpack_require__(100);\r\n\tvar common_2 = __webpack_require__(97);\r\n\tvar providers_1 = __webpack_require__(121);\r\n\tfunction makeRootProviders(module) {\r\n\t    return [\r\n\t        { provide: exports.UIROUTER_ROOT_MODULE, useValue: module, multi: true },\r\n\t        { provide: exports.UIROUTER_MODULE_TOKEN, useValue: module, multi: true },\r\n\t        { provide: core_1.ANALYZE_FOR_ENTRY_COMPONENTS, useValue: module.states || [], multi: true },\r\n\t    ];\r\n\t}\r\n\texports.makeRootProviders = makeRootProviders;\r\n\tfunction makeChildProviders(module) {\r\n\t    return [\r\n\t        { provide: exports.UIROUTER_MODULE_TOKEN, useValue: module, multi: true },\r\n\t        { provide: core_1.ANALYZE_FOR_ENTRY_COMPONENTS, useValue: module.states || [], multi: true },\r\n\t    ];\r\n\t}\r\n\texports.makeChildProviders = makeChildProviders;\r\n\tfunction locationStrategy(useHash) {\r\n\t    return { provide: common_2.LocationStrategy, useClass: useHash ? common_2.HashLocationStrategy : common_2.PathLocationStrategy };\r\n\t}\r\n\texports.locationStrategy = locationStrategy;\r\n\t/**\r\n\t * Creates UI-Router Modules\r\n\t *\r\n\t * This class has two static factory methods which create UIRouter Modules.\r\n\t * A UI-Router Module is an [Angular 2 NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\r\n\t * with support for UI-Router.\r\n\t *\r\n\t * ### UIRouter Directives\r\n\t *\r\n\t * When a UI-Router Module is imported into a `NgModule`, that module's components\r\n\t * can use the UIRouter Directives such as [[UIView]], [[UISref]], [[UISrefActive]].\r\n\t *\r\n\t * ### State Definitions\r\n\t *\r\n\t * State definitions found in the `states:` property are provided to the Dependency Injector.\r\n\t * This enables UI-Router to automatically register the states with the [[StateRegistry]] at bootstrap (and during lazy load).\r\n\t *\r\n\t * ### Entry Components\r\n\t *\r\n\t * Any routed components are added as `entryComponents:` so they will get compiled.\r\n\t */\r\n\tvar UIRouterModule = (function () {\r\n\t    function UIRouterModule() {\r\n\t    }\r\n\t    /**\r\n\t     * Creates a UI-Router Module for the root (bootstrapped) application module to import\r\n\t     *\r\n\t     * This factory function creates an [Angular 2 NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\r\n\t     * with UI-Router support.\r\n\t     *\r\n\t     * The `forRoot` module should be added to the `imports:` of the `NgModule` being bootstrapped.\r\n\t     * An application should only create and import a single `NgModule` using `forRoot()`.\r\n\t     * All other modules should be created using [[UIRouterModule.forChild]].\r\n\t     *\r\n\t     * Unlike `forChild`, an `NgModule` returned by this factory provides the [[UIRouter]] singleton object.\r\n\t     * This factory also accepts root-level router configuration.\r\n\t     * These are the only differences between `forRoot` and `forChild`.\r\n\t     *\r\n\t     * Example:\r\n\t     * ```js\r\n\t     * let routerConfig = {\r\n\t     *   otherwise: '/home',\r\n\t     *   states: [homeState, aboutState]\r\n\t     * };\r\n\t     *\r\n\t     * @ NgModule({\r\n\t     *   imports: [\r\n\t     *     BrowserModule,\r\n\t     *     UIRouterModule.forRoot(routerConfig),\r\n\t     *     FeatureModule1\r\n\t     *   ]\r\n\t     * })\r\n\t     * class MyRootAppModule {}\r\n\t     *\r\n\t     * browserPlatformDynamic.bootstrapModule(MyRootAppModule);\r\n\t     * ```\r\n\t     *\r\n\t     * @param config declarative UI-Router configuration\r\n\t     * @returns an `NgModule` which provides the [[UIRouter]] singleton instance\r\n\t     */\r\n\t    UIRouterModule.forRoot = function (config) {\r\n\t        if (config === void 0) { config = {}; }\r\n\t        return {\r\n\t            ngModule: UIRouterModule,\r\n\t            providers: [\r\n\t                providers_1._UIROUTER_INSTANCE_PROVIDERS,\r\n\t                providers_1._UIROUTER_SERVICE_PROVIDERS,\r\n\t                locationStrategy(config.useHash)\r\n\t            ].concat(makeRootProviders(config))\r\n\t        };\r\n\t    };\r\n\t    /**\r\n\t     * Creates an `NgModule` for a UIRouter module\r\n\t     *\r\n\t     * This function creates an [Angular 2 NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\r\n\t     * with UI-Router support.\r\n\t     *\r\n\t     * #### Example:\r\n\t     * ```js\r\n\t     * var homeState = { name: 'home', url: '/home', component: Home };\r\n\t     * var aboutState = { name: 'about', url: '/about', component: About };\r\n\t     *\r\n\t     * @ NgModule({\r\n\t     *   imports: [\r\n\t     *     UIRouterModule.forChild({ states: [ homeState, aboutState ] }),\r\n\t     *     SharedModule,\r\n\t     *   ],\r\n\t     *   declarations: [ Home, About ],\r\n\t     * })\r\n\t     * export class AppModule {};\r\n\t     * ```\r\n\t     *\r\n\t     * @param module UI-Router module options\r\n\t     * @returns an `NgModule`\r\n\t     */\r\n\t    UIRouterModule.forChild = function (module) {\r\n\t        if (module === void 0) { module = {}; }\r\n\t        return {\r\n\t            ngModule: UIRouterModule,\r\n\t            providers: makeChildProviders(module),\r\n\t        };\r\n\t    };\r\n\t    UIRouterModule = __decorate([\r\n\t        core_1.NgModule({\r\n\t            imports: [common_1.CommonModule],\r\n\t            declarations: [directives_1._UIROUTER_DIRECTIVES],\r\n\t            exports: [directives_1._UIROUTER_DIRECTIVES],\r\n\t            entryComponents: [uiView_1.UIView],\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], UIRouterModule);\r\n\t    return UIRouterModule;\r\n\t}());\r\n\texports.UIRouterModule = UIRouterModule;\r\n\t/** @hidden */\r\n\texports.UIROUTER_ROOT_MODULE = new core_1.OpaqueToken(\"UIRouter Root Module\");\r\n\t/** @hidden */\r\n\texports.UIROUTER_MODULE_TOKEN = new core_1.OpaqueToken(\"UIRouter Module\");\r\n\n\n/***/ },\n/* 97 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_97__;\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t/**\r\n\t * The UI-Router Angular 2 directives:\r\n\t *\r\n\t * - [[UIView]]: A viewport for routed components\r\n\t * - [[UISref]]: A state ref to a target state; navigates when clicked\r\n\t * - [[UISrefActive]]: (and `UISrefActiveEq`) Adds a css class when a UISref's target state (or a child state) is active\r\n\t *\r\n\t * @ng2api\r\n\t * @preferred\r\n\t * @module directives\r\n\t */ /** */\r\n\tvar uiSref_1 = __webpack_require__(99);\r\n\tvar uiSrefActive_1 = __webpack_require__(118);\r\n\tvar uiView_1 = __webpack_require__(100);\r\n\tvar uiSrefStatus_1 = __webpack_require__(119);\r\n\t__export(__webpack_require__(100));\r\n\t__export(__webpack_require__(99));\r\n\t__export(__webpack_require__(119));\r\n\t__export(__webpack_require__(118));\r\n\t/** @internalapi */\r\n\texports._UIROUTER_DIRECTIVES = [uiSref_1.UISref, uiSref_1.AnchorUISref, uiView_1.UIView, uiSrefActive_1.UISrefActive, uiSrefStatus_1.UISrefStatus];\r\n\t/**\r\n\t * References to the UI-Router directive classes, for use within a @Component's `directives:` property\r\n\t * @deprecated use [[UIRouterModule]]\r\n\t * @internalapi\r\n\t */\r\n\texports.UIROUTER_DIRECTIVES = exports._UIROUTER_DIRECTIVES;\r\n\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n\t    return function (target, key) { decorator(target, key, paramIndex); }\r\n\t};\r\n\t/** @ng2api @module directives */ /** */\r\n\tvar ui_router_core_1 = __webpack_require__(1);\r\n\tvar core_1 = __webpack_require__(95);\r\n\tvar core_2 = __webpack_require__(95);\r\n\tvar core_3 = __webpack_require__(95);\r\n\tvar core_4 = __webpack_require__(95);\r\n\tvar uiView_1 = __webpack_require__(100);\r\n\tvar ui_router_core_2 = __webpack_require__(1);\r\n\tvar ui_router_core_3 = __webpack_require__(1);\r\n\tvar ReplaySubject_1 = __webpack_require__(104);\r\n\t__webpack_require__(117);\r\n\t/**\r\n\t * @internalapi\r\n\t * # blah blah blah\r\n\t */\r\n\tvar AnchorUISref = (function () {\r\n\t    function AnchorUISref(_el, _renderer) {\r\n\t        this._el = _el;\r\n\t        this._renderer = _renderer;\r\n\t    }\r\n\t    AnchorUISref.prototype.update = function (href) {\r\n\t        this._renderer.setElementProperty(this._el.nativeElement, 'href', href);\r\n\t    };\r\n\t    AnchorUISref = __decorate([\r\n\t        core_1.Directive({ selector: 'a[uiSref]' }), \r\n\t        __metadata('design:paramtypes', [core_3.ElementRef, core_4.Renderer])\r\n\t    ], AnchorUISref);\r\n\t    return AnchorUISref;\r\n\t}());\r\n\texports.AnchorUISref = AnchorUISref;\r\n\t/**\r\n\t * A directive when clicked, initiates a [[Transition]] to a [[TargetState]].\r\n\t *\r\n\t * ### Purpose\r\n\t *\r\n\t * This directive is applied to anchor tags (`<a>`) or any other clickable element.  It is a state reference (or sref --\r\n\t * similar to an href).  When clicked, the directive will transition to that state by calling [[StateService.go]],\r\n\t * and optionally supply state parameter values and transition options.\r\n\t *\r\n\t * When this directive is on an anchor tag, it will also add an `href` attribute to the anchor.\r\n\t *\r\n\t * ### Selector\r\n\t *\r\n\t * - `[uiSref]`: The directive is created as an attribute on an element, e.g., `<a uiSref></a>`\r\n\t *\r\n\t * ### Inputs\r\n\t *\r\n\t * - `uiSref`: the target state's name, e.g., `uiSref=\"foostate\"`.  If a component template uses a relative `uiSref`,\r\n\t * e.g., `uiSref=\".child\"`, the reference is relative to that component's state.\r\n\t *\r\n\t * - `uiParams`: any target state parameter values, as an object, e.g., `[uiParams]=\"{ fooId: bar.fooId }\"`\r\n\t *\r\n\t * - `uiOptions`: [[TransitionOptions]], e.g., `[uiOptions]=\"{ inherit: false }\"`\r\n\t *\r\n\t * @example\r\n\t * ```html\r\n\t *\r\n\t * <!-- Targets bar state' -->\r\n\t * <a uiSref=\"bar\">Bar</a>\r\n\t *\r\n\t * <!-- Assume this component's state is \"foo\".\r\n\t *      Relatively targets \"foo.child\" -->\r\n\t * <a uiSref=\".child\">Foo Child</a>\r\n\t *\r\n\t * <!-- Targets \"bar\" state and supplies parameter value -->\r\n\t * <a uiSref=\"bar\" [uiParams]=\"{ barId: foo.barId }\">Bar {{foo.barId}}</a>\r\n\t *\r\n\t * <!-- Targets \"bar\" state and parameter, doesn't inherit existing parameters-->\r\n\t * <a uiSref=\"bar\" [uiParams]=\"{ barId: foo.barId }\" [uiOptions]=\"{ inherit: false }\">Bar {{foo.barId}}</a>\r\n\t * ```\r\n\t */\r\n\tvar UISref = (function () {\r\n\t    function UISref(\r\n\t        /** @internalapi */ _router, \r\n\t        /** @internalapi */ parent, \r\n\t        /** @internalapi */ _anchorUISref, _globals) {\r\n\t        var _this = this;\r\n\t        this._router = _router;\r\n\t        this.parent = parent;\r\n\t        this._anchorUISref = _anchorUISref;\r\n\t        /**\r\n\t         * An observable (ReplaySubject) of the state this UISref is targeting.\r\n\t         * When the UISref is clicked, it will transition to this [[TargetState]].\r\n\t         */\r\n\t        this.targetState$ = new ReplaySubject_1.ReplaySubject(1);\r\n\t        /** @internalapi */\r\n\t        this._emit = false;\r\n\t        this._statesSub = _globals.states$.subscribe(function () { return _this.update(); });\r\n\t    }\r\n\t    Object.defineProperty(UISref.prototype, \"uiSref\", {\r\n\t        /** @internalapi */\r\n\t        set: function (val) { this.state = val; this.update(); },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(UISref.prototype, \"uiParams\", {\r\n\t        /** @internalapi */\r\n\t        set: function (val) { this.params = val; this.update(); },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(UISref.prototype, \"uiOptions\", {\r\n\t        /** @internalapi */\r\n\t        set: function (val) { this.options = val; this.update(); },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    UISref.prototype.ngOnInit = function () {\r\n\t        this._emit = true;\r\n\t        this.update();\r\n\t    };\r\n\t    UISref.prototype.ngOnDestroy = function () {\r\n\t        this._emit = false;\r\n\t        this._statesSub.unsubscribe();\r\n\t        this.targetState$.unsubscribe();\r\n\t    };\r\n\t    UISref.prototype.update = function () {\r\n\t        var $state = this._router.stateService;\r\n\t        if (this._emit) {\r\n\t            var newTarget = $state.target(this.state, this.params, this.getOptions());\r\n\t            this.targetState$.next(newTarget);\r\n\t        }\r\n\t        if (this._anchorUISref) {\r\n\t            var href = $state.href(this.state, this.params, this.getOptions());\r\n\t            this._anchorUISref.update(href);\r\n\t        }\r\n\t    };\r\n\t    UISref.prototype.getOptions = function () {\r\n\t        var defaultOpts = {\r\n\t            relative: this.parent && this.parent.context && this.parent.context.name,\r\n\t            inherit: true,\r\n\t            source: \"sref\"\r\n\t        };\r\n\t        return ui_router_core_2.extend(defaultOpts, this.options || {});\r\n\t    };\r\n\t    /** When triggered by a (click) event, this function transitions to the UISref's target state */\r\n\t    UISref.prototype.go = function () {\r\n\t        this._router.stateService.go(this.state, this.params, this.getOptions());\r\n\t        return false;\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input('uiSref'), \r\n\t        __metadata('design:type', String)\r\n\t    ], UISref.prototype, \"state\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('uiParams'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], UISref.prototype, \"params\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('uiOptions'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], UISref.prototype, \"options\", void 0);\r\n\t    UISref = __decorate([\r\n\t        core_1.Directive({\r\n\t            selector: '[uiSref]',\r\n\t            host: { '(click)': 'go()' }\r\n\t        }),\r\n\t        __param(1, core_1.Inject(uiView_1.UIView.PARENT_INJECT)),\r\n\t        __param(2, core_2.Optional()),\r\n\t        __param(3, core_1.Inject(ui_router_core_3.Globals)), \r\n\t        __metadata('design:paramtypes', [ui_router_core_1.UIRouter, Object, AnchorUISref, Object])\r\n\t    ], UISref);\r\n\t    return UISref;\r\n\t}());\r\n\texports.UISref = UISref;\r\n\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n\t    return function (target, key) { decorator(target, key, paramIndex); }\r\n\t};\r\n\t/** @ng2api @module directives */ /** */\r\n\tvar core_1 = __webpack_require__(95);\r\n\tvar private_import_core_1 = __webpack_require__(101);\r\n\tvar ui_router_core_1 = __webpack_require__(1);\r\n\tvar ui_router_core_2 = __webpack_require__(1);\r\n\tvar views_1 = __webpack_require__(102);\r\n\tvar ui_router_core_3 = __webpack_require__(1);\r\n\tvar ui_router_core_4 = __webpack_require__(1);\r\n\tvar mergeInjector_1 = __webpack_require__(103);\r\n\t/** @hidden */\r\n\tvar id = 0;\r\n\t/**\r\n\t * Given a component class, gets the inputs of styles:\r\n\t *\r\n\t * - @Input('foo') _foo\r\n\t * - `inputs: ['foo']`\r\n\t *\r\n\t * @internalapi\r\n\t */\r\n\tvar ng2ComponentInputs = function (ng2CompClass) {\r\n\t    /** Get \"@Input('foo') _foo\" inputs */\r\n\t    var props = private_import_core_1.reflector.propMetadata(ng2CompClass);\r\n\t    var _props = Object.keys(props || {})\r\n\t        .map(function (key) { return ({ key: key, annoArr: props[key] }); })\r\n\t        .reduce(function (acc, tuple) { return acc.concat(tuple.annoArr.map(function (anno) { return ({ key: tuple.key, anno: anno }); })); }, [])\r\n\t        .filter(function (tuple) { return tuple.anno instanceof core_1.Input; })\r\n\t        .map(function (tuple) { return ({ token: tuple.anno.bindingPropertyName || tuple.key, prop: tuple.key }); });\r\n\t    /** Get \"inputs: ['foo']\" inputs */\r\n\t    var inputs = private_import_core_1.reflector.annotations(ng2CompClass)\r\n\t        .filter(function (x) { return x instanceof core_1.Component && !!x.inputs; })\r\n\t        .map(function (x) { return x.inputs; })\r\n\t        .reduce(ui_router_core_4.flattenR, [])\r\n\t        .map(function (input) { return ({ token: input, prop: input }); });\r\n\t    return _props.concat(inputs);\r\n\t};\r\n\t/**\r\n\t * A UI-Router viewport directive, which is filled in by a view (component) on a state.\r\n\t *\r\n\t * ### Selector\r\n\t *\r\n\t * A `ui-view` directive can be created as an element: `<ui-view></ui-view>` or as an attribute: `<div ui-view></div>`.\r\n\t *\r\n\t * ### Purpose\r\n\t *\r\n\t * This directive is used in a Component template (or as the root component) to create a viewport.  The viewport\r\n\t * is filled in by a view (as defined by a [[Ng2ViewDeclaration]] inside a [[Ng2StateDeclaration]]) when the view's\r\n\t * state has been activated.\r\n\t *\r\n\t * #### Example:\r\n\t * ```js\r\n\t * // This app has two states, 'foo' and 'bar'\r\n\t * stateRegistry.register({ name: 'foo', url: '/foo', component: FooComponent });\r\n\t * stateRegistry.register({ name: 'bar', url: '/bar', component: BarComponent });\r\n\t * ```\r\n\t * ```html\r\n\t * <!-- This ui-view will be filled in by the foo state's component or\r\n\t *      the bar state's component when the foo or bar state is activated -->\r\n\t * <ui-view></ui-view>\r\n\t * ```\r\n\t *\r\n\t * ### Named ui-views\r\n\t *\r\n\t * A `ui-view` may optionally be given a name via the attribute value: `<div ui-view='header'></div>`.  *Note:\r\n\t * an unnamed `ui-view` is internally named `$default`*.   When a `ui-view` has a name, it will be filled in\r\n\t * by a matching named view.\r\n\t *\r\n\t * #### Example:\r\n\t * ```js\r\n\t * stateRegistry.register({\r\n\t *   name: 'foo',\r\n\t *   url: '/foo',\r\n\t *   views: { header: HeaderComponent, $default: FooComponent });\r\n\t * ```\r\n\t * ```html\r\n\t * <!-- When 'foo' state is active, filled by HeaderComponent -->\r\n\t * <div ui-view=\"header\"></div>\r\n\t *\r\n\t * <!-- When 'foo' state is active, filled by FooComponent -->\r\n\t * <ui-view></ui-view>\r\n\t * ```\r\n\t */\r\n\tvar UIView = (function () {\r\n\t    function UIView(router, parent, viewContainerRef) {\r\n\t        this.router = router;\r\n\t        this.viewContainerRef = viewContainerRef;\r\n\t        this.uiViewData = {};\r\n\t        this.parent = parent;\r\n\t    }\r\n\t    Object.defineProperty(UIView.prototype, \"_name\", {\r\n\t        set: function (val) { this.name = val; },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    UIView.prototype.ngOnInit = function () {\r\n\t        var parentFqn = this.parent.fqn;\r\n\t        var name = this.name || '$default';\r\n\t        this.uiViewData = {\r\n\t            $type: 'ng2',\r\n\t            id: id++,\r\n\t            name: name,\r\n\t            fqn: parentFqn ? parentFqn + \".\" + name : name,\r\n\t            creationContext: this.parent.context,\r\n\t            configUpdated: this.viewConfigUpdated.bind(this),\r\n\t            config: undefined\r\n\t        };\r\n\t        this.deregister = this.router.viewService.registerUIView(this.uiViewData);\r\n\t    };\r\n\t    UIView.prototype.disposeLast = function () {\r\n\t        if (this.componentRef)\r\n\t            this.componentRef.destroy();\r\n\t        this.componentRef = null;\r\n\t    };\r\n\t    UIView.prototype.ngOnDestroy = function () {\r\n\t        if (this.deregister)\r\n\t            this.deregister();\r\n\t        this.disposeLast();\r\n\t    };\r\n\t    /**\r\n\t     * The view service is informing us of an updated ViewConfig\r\n\t     * (usually because a transition activated some state and its views)\r\n\t     */\r\n\t    UIView.prototype.viewConfigUpdated = function (config) {\r\n\t        // The config may be undefined if there is nothing currently targeting this UIView.\r\n\t        // Dispose the current component, if there is one\r\n\t        if (!config)\r\n\t            return this.disposeLast();\r\n\t        // Only care about Ng2 configs\r\n\t        if (!(config instanceof views_1.Ng2ViewConfig))\r\n\t            return;\r\n\t        // The \"new\" viewconfig is already applied, so exit early\r\n\t        if (this.uiViewData.config === config)\r\n\t            return;\r\n\t        // This is a new ViewConfig.  Dispose the previous component\r\n\t        this.disposeLast();\r\n\t        ui_router_core_2.trace.traceUIViewConfigUpdated(this.uiViewData, config && config.viewDecl.$context);\r\n\t        this.applyUpdatedConfig(config);\r\n\t    };\r\n\t    UIView.prototype.applyUpdatedConfig = function (config) {\r\n\t        this.uiViewData.config = config;\r\n\t        // Create the Injector for the routed component\r\n\t        var context = new ui_router_core_3.ResolveContext(config.path);\r\n\t        var componentInjector = this.getComponentInjector(context);\r\n\t        // Get the component class from the view declaration. TODO: allow promises?\r\n\t        var componentClass = config.viewDecl.component;\r\n\t        // Create the component\r\n\t        var compFactoryResolver = componentInjector.get(core_1.ComponentFactoryResolver);\r\n\t        var compFactory = compFactoryResolver.resolveComponentFactory(componentClass);\r\n\t        this.componentRef = this.componentTarget.createComponent(compFactory, undefined, componentInjector);\r\n\t        // Wire resolves to @Input()s\r\n\t        this.applyInputBindings(this.componentRef, context, componentClass);\r\n\t        // TODO: wire uiCanExit and uiOnParamsChanged callbacks\r\n\t    };\r\n\t    /**\r\n\t     * Creates a new Injector for a routed component.\r\n\t     *\r\n\t     * Adds resolve values to the Injector\r\n\t     * Adds providers from the NgModule for the state\r\n\t     * Adds providers from the parent Component in the component tree\r\n\t     * Adds a PARENT_INJECT view context object\r\n\t     *\r\n\t     * @returns an Injector\r\n\t     */\r\n\t    UIView.prototype.getComponentInjector = function (context) {\r\n\t        // Map resolves to \"useValue: providers\"\r\n\t        var resolvables = context.getTokens().map(function (token) { return context.getResolvable(token); }).filter(function (r) { return r.resolved; });\r\n\t        var newProviders = resolvables.map(function (r) { return ({ provide: r.token, useValue: r.data }); });\r\n\t        var parentInject = { context: this.uiViewData.config.viewDecl.$context, fqn: this.uiViewData.fqn };\r\n\t        newProviders.push({ provide: UIView.PARENT_INJECT, useValue: parentInject });\r\n\t        var parentComponentInjector = this.viewContainerRef.injector;\r\n\t        var moduleInjector = context.getResolvable(ui_router_core_3.NATIVE_INJECTOR_TOKEN).data;\r\n\t        var mergedParentInjector = new mergeInjector_1.MergeInjector(moduleInjector, parentComponentInjector);\r\n\t        return core_1.ReflectiveInjector.resolveAndCreate(newProviders, mergedParentInjector);\r\n\t    };\r\n\t    /**\r\n\t     * Supplies component inputs with resolve data\r\n\t     *\r\n\t     * Finds component inputs which match resolves (by name) and sets the input value\r\n\t     * to the resolve data.\r\n\t     */\r\n\t    UIView.prototype.applyInputBindings = function (ref, context, componentClass) {\r\n\t        var bindings = this.uiViewData.config.viewDecl['bindings'] || {};\r\n\t        var addResolvable = function (tuple) { return ({\r\n\t            prop: tuple.prop,\r\n\t            resolvable: context.getResolvable(bindings[tuple.prop] || tuple.token)\r\n\t        }); };\r\n\t        // Supply resolve data to matching @Input('prop') or inputs: ['prop']\r\n\t        var inputTuples = ng2ComponentInputs(componentClass);\r\n\t        inputTuples.map(addResolvable)\r\n\t            .filter(function (tuple) { return tuple.resolvable && tuple.resolvable.resolved; })\r\n\t            .forEach(function (tuple) { ref.instance[tuple.prop] = tuple.resolvable.data; });\r\n\t        // Initiate change detection for the newly created component\r\n\t        ref.changeDetectorRef.detectChanges();\r\n\t    };\r\n\t    UIView.PARENT_INJECT = \"UIView.PARENT_INJECT\";\r\n\t    __decorate([\r\n\t        core_1.ViewChild('componentTarget', { read: core_1.ViewContainerRef }), \r\n\t        __metadata('design:type', core_1.ViewContainerRef)\r\n\t    ], UIView.prototype, \"componentTarget\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('name'), \r\n\t        __metadata('design:type', String)\r\n\t    ], UIView.prototype, \"name\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('ui-view'), \r\n\t        __metadata('design:type', String), \r\n\t        __metadata('design:paramtypes', [String])\r\n\t    ], UIView.prototype, \"_name\", null);\r\n\t    UIView = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'ui-view, [ui-view]',\r\n\t            template: \"\\n    <template #componentTarget></template>\\n    <ng-content *ngIf=\\\"!componentRef\\\"></ng-content>\\n  \"\r\n\t        }),\r\n\t        __param(1, core_1.Inject(UIView.PARENT_INJECT)), \r\n\t        __metadata('design:paramtypes', [ui_router_core_1.UIRouter, Object, core_1.ViewContainerRef])\r\n\t    ], UIView);\r\n\t    return UIView;\r\n\t}());\r\n\texports.UIView = UIView;\r\n\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @module ng2 */\r\n\t/**\r\n\t * @Kamshak It's imported like this in @angular/compiler as well.\r\n\t * Was going to mark it injectable as in\r\n\t * https://github.com/angular/angular/blob/42a287fabf6b035d51e00cf3006c27fec00f054a/modules/%40angular/compiler/src/ng_module_resolver.ts\r\n\t * but unfortunately not all platforms (namely browser-dynamic) provide it.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(95);\r\n\texports.reflector = core_1.__core_private__.reflector;\r\n\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar ui_router_core_1 = __webpack_require__(1);\r\n\tvar ui_router_core_2 = __webpack_require__(1);\r\n\tvar ui_router_core_3 = __webpack_require__(1);\r\n\t/**\r\n\t * This is a [[StateBuilder.builder]] function for angular2 `views`.\r\n\t *\r\n\t * When the [[StateBuilder]] builds a [[State]] object from a raw [[StateDeclaration]], this builder\r\n\t * handles the `views` property with logic specific to ui-router-ng2.\r\n\t *\r\n\t * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object and\r\n\t * applies the state-level configuration to a view named `$default`.\r\n\t */\r\n\tfunction ng2ViewsBuilder(state) {\r\n\t    var views = {}, viewsObject = state.views || { \"$default\": ui_router_core_1.pick(state, \"component\") };\r\n\t    ui_router_core_1.forEach(viewsObject, function (config, name) {\r\n\t        name = name || \"$default\"; // Account for views: { \"\": { template... } }\r\n\t        if (Object.keys(config).length == 0)\r\n\t            return;\r\n\t        config.$type = \"ng2\";\r\n\t        config.$context = state;\r\n\t        config.$name = name;\r\n\t        var normalized = ui_router_core_3.ViewService.normalizeUIViewTarget(config.$context, config.$name);\r\n\t        config.$uiViewName = normalized.uiViewName;\r\n\t        config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\r\n\t        views[name] = config;\r\n\t    });\r\n\t    return views;\r\n\t}\r\n\texports.ng2ViewsBuilder = ng2ViewsBuilder;\r\n\tvar id = 0;\r\n\tvar Ng2ViewConfig = (function () {\r\n\t    function Ng2ViewConfig(path, viewDecl) {\r\n\t        this.path = path;\r\n\t        this.viewDecl = viewDecl;\r\n\t        this.$id = id++;\r\n\t        this.loaded = true;\r\n\t    }\r\n\t    Ng2ViewConfig.prototype.load = function () {\r\n\t        return ui_router_core_2.services.$q.when(this);\r\n\t    };\r\n\t    return Ng2ViewConfig;\r\n\t}());\r\n\texports.Ng2ViewConfig = Ng2ViewConfig;\r\n\n\n/***/ },\n/* 103 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Merge two injectors\r\n\t *\r\n\t * This class implements the Injector ng2 interface but delegates\r\n\t * to the Injectors provided in the constructor.\r\n\t */\r\n\tvar MergeInjector = (function () {\r\n\t    function MergeInjector() {\r\n\t        var injectors = [];\r\n\t        for (var _i = 0; _i < arguments.length; _i++) {\r\n\t            injectors[_i - 0] = arguments[_i];\r\n\t        }\r\n\t        if (injectors.length < 2)\r\n\t            throw new Error(\"pass at least two injectors\");\r\n\t        this.injectors = injectors;\r\n\t    }\r\n\t    /**\r\n\t     * Get the token from the first injector which contains it.\r\n\t     *\r\n\t     * Delegates to the first Injector.get().\r\n\t     * If not found, then delegates to the second Injector (and so forth).\r\n\t     * If no Injector contains the token, return the `notFoundValue`, or throw.\r\n\t     *\r\n\t     * @param token the DI token\r\n\t     * @param notFoundValue the value to return if none of the Injectors contains the token.\r\n\t     * @returns {any} the DI value\r\n\t     */\r\n\t    MergeInjector.prototype.get = function (token, notFoundValue) {\r\n\t        for (var i = 0; i < this.injectors.length; i++) {\r\n\t            var val = this.injectors[i].get(token, MergeInjector.NOT_FOUND);\r\n\t            if (val !== MergeInjector.NOT_FOUND)\r\n\t                return val;\r\n\t        }\r\n\t        if (arguments.length >= 2)\r\n\t            return notFoundValue;\r\n\t        // This will throw the DI Injector error\r\n\t        this.injectors[0].get(token);\r\n\t    };\r\n\t    MergeInjector.NOT_FOUND = {};\r\n\t    return MergeInjector;\r\n\t}());\r\n\texports.MergeInjector = MergeInjector;\r\n\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subject_1 = __webpack_require__(105);\n\tvar queue_1 = __webpack_require__(108);\n\tvar observeOn_1 = __webpack_require__(115);\n\t/**\n\t * @class ReplaySubject<T>\n\t */\n\tvar ReplaySubject = (function (_super) {\n\t    __extends(ReplaySubject, _super);\n\t    function ReplaySubject(bufferSize, windowTime, scheduler) {\n\t        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n\t        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n\t        _super.call(this);\n\t        this.scheduler = scheduler;\n\t        this._events = [];\n\t        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n\t        this._windowTime = windowTime < 1 ? 1 : windowTime;\n\t    }\n\t    ReplaySubject.prototype.next = function (value) {\n\t        var now = this._getNow();\n\t        this._events.push(new ReplayEvent(now, value));\n\t        this._trimBufferThenGetEvents();\n\t        _super.prototype.next.call(this, value);\n\t    };\n\t    ReplaySubject.prototype._subscribe = function (subscriber) {\n\t        var _events = this._trimBufferThenGetEvents();\n\t        var scheduler = this.scheduler;\n\t        if (scheduler) {\n\t            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));\n\t        }\n\t        var len = _events.length;\n\t        for (var i = 0; i < len && !subscriber.closed; i++) {\n\t            subscriber.next(_events[i].value);\n\t        }\n\t        return _super.prototype._subscribe.call(this, subscriber);\n\t    };\n\t    ReplaySubject.prototype._getNow = function () {\n\t        return (this.scheduler || queue_1.queue).now();\n\t    };\n\t    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n\t        var now = this._getNow();\n\t        var _bufferSize = this._bufferSize;\n\t        var _windowTime = this._windowTime;\n\t        var _events = this._events;\n\t        var eventsCount = _events.length;\n\t        var spliceCount = 0;\n\t        // Trim events that fall out of the time window.\n\t        // Start at the front of the list. Break early once\n\t        // we encounter an event that falls within the window.\n\t        while (spliceCount < eventsCount) {\n\t            if ((now - _events[spliceCount].time) < _windowTime) {\n\t                break;\n\t            }\n\t            spliceCount++;\n\t        }\n\t        if (eventsCount > _bufferSize) {\n\t            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n\t        }\n\t        if (spliceCount > 0) {\n\t            _events.splice(0, spliceCount);\n\t        }\n\t        return _events;\n\t    };\n\t    return ReplaySubject;\n\t}(Subject_1.Subject));\n\texports.ReplaySubject = ReplaySubject;\n\tvar ReplayEvent = (function () {\n\t    function ReplayEvent(time, value) {\n\t        this.time = time;\n\t        this.value = value;\n\t    }\n\t    return ReplayEvent;\n\t}());\n\t//# sourceMappingURL=ReplaySubject.js.map\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Observable_1 = __webpack_require__(55);\n\tvar Subscriber_1 = __webpack_require__(58);\n\tvar Subscription_1 = __webpack_require__(60);\n\tvar ObjectUnsubscribedError_1 = __webpack_require__(106);\n\tvar SubjectSubscription_1 = __webpack_require__(107);\n\tvar rxSubscriber_1 = __webpack_require__(67);\n\t/**\n\t * @class SubjectSubscriber<T>\n\t */\n\tvar SubjectSubscriber = (function (_super) {\n\t    __extends(SubjectSubscriber, _super);\n\t    function SubjectSubscriber(destination) {\n\t        _super.call(this, destination);\n\t        this.destination = destination;\n\t    }\n\t    return SubjectSubscriber;\n\t}(Subscriber_1.Subscriber));\n\texports.SubjectSubscriber = SubjectSubscriber;\n\t/**\n\t * @class Subject<T>\n\t */\n\tvar Subject = (function (_super) {\n\t    __extends(Subject, _super);\n\t    function Subject() {\n\t        _super.call(this);\n\t        this.observers = [];\n\t        this.closed = false;\n\t        this.isStopped = false;\n\t        this.hasError = false;\n\t        this.thrownError = null;\n\t    }\n\t    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {\n\t        return new SubjectSubscriber(this);\n\t    };\n\t    Subject.prototype.lift = function (operator) {\n\t        var subject = new AnonymousSubject(this, this);\n\t        subject.operator = operator;\n\t        return subject;\n\t    };\n\t    Subject.prototype.next = function (value) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        if (!this.isStopped) {\n\t            var observers = this.observers;\n\t            var len = observers.length;\n\t            var copy = observers.slice();\n\t            for (var i = 0; i < len; i++) {\n\t                copy[i].next(value);\n\t            }\n\t        }\n\t    };\n\t    Subject.prototype.error = function (err) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        this.hasError = true;\n\t        this.thrownError = err;\n\t        this.isStopped = true;\n\t        var observers = this.observers;\n\t        var len = observers.length;\n\t        var copy = observers.slice();\n\t        for (var i = 0; i < len; i++) {\n\t            copy[i].error(err);\n\t        }\n\t        this.observers.length = 0;\n\t    };\n\t    Subject.prototype.complete = function () {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        this.isStopped = true;\n\t        var observers = this.observers;\n\t        var len = observers.length;\n\t        var copy = observers.slice();\n\t        for (var i = 0; i < len; i++) {\n\t            copy[i].complete();\n\t        }\n\t        this.observers.length = 0;\n\t    };\n\t    Subject.prototype.unsubscribe = function () {\n\t        this.isStopped = true;\n\t        this.closed = true;\n\t        this.observers = null;\n\t    };\n\t    Subject.prototype._subscribe = function (subscriber) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        else if (this.hasError) {\n\t            subscriber.error(this.thrownError);\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t        else if (this.isStopped) {\n\t            subscriber.complete();\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t        else {\n\t            this.observers.push(subscriber);\n\t            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n\t        }\n\t    };\n\t    Subject.prototype.asObservable = function () {\n\t        var observable = new Observable_1.Observable();\n\t        observable.source = this;\n\t        return observable;\n\t    };\n\t    Subject.create = function (destination, source) {\n\t        return new AnonymousSubject(destination, source);\n\t    };\n\t    return Subject;\n\t}(Observable_1.Observable));\n\texports.Subject = Subject;\n\t/**\n\t * @class AnonymousSubject<T>\n\t */\n\tvar AnonymousSubject = (function (_super) {\n\t    __extends(AnonymousSubject, _super);\n\t    function AnonymousSubject(destination, source) {\n\t        _super.call(this);\n\t        this.destination = destination;\n\t        this.source = source;\n\t    }\n\t    AnonymousSubject.prototype.next = function (value) {\n\t        var destination = this.destination;\n\t        if (destination && destination.next) {\n\t            destination.next(value);\n\t        }\n\t    };\n\t    AnonymousSubject.prototype.error = function (err) {\n\t        var destination = this.destination;\n\t        if (destination && destination.error) {\n\t            this.destination.error(err);\n\t        }\n\t    };\n\t    AnonymousSubject.prototype.complete = function () {\n\t        var destination = this.destination;\n\t        if (destination && destination.complete) {\n\t            this.destination.complete();\n\t        }\n\t    };\n\t    AnonymousSubject.prototype._subscribe = function (subscriber) {\n\t        var source = this.source;\n\t        if (source) {\n\t            return this.source.subscribe(subscriber);\n\t        }\n\t        else {\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t    };\n\t    return AnonymousSubject;\n\t}(Subject));\n\texports.AnonymousSubject = AnonymousSubject;\n\t//# sourceMappingURL=Subject.js.map\n\n/***/ },\n/* 106 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * An error thrown when an action is invalid because the object has been\n\t * unsubscribed.\n\t *\n\t * @see {@link Subject}\n\t * @see {@link BehaviorSubject}\n\t *\n\t * @class ObjectUnsubscribedError\n\t */\n\tvar ObjectUnsubscribedError = (function (_super) {\n\t    __extends(ObjectUnsubscribedError, _super);\n\t    function ObjectUnsubscribedError() {\n\t        var err = _super.call(this, 'object unsubscribed');\n\t        this.name = err.name = 'ObjectUnsubscribedError';\n\t        this.stack = err.stack;\n\t        this.message = err.message;\n\t    }\n\t    return ObjectUnsubscribedError;\n\t}(Error));\n\texports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n\t//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscription_1 = __webpack_require__(60);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar SubjectSubscription = (function (_super) {\n\t    __extends(SubjectSubscription, _super);\n\t    function SubjectSubscription(subject, subscriber) {\n\t        _super.call(this);\n\t        this.subject = subject;\n\t        this.subscriber = subscriber;\n\t        this.closed = false;\n\t    }\n\t    SubjectSubscription.prototype.unsubscribe = function () {\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.closed = true;\n\t        var subject = this.subject;\n\t        var observers = subject.observers;\n\t        this.subject = null;\n\t        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n\t            return;\n\t        }\n\t        var subscriberIndex = observers.indexOf(this.subscriber);\n\t        if (subscriberIndex !== -1) {\n\t            observers.splice(subscriberIndex, 1);\n\t        }\n\t    };\n\t    return SubjectSubscription;\n\t}(Subscription_1.Subscription));\n\texports.SubjectSubscription = SubjectSubscription;\n\t//# sourceMappingURL=SubjectSubscription.js.map\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar QueueAction_1 = __webpack_require__(109);\n\tvar QueueScheduler_1 = __webpack_require__(112);\n\texports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);\n\t//# sourceMappingURL=queue.js.map\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar AsyncAction_1 = __webpack_require__(110);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar QueueAction = (function (_super) {\n\t    __extends(QueueAction, _super);\n\t    function QueueAction(scheduler, work) {\n\t        _super.call(this, scheduler, work);\n\t        this.scheduler = scheduler;\n\t        this.work = work;\n\t    }\n\t    QueueAction.prototype.schedule = function (state, delay) {\n\t        if (delay === void 0) { delay = 0; }\n\t        if (delay > 0) {\n\t            return _super.prototype.schedule.call(this, state, delay);\n\t        }\n\t        this.delay = delay;\n\t        this.state = state;\n\t        this.scheduler.flush(this);\n\t        return this;\n\t    };\n\t    QueueAction.prototype.execute = function (state, delay) {\n\t        return (delay > 0 || this.closed) ?\n\t            _super.prototype.execute.call(this, state, delay) :\n\t            this._execute(state, delay);\n\t    };\n\t    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n\t        if (delay === void 0) { delay = 0; }\n\t        // If delay is greater than 0, enqueue as an async action.\n\t        if (delay !== null && delay > 0) {\n\t            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n\t        }\n\t        // Otherwise flush the scheduler starting with this action.\n\t        return scheduler.flush(this);\n\t    };\n\t    return QueueAction;\n\t}(AsyncAction_1.AsyncAction));\n\texports.QueueAction = QueueAction;\n\t//# sourceMappingURL=QueueAction.js.map\n\n/***/ },\n/* 110 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar root_1 = __webpack_require__(56);\n\tvar Action_1 = __webpack_require__(111);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar AsyncAction = (function (_super) {\n\t    __extends(AsyncAction, _super);\n\t    function AsyncAction(scheduler, work) {\n\t        _super.call(this, scheduler, work);\n\t        this.scheduler = scheduler;\n\t        this.work = work;\n\t        this.pending = false;\n\t    }\n\t    AsyncAction.prototype.schedule = function (state, delay) {\n\t        if (delay === void 0) { delay = 0; }\n\t        if (this.closed) {\n\t            return this;\n\t        }\n\t        // Always replace the current state with the new state.\n\t        this.state = state;\n\t        // Set the pending flag indicating that this action has been scheduled, or\n\t        // has recursively rescheduled itself.\n\t        this.pending = true;\n\t        var id = this.id;\n\t        var scheduler = this.scheduler;\n\t        //\n\t        // Important implementation note:\n\t        //\n\t        // Actions only execute once by default, unless rescheduled from within the\n\t        // scheduled callback. This allows us to implement single and repeat\n\t        // actions via the same code path, without adding API surface area, as well\n\t        // as mimic traditional recursion but across asynchronous boundaries.\n\t        //\n\t        // However, JS runtimes and timers distinguish between intervals achieved by\n\t        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n\t        // serial `setTimeout` calls can be individually delayed, which delays\n\t        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n\t        // guarantee the interval callback will be invoked more precisely to the\n\t        // interval period, regardless of load.\n\t        //\n\t        // Therefore, we use `setInterval` to schedule single and repeat actions.\n\t        // If the action reschedules itself with the same delay, the interval is not\n\t        // canceled. If the action doesn't reschedule, or reschedules with a\n\t        // different delay, the interval will be canceled after scheduled callback\n\t        // execution.\n\t        //\n\t        if (id != null) {\n\t            this.id = this.recycleAsyncId(scheduler, id, delay);\n\t        }\n\t        this.delay = delay;\n\t        // If this action has already an async Id, don't request a new one.\n\t        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\t        return this;\n\t    };\n\t    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n\t        if (delay === void 0) { delay = 0; }\n\t        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n\t    };\n\t    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n\t        if (delay === void 0) { delay = 0; }\n\t        // If this action is rescheduled with the same delay time, don't clear the interval id.\n\t        if (delay !== null && this.delay === delay) {\n\t            return id;\n\t        }\n\t        // Otherwise, if the action's delay time is different from the current delay,\n\t        // clear the interval id\n\t        return root_1.root.clearInterval(id) && undefined || undefined;\n\t    };\n\t    /**\n\t     * Immediately executes this action and the `work` it contains.\n\t     * @return {any}\n\t     */\n\t    AsyncAction.prototype.execute = function (state, delay) {\n\t        if (this.closed) {\n\t            return new Error('executing a cancelled action');\n\t        }\n\t        this.pending = false;\n\t        var error = this._execute(state, delay);\n\t        if (error) {\n\t            return error;\n\t        }\n\t        else if (this.pending === false && this.id != null) {\n\t            // Dequeue if the action didn't reschedule itself. Don't call\n\t            // unsubscribe(), because the action could reschedule later.\n\t            // For example:\n\t            // ```\n\t            // scheduler.schedule(function doWork(counter) {\n\t            //   /* ... I'm a busy worker bee ... */\n\t            //   var originalAction = this;\n\t            //   /* wait 100ms before rescheduling the action */\n\t            //   setTimeout(function () {\n\t            //     originalAction.schedule(counter + 1);\n\t            //   }, 100);\n\t            // }, 1000);\n\t            // ```\n\t            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n\t        }\n\t    };\n\t    AsyncAction.prototype._execute = function (state, delay) {\n\t        var errored = false;\n\t        var errorValue = undefined;\n\t        try {\n\t            this.work(state);\n\t        }\n\t        catch (e) {\n\t            errored = true;\n\t            errorValue = !!e && e || new Error(e);\n\t        }\n\t        if (errored) {\n\t            this.unsubscribe();\n\t            return errorValue;\n\t        }\n\t    };\n\t    AsyncAction.prototype._unsubscribe = function () {\n\t        var id = this.id;\n\t        var scheduler = this.scheduler;\n\t        var actions = scheduler.actions;\n\t        var index = actions.indexOf(this);\n\t        this.work = null;\n\t        this.delay = null;\n\t        this.state = null;\n\t        this.pending = false;\n\t        this.scheduler = null;\n\t        if (index !== -1) {\n\t            actions.splice(index, 1);\n\t        }\n\t        if (id != null) {\n\t            this.id = this.recycleAsyncId(scheduler, id, null);\n\t        }\n\t    };\n\t    return AsyncAction;\n\t}(Action_1.Action));\n\texports.AsyncAction = AsyncAction;\n\t//# sourceMappingURL=AsyncAction.js.map\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscription_1 = __webpack_require__(60);\n\t/**\n\t * A unit of work to be executed in a {@link Scheduler}. An action is typically\n\t * created from within a Scheduler and an RxJS user does not need to concern\n\t * themselves about creating and manipulating an Action.\n\t *\n\t * ```ts\n\t * class Action<T> extends Subscription {\n\t *   new (scheduler: Scheduler, work: (state?: T) => void);\n\t *   schedule(state?: T, delay: number = 0): Subscription;\n\t * }\n\t * ```\n\t *\n\t * @class Action<T>\n\t */\n\tvar Action = (function (_super) {\n\t    __extends(Action, _super);\n\t    function Action(scheduler, work) {\n\t        _super.call(this);\n\t    }\n\t    /**\n\t     * Schedules this action on its parent Scheduler for execution. May be passed\n\t     * some context object, `state`. May happen at some point in the future,\n\t     * according to the `delay` parameter, if specified.\n\t     * @param {T} [state] Some contextual data that the `work` function uses when\n\t     * called by the Scheduler.\n\t     * @param {number} [delay] Time to wait before executing the work, where the\n\t     * time unit is implicit and defined by the Scheduler.\n\t     * @return {void}\n\t     */\n\t    Action.prototype.schedule = function (state, delay) {\n\t        if (delay === void 0) { delay = 0; }\n\t        return this;\n\t    };\n\t    return Action;\n\t}(Subscription_1.Subscription));\n\texports.Action = Action;\n\t//# sourceMappingURL=Action.js.map\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar AsyncScheduler_1 = __webpack_require__(113);\n\tvar QueueScheduler = (function (_super) {\n\t    __extends(QueueScheduler, _super);\n\t    function QueueScheduler() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    return QueueScheduler;\n\t}(AsyncScheduler_1.AsyncScheduler));\n\texports.QueueScheduler = QueueScheduler;\n\t//# sourceMappingURL=QueueScheduler.js.map\n\n/***/ },\n/* 113 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Scheduler_1 = __webpack_require__(114);\n\tvar AsyncScheduler = (function (_super) {\n\t    __extends(AsyncScheduler, _super);\n\t    function AsyncScheduler() {\n\t        _super.apply(this, arguments);\n\t        this.actions = [];\n\t        /**\n\t         * A flag to indicate whether the Scheduler is currently executing a batch of\n\t         * queued actions.\n\t         * @type {boolean}\n\t         */\n\t        this.active = false;\n\t        /**\n\t         * An internal ID used to track the latest asynchronous task such as those\n\t         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n\t         * others.\n\t         * @type {any}\n\t         */\n\t        this.scheduled = undefined;\n\t    }\n\t    AsyncScheduler.prototype.flush = function (action) {\n\t        var actions = this.actions;\n\t        if (this.active) {\n\t            actions.push(action);\n\t            return;\n\t        }\n\t        var error;\n\t        this.active = true;\n\t        do {\n\t            if (error = action.execute(action.state, action.delay)) {\n\t                break;\n\t            }\n\t        } while (action = actions.shift()); // exhaust the scheduler queue\n\t        this.active = false;\n\t        if (error) {\n\t            while (action = actions.shift()) {\n\t                action.unsubscribe();\n\t            }\n\t            throw error;\n\t        }\n\t    };\n\t    return AsyncScheduler;\n\t}(Scheduler_1.Scheduler));\n\texports.AsyncScheduler = AsyncScheduler;\n\t//# sourceMappingURL=AsyncScheduler.js.map\n\n/***/ },\n/* 114 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * An execution context and a data structure to order tasks and schedule their\n\t * execution. Provides a notion of (potentially virtual) time, through the\n\t * `now()` getter method.\n\t *\n\t * Each unit of work in a Scheduler is called an {@link Action}.\n\t *\n\t * ```ts\n\t * class Scheduler {\n\t *   now(): number;\n\t *   schedule(work, delay?, state?): Subscription;\n\t * }\n\t * ```\n\t *\n\t * @class Scheduler\n\t */\n\tvar Scheduler = (function () {\n\t    function Scheduler(SchedulerAction, now) {\n\t        if (now === void 0) { now = Scheduler.now; }\n\t        this.SchedulerAction = SchedulerAction;\n\t        this.now = now;\n\t    }\n\t    /**\n\t     * Schedules a function, `work`, for execution. May happen at some point in\n\t     * the future, according to the `delay` parameter, if specified. May be passed\n\t     * some context object, `state`, which will be passed to the `work` function.\n\t     *\n\t     * The given arguments will be processed an stored as an Action object in a\n\t     * queue of actions.\n\t     *\n\t     * @param {function(state: ?T): ?Subscription} work A function representing a\n\t     * task, or some unit of work to be executed by the Scheduler.\n\t     * @param {number} [delay] Time to wait before executing the work, where the\n\t     * time unit is implicit and defined by the Scheduler itself.\n\t     * @param {T} [state] Some contextual data that the `work` function uses when\n\t     * called by the Scheduler.\n\t     * @return {Subscription} A subscription in order to be able to unsubscribe\n\t     * the scheduled work.\n\t     */\n\t    Scheduler.prototype.schedule = function (work, delay, state) {\n\t        if (delay === void 0) { delay = 0; }\n\t        return new this.SchedulerAction(this, work).schedule(state, delay);\n\t    };\n\t    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n\t    return Scheduler;\n\t}());\n\texports.Scheduler = Scheduler;\n\t//# sourceMappingURL=Scheduler.js.map\n\n/***/ },\n/* 115 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscriber_1 = __webpack_require__(58);\n\tvar Notification_1 = __webpack_require__(116);\n\t/**\n\t * @see {@link Notification}\n\t *\n\t * @param scheduler\n\t * @param delay\n\t * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n\t * @method observeOn\n\t * @owner Observable\n\t */\n\tfunction observeOn(scheduler, delay) {\n\t    if (delay === void 0) { delay = 0; }\n\t    return this.lift(new ObserveOnOperator(scheduler, delay));\n\t}\n\texports.observeOn = observeOn;\n\tvar ObserveOnOperator = (function () {\n\t    function ObserveOnOperator(scheduler, delay) {\n\t        if (delay === void 0) { delay = 0; }\n\t        this.scheduler = scheduler;\n\t        this.delay = delay;\n\t    }\n\t    ObserveOnOperator.prototype.call = function (subscriber, source) {\n\t        return source._subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n\t    };\n\t    return ObserveOnOperator;\n\t}());\n\texports.ObserveOnOperator = ObserveOnOperator;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar ObserveOnSubscriber = (function (_super) {\n\t    __extends(ObserveOnSubscriber, _super);\n\t    function ObserveOnSubscriber(destination, scheduler, delay) {\n\t        if (delay === void 0) { delay = 0; }\n\t        _super.call(this, destination);\n\t        this.scheduler = scheduler;\n\t        this.delay = delay;\n\t    }\n\t    ObserveOnSubscriber.dispatch = function (arg) {\n\t        var notification = arg.notification, destination = arg.destination;\n\t        notification.observe(destination);\n\t    };\n\t    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n\t        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n\t    };\n\t    ObserveOnSubscriber.prototype._next = function (value) {\n\t        this.scheduleMessage(Notification_1.Notification.createNext(value));\n\t    };\n\t    ObserveOnSubscriber.prototype._error = function (err) {\n\t        this.scheduleMessage(Notification_1.Notification.createError(err));\n\t    };\n\t    ObserveOnSubscriber.prototype._complete = function () {\n\t        this.scheduleMessage(Notification_1.Notification.createComplete());\n\t    };\n\t    return ObserveOnSubscriber;\n\t}(Subscriber_1.Subscriber));\n\texports.ObserveOnSubscriber = ObserveOnSubscriber;\n\tvar ObserveOnMessage = (function () {\n\t    function ObserveOnMessage(notification, destination) {\n\t        this.notification = notification;\n\t        this.destination = destination;\n\t    }\n\t    return ObserveOnMessage;\n\t}());\n\texports.ObserveOnMessage = ObserveOnMessage;\n\t//# sourceMappingURL=observeOn.js.map\n\n/***/ },\n/* 116 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(55);\n\t/**\n\t * Represents a push-based event or value that an {@link Observable} can emit.\n\t * This class is particularly useful for operators that manage notifications,\n\t * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n\t * others. Besides wrapping the actual delivered value, it also annotates it\n\t * with metadata of, for instance, what type of push message it is (`next`,\n\t * `error`, or `complete`).\n\t *\n\t * @see {@link materialize}\n\t * @see {@link dematerialize}\n\t * @see {@link observeOn}\n\t *\n\t * @class Notification<T>\n\t */\n\tvar Notification = (function () {\n\t    function Notification(kind, value, exception) {\n\t        this.kind = kind;\n\t        this.value = value;\n\t        this.exception = exception;\n\t        this.hasValue = kind === 'N';\n\t    }\n\t    /**\n\t     * Delivers to the given `observer` the value wrapped by this Notification.\n\t     * @param {Observer} observer\n\t     * @return\n\t     */\n\t    Notification.prototype.observe = function (observer) {\n\t        switch (this.kind) {\n\t            case 'N':\n\t                return observer.next && observer.next(this.value);\n\t            case 'E':\n\t                return observer.error && observer.error(this.exception);\n\t            case 'C':\n\t                return observer.complete && observer.complete();\n\t        }\n\t    };\n\t    /**\n\t     * Given some {@link Observer} callbacks, deliver the value represented by the\n\t     * current Notification to the correctly corresponding callback.\n\t     * @param {function(value: T): void} next An Observer `next` callback.\n\t     * @param {function(err: any): void} [error] An Observer `error` callback.\n\t     * @param {function(): void} [complete] An Observer `complete` callback.\n\t     * @return {any}\n\t     */\n\t    Notification.prototype.do = function (next, error, complete) {\n\t        var kind = this.kind;\n\t        switch (kind) {\n\t            case 'N':\n\t                return next && next(this.value);\n\t            case 'E':\n\t                return error && error(this.exception);\n\t            case 'C':\n\t                return complete && complete();\n\t        }\n\t    };\n\t    /**\n\t     * Takes an Observer or its individual callback functions, and calls `observe`\n\t     * or `do` methods accordingly.\n\t     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n\t     * the `next` callback.\n\t     * @param {function(err: any): void} [error] An Observer `error` callback.\n\t     * @param {function(): void} [complete] An Observer `complete` callback.\n\t     * @return {any}\n\t     */\n\t    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n\t        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n\t            return this.observe(nextOrObserver);\n\t        }\n\t        else {\n\t            return this.do(nextOrObserver, error, complete);\n\t        }\n\t    };\n\t    /**\n\t     * Returns a simple Observable that just delivers the notification represented\n\t     * by this Notification instance.\n\t     * @return {any}\n\t     */\n\t    Notification.prototype.toObservable = function () {\n\t        var kind = this.kind;\n\t        switch (kind) {\n\t            case 'N':\n\t                return Observable_1.Observable.of(this.value);\n\t            case 'E':\n\t                return Observable_1.Observable.throw(this.exception);\n\t            case 'C':\n\t                return Observable_1.Observable.empty();\n\t        }\n\t        throw new Error('unexpected notification kind value');\n\t    };\n\t    /**\n\t     * A shortcut to create a Notification instance of the type `next` from a\n\t     * given value.\n\t     * @param {T} value The `next` value.\n\t     * @return {Notification<T>} The \"next\" Notification representing the\n\t     * argument.\n\t     */\n\t    Notification.createNext = function (value) {\n\t        if (typeof value !== 'undefined') {\n\t            return new Notification('N', value);\n\t        }\n\t        return this.undefinedValueNotification;\n\t    };\n\t    /**\n\t     * A shortcut to create a Notification instance of the type `error` from a\n\t     * given error.\n\t     * @param {any} [err] The `error` exception.\n\t     * @return {Notification<T>} The \"error\" Notification representing the\n\t     * argument.\n\t     */\n\t    Notification.createError = function (err) {\n\t        return new Notification('E', undefined, err);\n\t    };\n\t    /**\n\t     * A shortcut to create a Notification instance of the type `complete`.\n\t     * @return {Notification<any>} The valueless \"complete\" Notification.\n\t     */\n\t    Notification.createComplete = function () {\n\t        return this.completeNotification;\n\t    };\n\t    Notification.completeNotification = new Notification('C');\n\t    Notification.undefinedValueNotification = new Notification('N', undefined);\n\t    return Notification;\n\t}());\n\texports.Notification = Notification;\n\t//# sourceMappingURL=Notification.js.map\n\n/***/ },\n/* 117 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar ReplaySubject_1 = __webpack_require__(104);\r\n\t/** Augments UIRouterGlobals with observables for transition starts, successful transitions, and state parameters */\r\n\tvar UIRouterRx = (function () {\r\n\t    function UIRouterRx(router) {\r\n\t        this.deregisterFns = [];\r\n\t        var start$ = new ReplaySubject_1.ReplaySubject(1);\r\n\t        var success$ = start$.mergeMap(function (t) { return t.promise.then(function () { return t; }); });\r\n\t        var params$ = success$.map(function (transition) { return transition.params(); });\r\n\t        var states$ = new ReplaySubject_1.ReplaySubject(1);\r\n\t        function onStatesChangedEvent(event, states) {\r\n\t            var changeEvent = {\r\n\t                currentStates: router.stateRegistry.get(),\r\n\t                registered: [],\r\n\t                deregistered: []\r\n\t            };\r\n\t            if (event)\r\n\t                changeEvent[event] = states;\r\n\t            states$.next(changeEvent);\r\n\t        }\r\n\t        this.deregisterFns.push(router.transitionService.onStart({}, function (transition) { return start$.next(transition); }));\r\n\t        this.deregisterFns.push(router.stateRegistry.onStatesChanged(onStatesChangedEvent));\r\n\t        onStatesChangedEvent(null, null);\r\n\t        Object.assign(router.globals, { start$: start$, success$: success$, params$: params$, states$: states$ });\r\n\t    }\r\n\t    UIRouterRx.prototype.dispose = function () {\r\n\t        this.deregisterFns.forEach(function (deregisterFn) { return deregisterFn(); });\r\n\t        this.deregisterFns = [];\r\n\t    };\r\n\t    return UIRouterRx;\r\n\t}());\r\n\texports.UIRouterRx = UIRouterRx;\r\n\n\n/***/ },\n/* 118 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n\t    return function (target, key) { decorator(target, key, paramIndex); }\r\n\t};\r\n\t/** @ng2api @module directives */ /** */\r\n\tvar core_1 = __webpack_require__(95);\r\n\tvar uiSrefStatus_1 = __webpack_require__(119);\r\n\t/**\r\n\t * A directive that adds a CSS class when its associated `uiSref` link is active.\r\n\t *\r\n\t * ### Purpose\r\n\t *\r\n\t * This directive should be paired with one (or more) [[UISref]] directives.\r\n\t * It will apply a CSS class to its element when the state the `uiSref` targets is activated.\r\n\t *\r\n\t * This can be used to create navigation UI where the active link is highlighted.\r\n\t *\r\n\t * ### Selectors\r\n\t *\r\n\t * - `[uiSrefActive]`: When this selector is used, the class is added when the target state or any\r\n\t * child of the target state is active\r\n\t * - `[uiSrefActiveEq]`: When this selector is used, the class is added when the target state is\r\n\t * exactly active (the class is not added if a child of the target state is active).\r\n\t *\r\n\t * ### Inputs\r\n\t *\r\n\t * - `uiSrefActive`/`uiSrefActiveEq`: one or more CSS classes to add to the element, when the `uiSref` is active\r\n\t *\r\n\t * #### Example:\r\n\t * The anchor tag has the `active` class added when the `foo` state is active.\r\n\t * ```html\r\n\t * <a uiSref=\"foo\" uiSrefActive=\"active\">Foo</a>\r\n\t * ```\r\n\t *\r\n\t * ### Matching parameters\r\n\t *\r\n\t * If the `uiSref` includes parameters, the current state must be active, *and* the parameter values must match.\r\n\t *\r\n\t * #### Example:\r\n\t * The first anchor tag has the `active` class added when the `foo.bar` state is active and the `id` parameter\r\n\t * equals 25.\r\n\t * The second anchor tag has the `active` class added when the `foo.bar` state is active and the `id` parameter\r\n\t * equals 32.\r\n\t * ```html\r\n\t * <a uiSref=\"foo.bar\" [uiParams]=\"{ id: 25 }\" uiSrefActive=\"active\">Bar #25</a>\r\n\t * <a uiSref=\"foo.bar\" [uiParams]=\"{ id: 32 }\" uiSrefActive=\"active\">Bar #32</a>\r\n\t * ```\r\n\t *\r\n\t * #### Example:\r\n\t * A list of anchor tags are created for a list of `bar` objects.\r\n\t * An anchor tag will have the `active` class when `foo.bar` state is active and the `id` parameter matches\r\n\t * that object's `id`.\r\n\t * ```html\r\n\t * <li *ngFor=\"let bar of bars\">\r\n\t *   <a uiSref=\"foo.bar\" [uiParams]=\"{ id: bar.id }\" uiSrefActive=\"active\">Bar #{{ bar.id }}</a>\r\n\t * </li>\r\n\t * ```\r\n\t *\r\n\t * ### Multiple uiSrefs\r\n\t *\r\n\t * A single `uiSrefActive` can be used for multiple `uiSref` links.\r\n\t * This can be used to create (for example) a drop down navigation menu, where the menui is highlighted\r\n\t * if *any* of its inner links are active.\r\n\t *\r\n\t * The `uiSrefActive` should be placed on an ancestor element of the `uiSref` list.\r\n\t * If anyof the `uiSref` links are activated, the class will be added to the ancestor element.\r\n\t *\r\n\t * #### Example:\r\n\t * This is a dropdown nagivation menu for \"Admin\" states.\r\n\t * When any of `admin.users`, `admin.groups`, `admin.settings` are active, the `<li>` for the dropdown\r\n\t * has the `dropdown-child-active` class applied.\r\n\t * Additionally, the active anchor tag has the `active` class applied.\r\n\t * ```html\r\n\t * <ul class=\"dropdown-menu\">\r\n\t *   <li uiSrefActive=\"dropdown-child-active\" class=\"dropdown admin\">\r\n\t *     Admin\r\n\t *     <ul>\r\n\t *       <li><a uiSref=\"admin.users\" uiSrefActive=\"active\">Users</a></li>\r\n\t *       <li><a uiSref=\"admin.groups\" uiSrefActive=\"active\">Groups</a></li>\r\n\t *       <li><a uiSref=\"admin.settings\" uiSrefActive=\"active\">Settings</a></li>\r\n\t *     </ul>\r\n\t *   </li>\r\n\t * </ul>\r\n\t * ```\r\n\t */\r\n\tvar UISrefActive = (function () {\r\n\t    function UISrefActive(uiSrefStatus, rnd, host) {\r\n\t        var _this = this;\r\n\t        this._classes = [];\r\n\t        this._classesEq = [];\r\n\t        this._subscription = uiSrefStatus.uiSrefStatus.subscribe(function (next) {\r\n\t            _this._classes.forEach(function (cls) { return rnd.setElementClass(host.nativeElement, cls, next.active); });\r\n\t            _this._classesEq.forEach(function (cls) { return rnd.setElementClass(host.nativeElement, cls, next.exact); });\r\n\t        });\r\n\t    }\r\n\t    Object.defineProperty(UISrefActive.prototype, \"active\", {\r\n\t        set: function (val) { this._classes = val.split(\"\\s+\"); },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ;\r\n\t    Object.defineProperty(UISrefActive.prototype, \"activeEq\", {\r\n\t        set: function (val) { this._classesEq = val.split(\"\\s+\"); },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ;\r\n\t    UISrefActive.prototype.ngOnDestroy = function () {\r\n\t        this._subscription.unsubscribe();\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input('uiSrefActive'), \r\n\t        __metadata('design:type', String), \r\n\t        __metadata('design:paramtypes', [String])\r\n\t    ], UISrefActive.prototype, \"active\", null);\r\n\t    __decorate([\r\n\t        core_1.Input('uiSrefActiveEq'), \r\n\t        __metadata('design:type', String), \r\n\t        __metadata('design:paramtypes', [String])\r\n\t    ], UISrefActive.prototype, \"activeEq\", null);\r\n\t    UISrefActive = __decorate([\r\n\t        core_1.Directive({\r\n\t            selector: '[uiSrefActive],[uiSrefActiveEq]'\r\n\t        }),\r\n\t        __param(2, core_1.Host()), \r\n\t        __metadata('design:paramtypes', [uiSrefStatus_1.UISrefStatus, core_1.Renderer, core_1.ElementRef])\r\n\t    ], UISrefActive);\r\n\t    return UISrefActive;\r\n\t}());\r\n\texports.UISrefActive = UISrefActive;\r\n\n\n/***/ },\n/* 119 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n\t    return function (target, key) { decorator(target, key, paramIndex); }\r\n\t};\r\n\t/** @ng2api @module directives */ /** */\r\n\tvar core_1 = __webpack_require__(95);\r\n\tvar uiSref_1 = __webpack_require__(99);\r\n\tvar ui_router_core_1 = __webpack_require__(1);\r\n\tvar ui_router_core_2 = __webpack_require__(1);\r\n\tvar ui_router_core_3 = __webpack_require__(1);\r\n\tvar ui_router_core_4 = __webpack_require__(1);\r\n\tvar Observable_1 = __webpack_require__(55);\r\n\tvar BehaviorSubject_1 = __webpack_require__(120);\r\n\t/** @internalapi */\r\n\tvar inactiveStatus = {\r\n\t    active: false,\r\n\t    exact: false,\r\n\t    entering: false,\r\n\t    exiting: false\r\n\t};\r\n\t/**\r\n\t * Returns a Predicate<PathNode[]>\r\n\t *\r\n\t * The predicate returns true when the target state (and param values)\r\n\t * match the (tail of) the path, and the path's param values\r\n\t *\r\n\t * @internalapi\r\n\t */\r\n\tvar pathMatches = function (target) {\r\n\t    if (!target.exists())\r\n\t        return function () { return false; };\r\n\t    var state = target.$state();\r\n\t    var targetParamVals = target.params();\r\n\t    var targetPath = ui_router_core_4.PathFactory.buildPath(target);\r\n\t    var paramSchema = targetPath.map(function (node) { return node.paramSchema; })\r\n\t        .reduce(ui_router_core_1.unnestR, [])\r\n\t        .filter(function (param) { return targetParamVals.hasOwnProperty(param.id); });\r\n\t    return function (path) {\r\n\t        var tailNode = ui_router_core_1.tail(path);\r\n\t        if (!tailNode || tailNode.state !== state)\r\n\t            return false;\r\n\t        var paramValues = ui_router_core_4.PathFactory.paramValues(path);\r\n\t        return ui_router_core_3.Param.equals(paramSchema, paramValues, targetParamVals);\r\n\t    };\r\n\t};\r\n\t/**\r\n\t * Given basePath: [a, b], appendPath: [c, d]),\r\n\t * Expands the path to [c], [c, d]\r\n\t * Then appends each to [a,b,] and returns: [a, b, c], [a, b, c, d]\r\n\t *\r\n\t * @internalapi\r\n\t */\r\n\tfunction spreadToSubPaths(basePath, appendPath) {\r\n\t    return appendPath.map(function (node) { return basePath.concat(ui_router_core_4.PathFactory.subPath(appendPath, function (n) { return n.state === node.state; })); });\r\n\t}\r\n\t/**\r\n\t * Given a TransEvt (Transition event: started, success, error)\r\n\t * and a UISref Target State, return a SrefStatus object\r\n\t * which represents the current status of that Sref:\r\n\t * active, activeEq (exact match), entering, exiting\r\n\t *\r\n\t * @internalapi\r\n\t */\r\n\tfunction getSrefStatus(event, srefTarget) {\r\n\t    var pathMatchesTarget = pathMatches(srefTarget);\r\n\t    var tc = event.trans.treeChanges();\r\n\t    var isStartEvent = event.evt === 'start';\r\n\t    var isSuccessEvent = event.evt === 'success';\r\n\t    var activePath = isSuccessEvent ? tc.to : tc.from;\r\n\t    var isActive = function () {\r\n\t        return spreadToSubPaths([], activePath)\r\n\t            .map(pathMatchesTarget)\r\n\t            .reduce(ui_router_core_1.anyTrueR, false);\r\n\t    };\r\n\t    var isExact = function () {\r\n\t        return pathMatchesTarget(activePath);\r\n\t    };\r\n\t    var isEntering = function () {\r\n\t        return spreadToSubPaths(tc.retained, tc.entering)\r\n\t            .map(pathMatchesTarget)\r\n\t            .reduce(ui_router_core_1.anyTrueR, false);\r\n\t    };\r\n\t    var isExiting = function () {\r\n\t        return spreadToSubPaths(tc.retained, tc.exiting)\r\n\t            .map(pathMatchesTarget)\r\n\t            .reduce(ui_router_core_1.anyTrueR, false);\r\n\t    };\r\n\t    return {\r\n\t        active: isActive(),\r\n\t        exact: isExact(),\r\n\t        entering: isStartEvent ? isEntering() : false,\r\n\t        exiting: isStartEvent ? isExiting() : false,\r\n\t    };\r\n\t}\r\n\t/** @internalapi */\r\n\tfunction mergeSrefStatus(left, right) {\r\n\t    return {\r\n\t        active: left.active || right.active,\r\n\t        exact: left.exact || right.exact,\r\n\t        entering: left.entering || right.entering,\r\n\t        exiting: left.exiting || right.exiting,\r\n\t    };\r\n\t}\r\n\t/**\r\n\t * A directive which emits events when a paired [[UISref]] status changes.\r\n\t *\r\n\t * This directive is primarily used by the [[UISrefActive]] directives to monitor `UISref`(s).\r\n\t *\r\n\t * This directive shares two attribute selectors with `UISrefActive`:\r\n\t *\r\n\t * - `[uiSrefActive]`\r\n\t * - `[uiSrefActiveEq]`.\r\n\t *\r\n\t * Thus, whenever a `UISrefActive` directive is created, a `UISrefStatus` directive is also created.\r\n\t *\r\n\t * Most apps should simply use `UISrefActive`, but some advanced components may want to process the\r\n\t * [[SrefStatus]] events directly.\r\n\t *\r\n\t * ```js\r\n\t * <li (uiSrefStatus)=\"onSrefStatusChanged($event)\">\r\n\t *   <a uiSref=\"book\" [uiParams]=\"{ bookId: book.id }\">Book {{ book.name }}</a>\r\n\t * </li>\r\n\t * ```\r\n\t *\r\n\t * The `uiSrefStatus` event is emitted whenever an enclosed `uiSref`'s status changes.\r\n\t * The event emitted is of type [[SrefStatus]], and has boolean values for `active`, `exact`, `entering`, and `exiting`.\r\n\t *\r\n\t * The values from this event can be captured and stored on a component (then applied, e.g., using ngClass).\r\n\t *\r\n\t * ---\r\n\t *\r\n\t * A single `uiSrefStatus` can enclose multiple `uiSref`.\r\n\t * Each status boolean (`active`, `exact`, `entering`, `exiting`) will be true if *any of the enclosed `uiSref` status is true*.\r\n\t * In other words, all enclosed `uiSref` statuses  are merged to a single status using `||` (logical or).\r\n\t *\r\n\t * ```js\r\n\t * <li (uiSrefStatus)=\"onSrefStatus($event)\" uiSref=\"admin\">\r\n\t *   Home\r\n\t *   <ul>\r\n\t *     <li> <a uiSref=\"admin.users\">Users</a> </li>\r\n\t *     <li> <a uiSref=\"admin.groups\">Groups</a> </li>\r\n\t *   </ul>\r\n\t * </li>\r\n\t * ```\r\n\t *\r\n\t * In the above example, `$event.active === true` when either `admin.users` or `admin.groups` is active.\r\n\t *\r\n\t * ---\r\n\t *\r\n\t * This API is subject to change.\r\n\t */\r\n\tvar UISrefStatus = (function () {\r\n\t    function UISrefStatus(_globals) {\r\n\t        this._globals = _globals;\r\n\t        /** current statuses of the state/params the uiSref directive is linking to */\r\n\t        this.uiSrefStatus = new core_1.EventEmitter(false);\r\n\t        this.status = Object.assign({}, inactiveStatus);\r\n\t    }\r\n\t    UISrefStatus.prototype.ngAfterContentInit = function () {\r\n\t        var _this = this;\r\n\t        // Map each transition start event to a stream of:\r\n\t        // start -> (success|error)\r\n\t        var transEvents$ = this._globals.start$.switchMap(function (trans) {\r\n\t            var event = function (evt) { return ({ evt: evt, trans: trans }); };\r\n\t            var transStart$ = Observable_1.Observable.of(event(\"start\"));\r\n\t            var transResult = trans.promise.then(function () { return event(\"success\"); }, function () { return event(\"error\"); });\r\n\t            var transFinish$ = Observable_1.Observable.fromPromise(transResult);\r\n\t            return transStart$.concat(transFinish$);\r\n\t        });\r\n\t        // Watch the @ContentChildren UISref[] components and get their target states\r\n\t        // let srefs$: Observable<UISref[]> = Observable.of(this.srefs.toArray()).concat(this.srefs.changes);\r\n\t        this._srefs$ = new BehaviorSubject_1.BehaviorSubject(this.srefs.toArray());\r\n\t        this._srefChangesSub = this.srefs.changes.subscribe(function (srefs) { return _this._srefs$.next(srefs); });\r\n\t        var targetStates$ = this._srefs$.switchMap(function (srefs) {\r\n\t            return Observable_1.Observable.combineLatest(srefs.map(function (sref) { return sref.targetState$; }));\r\n\t        });\r\n\t        // Calculate the status of each UISref based on the transition event.\r\n\t        // Reduce the statuses (if multiple) by or-ing each flag.\r\n\t        this._subscription = transEvents$.mergeMap(function (evt) {\r\n\t            return targetStates$.map(function (targets) {\r\n\t                var statuses = targets.map(function (target) { return getSrefStatus(evt, target); });\r\n\t                return statuses.reduce(mergeSrefStatus);\r\n\t            });\r\n\t        }).subscribe(this._setStatus.bind(this));\r\n\t    };\r\n\t    UISrefStatus.prototype.ngOnDestroy = function () {\r\n\t        if (this._subscription)\r\n\t            this._subscription.unsubscribe();\r\n\t        if (this._srefChangesSub)\r\n\t            this._srefChangesSub.unsubscribe();\r\n\t        if (this._srefs$)\r\n\t            this._srefs$.unsubscribe();\r\n\t        this._subscription = this._srefChangesSub = this._srefs$ = undefined;\r\n\t    };\r\n\t    UISrefStatus.prototype._setStatus = function (status) {\r\n\t        this.status = status;\r\n\t        this.uiSrefStatus.emit(status);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Output(\"uiSrefStatus\"), \r\n\t        __metadata('design:type', Object)\r\n\t    ], UISrefStatus.prototype, \"uiSrefStatus\", void 0);\r\n\t    __decorate([\r\n\t        core_1.ContentChildren(uiSref_1.UISref, { descendants: true }), \r\n\t        __metadata('design:type', core_1.QueryList)\r\n\t    ], UISrefStatus.prototype, \"srefs\", void 0);\r\n\t    UISrefStatus = __decorate([\r\n\t        core_1.Directive({ selector: '[uiSrefStatus],[uiSrefActive],[uiSrefActiveEq]' }),\r\n\t        __param(0, core_1.Inject(ui_router_core_2.Globals)), \r\n\t        __metadata('design:paramtypes', [Object])\r\n\t    ], UISrefStatus);\r\n\t    return UISrefStatus;\r\n\t}());\r\n\texports.UISrefStatus = UISrefStatus;\r\n\n\n/***/ },\n/* 120 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subject_1 = __webpack_require__(105);\n\tvar ObjectUnsubscribedError_1 = __webpack_require__(106);\n\t/**\n\t * @class BehaviorSubject<T>\n\t */\n\tvar BehaviorSubject = (function (_super) {\n\t    __extends(BehaviorSubject, _super);\n\t    function BehaviorSubject(_value) {\n\t        _super.call(this);\n\t        this._value = _value;\n\t    }\n\t    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n\t        get: function () {\n\t            return this.getValue();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    BehaviorSubject.prototype._subscribe = function (subscriber) {\n\t        var subscription = _super.prototype._subscribe.call(this, subscriber);\n\t        if (subscription && !subscription.closed) {\n\t            subscriber.next(this._value);\n\t        }\n\t        return subscription;\n\t    };\n\t    BehaviorSubject.prototype.getValue = function () {\n\t        if (this.hasError) {\n\t            throw this.thrownError;\n\t        }\n\t        else if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        else {\n\t            return this._value;\n\t        }\n\t    };\n\t    BehaviorSubject.prototype.next = function (value) {\n\t        _super.prototype.next.call(this, this._value = value);\n\t    };\n\t    return BehaviorSubject;\n\t}(Subject_1.Subject));\n\texports.BehaviorSubject = BehaviorSubject;\n\t//# sourceMappingURL=BehaviorSubject.js.map\n\n/***/ },\n/* 121 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * # UI-Router for Angular 2\r\n\t *\r\n\t * - [ui-router-ng2 home page](https://ui-router.github.io/ng2)\r\n\t * - [tutorials](https://ui-router.github.io/tutorial/ng2/helloworld)\r\n\t * - [quick start repository](http://github.com/ui-router/quickstart-ng2)\r\n\t *\r\n\t * Getting started:\r\n\t *\r\n\t * - Use npm. Add a dependency on latest `ui-router-ng2`\r\n\t * - Import UI-Router classes directly from `\"ui-router-ng2\"`\r\n\t *\r\n\t * ```js\r\n\t * import {StateRegistry} from \"ui-router-ng2\";\r\n\t * ```\r\n\t *\r\n\t * - Create application states (as defined by [[Ng2StateDeclaration]]).\r\n\t *\r\n\t * ```js\r\n\t * export let state1: Ng2StateDeclaration = {\r\n\t *   name: 'state1',\r\n\t *   component: State1Component,\r\n\t *   url: '/one'\r\n\t * }\r\n\t *\r\n\t * export let state2: Ng2StateDeclaration = {\r\n\t *   name: 'state2',\r\n\t *   component: State2Component,\r\n\t *   url: '/two'\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * - Import a [[UIRouterModule.forChild]] module into your feature `NgModule`s.\r\n\t *\r\n\t * ```js\r\n\t * @ NgModule({\r\n\t *   imports: [\r\n\t *     SharedModule,\r\n\t *     UIRouterModule.forChild({ states: [state1, state2 ] })\r\n\t *   ],\r\n\t *   declarations: [\r\n\t *     State1Component,\r\n\t *     State2Component,\r\n\t *   ]\r\n\t * })\r\n\t * export class MyFeatureModule {}\r\n\t * ```\r\n\t *\r\n\t * - Import a [[UIRouterModule.forRoot]] module into your application root `NgModule`\r\n\t * - Either bootstrap a [[UIView]] component, or add a `<ui-view></ui-view>` viewport to your root component.\r\n\t *\r\n\t * ```js\r\n\t * @ NgModule({\r\n\t *   imports: [\r\n\t *     BrowserModule,\r\n\t *     UIRouterModule.forRoot({ states: [ homeState ] }),\r\n\t *     MyFeatureModule,\r\n\t *   ],\r\n\t *   declarations: [\r\n\t *     HomeComponent\r\n\t *   ]\r\n\t *   bootstrap: [ UIView ]\r\n\t * })\r\n\t * class RootAppModule {}\r\n\t *\r\n\t * browserPlatformDynamic.bootstrapModule(RootAppModule);\r\n\t * ```\r\n\t *\r\n\t * - Optionally specify a configuration class [[ChildModule.configClass]] for any module\r\n\t * to perform any router configuration during bootstrap or lazyload.\r\n\t * Pass the class to [[UIRouterModule.forRoot]] or [[UIRouterModule.forChild]].\r\n\t *\r\n\t * ```js\r\n\t * import {UIRouter} from \"ui-router-ng2\";\r\n\t *\r\n\t * @ Injectable()\r\n\t * export class MyUIRouterConfig {\r\n\t *   // Constructor is injectable\r\n\t *   constructor(uiRouter: UIRouter) {\r\n\t *     uiRouter.urlMatcherFactory.type('datetime', myDateTimeParamType);\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @preferred @module ng2\r\n\t */ /** */\r\n\tvar core_1 = __webpack_require__(95);\r\n\tvar ui_router_core_1 = __webpack_require__(1);\r\n\tvar ui_router_core_2 = __webpack_require__(1);\r\n\tvar ui_router_core_3 = __webpack_require__(1);\r\n\tvar ui_router_core_4 = __webpack_require__(1);\r\n\tvar ui_router_core_5 = __webpack_require__(1);\r\n\tvar ui_router_core_6 = __webpack_require__(1);\r\n\tvar ui_router_core_7 = __webpack_require__(1);\r\n\tvar uiView_1 = __webpack_require__(100);\r\n\tvar views_1 = __webpack_require__(102);\r\n\tvar uiRouterConfig_1 = __webpack_require__(122);\r\n\tvar ui_router_core_8 = __webpack_require__(1);\r\n\tvar location_1 = __webpack_require__(123);\r\n\tvar ui_router_core_9 = __webpack_require__(1);\r\n\tvar ui_router_core_10 = __webpack_require__(1);\r\n\tvar uiRouterNgModule_1 = __webpack_require__(96);\r\n\tvar rx_1 = __webpack_require__(117);\r\n\tvar ui_router_core_11 = __webpack_require__(1);\r\n\t/**\r\n\t * This is a factory function for a UIRouter instance\r\n\t *\r\n\t * Creates a UIRouter instance and configures it for Angular 2, then invokes router bootstrap.\r\n\t * This function is used as an Angular 2 `useFactory` Provider.\r\n\t */\r\n\tfunction uiRouterFactory(location, injector) {\r\n\t    var rootModules = injector.get(uiRouterNgModule_1.UIROUTER_ROOT_MODULE);\r\n\t    var modules = injector.get(uiRouterNgModule_1.UIROUTER_MODULE_TOKEN);\r\n\t    if (rootModules.length !== 1) {\r\n\t        throw new Error(\"Exactly one UIRouterModule.forRoot() should be in the bootstrapped app module's imports: []\");\r\n\t    }\r\n\t    // ----------------- Monkey Patches ----------------\r\n\t    // Monkey patch the services.$injector to the ng2 Injector\r\n\t    ui_router_core_9.services.$injector.get = injector.get.bind(injector);\r\n\t    // Monkey patch the services.$location with ng2 Location implementation\r\n\t    location.init();\r\n\t    // ----------------- Create router -----------------\r\n\t    // Create a new ng2 UIRouter and configure it for ng2\r\n\t    var router = new ui_router_core_1.UIRouter();\r\n\t    new rx_1.UIRouterRx(router);\r\n\t    var registry = router.stateRegistry;\r\n\t    // ----------------- Configure for ng2 -------------\r\n\t    // Apply ng2 ui-view handling code\r\n\t    router.viewService.viewConfigFactory(\"ng2\", function (path, config) { return new views_1.Ng2ViewConfig(path, config); });\r\n\t    registry.decorator('views', views_1.ng2ViewsBuilder);\r\n\t    // Apply statebuilder decorator for ng2 NgModule registration\r\n\t    registry.stateQueue.flush(router.stateService);\r\n\t    // Prep the tree of NgModule by placing the root NgModule's Injector on the root state.\r\n\t    var ng2InjectorResolvable = ui_router_core_10.Resolvable.fromData(ui_router_core_11.NATIVE_INJECTOR_TOKEN, injector);\r\n\t    registry.root().resolvables.push(ng2InjectorResolvable);\r\n\t    // ----------------- Initialize router -------------\r\n\t    // Allow states to be registered\r\n\t    registry.stateQueue.autoFlush(router.stateService);\r\n\t    setTimeout(function () {\r\n\t        rootModules.forEach(function (moduleConfig) { return uiRouterConfig_1.applyRootModuleConfig(router, injector, moduleConfig); });\r\n\t        modules.forEach(function (moduleConfig) { return uiRouterConfig_1.applyModuleConfig(router, injector, moduleConfig); });\r\n\t        // Start monitoring the URL\r\n\t        if (!router.urlRouterProvider.interceptDeferred) {\r\n\t            router.urlRouter.listen();\r\n\t            router.urlRouter.sync();\r\n\t        }\r\n\t    });\r\n\t    return router;\r\n\t}\r\n\texports.uiRouterFactory = uiRouterFactory;\r\n\t;\r\n\tfunction parentUIViewInjectFactory(r) { return { fqn: null, context: r.root() }; }\r\n\texports.parentUIViewInjectFactory = parentUIViewInjectFactory;\r\n\texports._UIROUTER_INSTANCE_PROVIDERS = [\r\n\t    { provide: ui_router_core_1.UIRouter, useFactory: uiRouterFactory, deps: [location_1.UIRouterLocation, core_1.Injector] },\r\n\t    { provide: location_1.UIRouterLocation, useClass: location_1.UIRouterLocation },\r\n\t    { provide: uiView_1.UIView.PARENT_INJECT, useFactory: parentUIViewInjectFactory, deps: [ui_router_core_2.StateRegistry] },\r\n\t];\r\n\tfunction fnStateService(r) { return r.stateService; }\r\n\texports.fnStateService = fnStateService;\r\n\tfunction fnTransitionService(r) { return r.transitionService; }\r\n\texports.fnTransitionService = fnTransitionService;\r\n\tfunction fnUrlMatcherFactory(r) { return r.urlMatcherFactory; }\r\n\texports.fnUrlMatcherFactory = fnUrlMatcherFactory;\r\n\tfunction fnUrlRouter(r) { return r.urlRouter; }\r\n\texports.fnUrlRouter = fnUrlRouter;\r\n\tfunction fnViewService(r) { return r.viewService; }\r\n\texports.fnViewService = fnViewService;\r\n\tfunction fnStateRegistry(r) { return r.stateRegistry; }\r\n\texports.fnStateRegistry = fnStateRegistry;\r\n\tfunction fnGlobals(r) { return r.globals; }\r\n\texports.fnGlobals = fnGlobals;\r\n\texports._UIROUTER_SERVICE_PROVIDERS = [\r\n\t    { provide: ui_router_core_3.StateService, useFactory: fnStateService, deps: [ui_router_core_1.UIRouter] },\r\n\t    { provide: ui_router_core_4.TransitionService, useFactory: fnTransitionService, deps: [ui_router_core_1.UIRouter] },\r\n\t    { provide: ui_router_core_5.UrlMatcherFactory, useFactory: fnUrlMatcherFactory, deps: [ui_router_core_1.UIRouter] },\r\n\t    { provide: ui_router_core_6.UrlRouter, useFactory: fnUrlRouter, deps: [ui_router_core_1.UIRouter] },\r\n\t    { provide: ui_router_core_7.ViewService, useFactory: fnViewService, deps: [ui_router_core_1.UIRouter] },\r\n\t    { provide: ui_router_core_2.StateRegistry, useFactory: fnStateRegistry, deps: [ui_router_core_1.UIRouter] },\r\n\t    { provide: ui_router_core_8.Globals, useFactory: fnGlobals, deps: [ui_router_core_1.UIRouter] },\r\n\t];\r\n\t/**\r\n\t * The UI-Router providers, for use in your application bootstrap\r\n\t *\r\n\t * @deprecated use [[UIRouterModule.forRoot]]\r\n\t */\r\n\texports.UIROUTER_PROVIDERS = exports._UIROUTER_INSTANCE_PROVIDERS.concat(exports._UIROUTER_SERVICE_PROVIDERS);\r\n\n\n/***/ },\n/* 122 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar ui_router_core_1 = __webpack_require__(1);\r\n\tfunction applyModuleConfig(uiRouter, injector, options) {\r\n\t    if (options.configClass) {\r\n\t        injector.get(options.configClass);\r\n\t    }\r\n\t    var states = options.states || [];\r\n\t    states.forEach(function (state) { return uiRouter.stateRegistry.register(state); });\r\n\t}\r\n\texports.applyModuleConfig = applyModuleConfig;\r\n\tfunction applyRootModuleConfig(uiRouter, injector, config) {\r\n\t    if (ui_router_core_1.isDefined(config.deferIntercept)) {\r\n\t        uiRouter.urlRouterProvider.deferIntercept(config.deferIntercept);\r\n\t    }\r\n\t    if (ui_router_core_1.isDefined(config.otherwise)) {\r\n\t        if (ui_router_core_1.isDefined(config.otherwise['state'])) {\r\n\t            uiRouter.urlRouterProvider.otherwise(function () {\r\n\t                var _a = config.otherwise, state = _a.state, params = _a.params;\r\n\t                uiRouter.stateService.go(state, params, { source: \"otherwise\" });\r\n\t                return null;\r\n\t            });\r\n\t        }\r\n\t        else {\r\n\t            uiRouter.urlRouterProvider.otherwise(config.otherwise);\r\n\t        }\r\n\t    }\r\n\t}\r\n\texports.applyRootModuleConfig = applyRootModuleConfig;\r\n\n\n/***/ },\n/* 123 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\t/** @module ng2 */ /** */\r\n\tvar common_1 = __webpack_require__(97);\r\n\tvar core_1 = __webpack_require__(95);\r\n\tvar ui_router_core_1 = __webpack_require__(1);\r\n\tvar ui_router_core_2 = __webpack_require__(1);\r\n\tvar ui_router_core_3 = __webpack_require__(1);\r\n\tvar ui_router_core_4 = __webpack_require__(1);\r\n\tvar splitOnHash = ui_router_core_4.beforeAfterSubstr(\"#\");\r\n\tvar splitOnEquals = ui_router_core_4.beforeAfterSubstr(\"=\");\r\n\tvar splitOnQuestionMark = ui_router_core_4.beforeAfterSubstr(\"?\");\r\n\tvar UIRouterLocation = (function () {\r\n\t    function UIRouterLocation(locationStrategy, platformLocation) {\r\n\t        this.locationStrategy = locationStrategy;\r\n\t        this.platformLocation = platformLocation;\r\n\t        this.hashPrefix = \"\";\r\n\t        this.isHashBang = locationStrategy instanceof common_1.HashLocationStrategy;\r\n\t    }\r\n\t    UIRouterLocation.prototype.init = function () {\r\n\t        var _this = this;\r\n\t        var loc = ui_router_core_1.services.location;\r\n\t        var locSt = this.locationStrategy;\r\n\t        if (this.isHashBang) {\r\n\t            loc.path = function () {\r\n\t                return splitOnHash(splitOnQuestionMark(locSt.path())[0])[0];\r\n\t            };\r\n\t            loc.hash = function () {\r\n\t                return splitOnHash(splitOnHash(_this.platformLocation.hash)[1])[1];\r\n\t            };\r\n\t        }\r\n\t        else {\r\n\t            var basepath = locSt.getBaseHref();\r\n\t            var basepathRegExp_1 = new RegExp(\"^\" + basepath);\r\n\t            var replace_1 = (basepath[basepath.length - 1] === '/') ? \"/\" : \"\";\r\n\t            loc.path = function () {\r\n\t                return splitOnHash(splitOnQuestionMark(locSt.path())[0])[0].replace(basepathRegExp_1, replace_1);\r\n\t            };\r\n\t            loc.hash = function () {\r\n\t                return splitOnHash(_this.platformLocation.hash)[1];\r\n\t            };\r\n\t        }\r\n\t        loc.search = (function () {\r\n\t            var queryString = splitOnHash(splitOnQuestionMark(locSt.path())[1])[0];\r\n\t            return queryString.split(\"&\").map(function (kv) { return splitOnEquals(kv); }).reduce(ui_router_core_3.applyPairs, {});\r\n\t        });\r\n\t        loc.setUrl = function (url, replace) {\r\n\t            if (replace === void 0) { replace = false; }\r\n\t            if (ui_router_core_2.isDefined(url)) {\r\n\t                var split = splitOnQuestionMark(url);\r\n\t                if (replace) {\r\n\t                    locSt.replaceState(null, null, split[0], split[1]);\r\n\t                }\r\n\t                else {\r\n\t                    locSt.pushState(null, null, split[0], split[1]);\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t        loc.onChange = function (cb) { return locSt.onPopState(cb); };\r\n\t        var locCfg = ui_router_core_1.services.locationConfig;\r\n\t        locCfg.port = function () { return null; };\r\n\t        locCfg.protocol = function () { return null; };\r\n\t        locCfg.host = function () { return null; };\r\n\t        locCfg.baseHref = function () { return locSt.getBaseHref(); };\r\n\t        locCfg.html5Mode = function () { return !_this.isHashBang; };\r\n\t        locCfg.hashPrefix = function (newprefix) {\r\n\t            if (ui_router_core_2.isDefined(newprefix)) {\r\n\t                _this.hashPrefix = newprefix;\r\n\t            }\r\n\t            return _this.hashPrefix;\r\n\t        };\r\n\t    };\r\n\t    UIRouterLocation = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [common_1.LocationStrategy, common_1.PlatformLocation])\r\n\t    ], UIRouterLocation);\r\n\t    return UIRouterLocation;\r\n\t}());\r\n\texports.UIRouterLocation = UIRouterLocation;\r\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// ui-router-ng2.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2c80e9a8599a1ff33bc6","/** @ng2api @module ng2 */ /** for typedoc */\r\nexport * from \"ui-router-core\";\r\nimport \"ui-router-core/lib/justjs\";\r\n\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/observable/combineLatest';\r\nimport 'rxjs/add/observable/fromPromise';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport 'rxjs/add/operator/mergeMap';\r\nimport 'rxjs/add/operator/concat';\r\nimport 'rxjs/add/operator/map';\r\n\r\nexport * from \"./ng2/interface\";\r\nexport * from \"./ng2/lazyLoadNgModule\";\r\nexport * from \"./ng2/rx\";\r\nexport * from \"./ng2/providers\";\r\nexport * from \"./ng2/location\";\r\nexport * from \"./ng2/directives/directives\";\r\nexport * from \"./ng2/statebuilders/views\";\r\nexport * from \"./ng2/uiRouterNgModule\";\r\n\r\nexport * from \"./ng2/uiRouterConfig\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2.ts","/** @module common */ /** */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"./common/module\"));\n__export(require(\"./params/module\"));\n__export(require(\"./path/module\"));\n__export(require(\"./resolve/module\"));\n__export(require(\"./state/module\"));\n__export(require(\"./transition/module\"));\n__export(require(\"./url/module\"));\n__export(require(\"./view/module\"));\n__export(require(\"./globals\"));\n__export(require(\"./router\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/index.js\n// module id = 1\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/** @module common */ /** for typedoc */\n__export(require(\"./common\"));\n__export(require(\"./coreservices\"));\n__export(require(\"./glob\"));\n__export(require(\"./hof\"));\n__export(require(\"./predicates\"));\n__export(require(\"./queue\"));\n__export(require(\"./strings\"));\n__export(require(\"./trace\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/module.js\n// module id = 2\n// module chunks = 0 1","/**\n * Random utility functions used in the UI-Router code\n *\n * These functions are exported, but are subject to change without notice.\n *\n * @preferred @module common\n */ /** for typedoc */\n\"use strict\";\nvar predicates_1 = require(\"./predicates\");\nvar hof_1 = require(\"./hof\");\nvar coreservices_1 = require(\"./coreservices\");\nvar w = typeof window === 'undefined' ? {} : window;\nvar angular = w.angular || {};\nexports.fromJson = angular.fromJson || JSON.parse.bind(JSON);\nexports.toJson = angular.toJson || JSON.stringify.bind(JSON);\nexports.copy = angular.copy || _copy;\nexports.forEach = angular.forEach || _forEach;\nexports.extend = angular.extend || _extend;\nexports.equals = angular.equals || _equals;\nexports.identity = function (x) { return x; };\nexports.noop = function () { return undefined; };\n/**\n * Binds and copies functions onto an object\n *\n * Takes functions from the 'from' object, binds those functions to the _this object, and puts the bound functions\n * on the 'to' object.\n *\n * This example creates an new class instance whose functions are prebound to the new'd object.\n * @example\n * ```\n *\n * class Foo {\n *   constructor(data) {\n *     // Binds all functions from Foo.prototype to 'this',\n *     // then copies them to 'this'\n *     bindFunctions(Foo.prototype, this, this);\n *     this.data = data;\n *   }\n *\n *   log() {\n *     console.log(this.data);\n *   }\n * }\n *\n * let myFoo = new Foo([1,2,3]);\n * var logit = myFoo.log;\n * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n * ```\n *\n * This example creates a bound version of a service function, and copies it to another object\n * @example\n * ```\n *\n * var SomeService = {\n *   this.data = [3, 4, 5];\n *   this.log = function() {\n *     console.log(this.data);\n *   }\n * }\n *\n * // Constructor fn\n * function OtherThing() {\n *   // Binds all functions from SomeService to SomeService,\n *   // then copies them to 'this'\n *   bindFunctions(SomeService, this, SomeService);\n * }\n *\n * let myOtherThing = new OtherThing();\n * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n * ```\n *\n * @param from The object which contains the functions to be bound\n * @param to The object which will receive the bound functions\n * @param bindTo The object which the functions will be bound to\n * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n */\nfunction bindFunctions(from, to, bindTo, fnNames) {\n    if (fnNames === void 0) { fnNames = Object.keys(from); }\n    return fnNames.filter(function (name) { return typeof from[name] === 'function'; })\n        .forEach(function (name) { return to[name] = from[name].bind(bindTo); });\n}\nexports.bindFunctions = bindFunctions;\n/**\n * prototypal inheritance helper.\n * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n */\nexports.inherit = function (parent, extra) {\n    return exports.extend(new (exports.extend(function () { }, { prototype: parent }))(), extra);\n};\n/**\n * Given an arguments object, converts the arguments at index idx and above to an array.\n * This is similar to es6 rest parameters.\n *\n * Optionally, the argument at index idx may itself already be an array.\n *\n * For example,\n * given either:\n *        arguments = [ obj, \"foo\", \"bar\" ]\n * or:\n *        arguments = [ obj, [\"foo\", \"bar\"] ]\n * then:\n *        restArgs(arguments, 1) == [\"foo\", \"bar\"]\n *\n * This allows functions like pick() to be implemented such that it allows either a bunch\n * of string arguments (like es6 rest parameters), or a single array of strings:\n *\n * given:\n *        var obj = { foo: 1, bar: 2, baz: 3 };\n * then:\n *        pick(obj, \"foo\", \"bar\");   // returns { foo: 1, bar: 2 }\n *        pick(obj, [\"foo\", \"bar\"]); // returns { foo: 1, bar: 2 }\n */\nvar restArgs = function (args, idx) {\n    if (idx === void 0) { idx = 0; }\n    return Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(args, idx));\n};\n/** Given an array, returns true if the object is found in the array, (using indexOf) */\nexports.inArray = function (array, obj) {\n    return array.indexOf(obj) !== -1;\n};\n/** Given an array, and an item, if the item is found in the array, it removes it (in-place).  The same array is returned */\nexports.removeFrom = hof_1.curry(function (array, obj) {\n    var idx = array.indexOf(obj);\n    if (idx >= 0)\n        array.splice(idx, 1);\n    return array;\n});\n/**\n * Applies a set of defaults to an options object.  The options object is filtered\n * to only those properties of the objects in the defaultsList.\n * Earlier objects in the defaultsList take precedence when applying defaults.\n */\nfunction defaults(opts) {\n    if (opts === void 0) { opts = {}; }\n    var defaultsList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        defaultsList[_i - 1] = arguments[_i];\n    }\n    var defaults = merge.apply(null, [{}].concat(defaultsList));\n    return exports.extend({}, defaults, pick(opts || {}, Object.keys(defaults)));\n}\nexports.defaults = defaults;\n/**\n * Merges properties from the list of objects to the destination object.\n * If a property already exists in the destination object, then it is not overwritten.\n */\nfunction merge(dst) {\n    var objs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objs[_i - 1] = arguments[_i];\n    }\n    exports.forEach(objs, function (obj) {\n        exports.forEach(obj, function (value, key) {\n            if (!dst.hasOwnProperty(key))\n                dst[key] = value;\n        });\n    });\n    return dst;\n}\nexports.merge = merge;\n/** Reduce function that merges each element of the list into a single object, using extend */\nexports.mergeR = function (memo, item) { return exports.extend(memo, item); };\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nfunction ancestors(first, second) {\n    var path = [];\n    for (var n in first.path) {\n        if (first.path[n] !== second.path[n])\n            break;\n        path.push(first.path[n]);\n    }\n    return path;\n}\nexports.ancestors = ancestors;\n/**\n * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n *\n * @param {Object} a The first object.\n * @param {Object} b The second object.\n * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n *                     it defaults to the list of keys in `a`.\n * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n */\nfunction equalForKeys(a, b, keys) {\n    if (keys === void 0) { keys = Object.keys(a); }\n    for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        if (a[k] != b[k])\n            return false; // Not '===', values aren't necessarily normalized\n    }\n    return true;\n}\nexports.equalForKeys = equalForKeys;\nfunction pickOmitImpl(predicate, obj) {\n    var keys = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        keys[_i - 2] = arguments[_i];\n    }\n    var objCopy = {};\n    for (var key in obj) {\n        if (predicate(keys, key))\n            objCopy[key] = obj[key];\n    }\n    return objCopy;\n}\n/** Return a copy of the object only containing the whitelisted properties. */\nfunction pick(obj) {\n    return pickOmitImpl.apply(null, [exports.inArray].concat(restArgs(arguments)));\n}\nexports.pick = pick;\n/** Return a copy of the object omitting the blacklisted properties. */\nfunction omit(obj) {\n    var notInArray = function (array, item) { return !exports.inArray(array, item); };\n    return pickOmitImpl.apply(null, [notInArray].concat(restArgs(arguments)));\n}\nexports.omit = omit;\n/**\n * Maps an array, or object to a property (by name)\n */\nfunction pluck(collection, propName) {\n    return map(collection, hof_1.prop(propName));\n}\nexports.pluck = pluck;\n/** Filters an Array or an Object's properties based on a predicate */\nfunction filter(collection, callback) {\n    var arr = predicates_1.isArray(collection), result = arr ? [] : {};\n    var accept = arr ? function (x) { return result.push(x); } : function (x, key) { return result[key] = x; };\n    exports.forEach(collection, function (item, i) {\n        if (callback(item, i))\n            accept(item, i);\n    });\n    return result;\n}\nexports.filter = filter;\n/** Finds an object from an array, or a property of an object, that matches a predicate */\nfunction find(collection, callback) {\n    var result;\n    exports.forEach(collection, function (item, i) {\n        if (result)\n            return;\n        if (callback(item, i))\n            result = item;\n    });\n    return result;\n}\nexports.find = find;\n/** Given an object, returns a new object, where each property is transformed by the callback function */\nexports.mapObj = map;\n/** Maps an array or object properties using a callback function */\nfunction map(collection, callback) {\n    var result = predicates_1.isArray(collection) ? [] : {};\n    exports.forEach(collection, function (item, i) { return result[i] = callback(item, i); });\n    return result;\n}\nexports.map = map;\n/**\n * Given an object, return its enumerable property values\n *\n * @example\n * ```\n *\n * let foo = { a: 1, b: 2, c: 3 }\n * let vals = values(foo); // [ 1, 2, 3 ]\n * ```\n */\nexports.values = function (obj) {\n    return Object.keys(obj).map(function (key) { return obj[key]; });\n};\n/**\n * Reduce function that returns true if all of the values are truthy.\n *\n * @example\n * ```\n *\n * let vals = [ 1, true, {}, \"hello world\"];\n * vals.reduce(allTrueR, true); // true\n *\n * vals.push(0);\n * vals.reduce(allTrueR, true); // false\n * ```\n */\nexports.allTrueR = function (memo, elem) { return memo && elem; };\n/**\n * Reduce function that returns true if any of the values are truthy.\n *\n *  * @example\n * ```\n *\n * let vals = [ 0, null, undefined ];\n * vals.reduce(anyTrueR, true); // false\n *\n * vals.push(\"hello world\");\n * vals.reduce(anyTrueR, true); // true\n * ```\n */\nexports.anyTrueR = function (memo, elem) { return memo || elem; };\n/**\n * Reduce function which un-nests a single level of arrays\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexports.unnestR = function (memo, elem) { return memo.concat(elem); };\n/**\n * Reduce function which recursively un-nests all arrays\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexports.flattenR = function (memo, elem) {\n    return predicates_1.isArray(elem) ? memo.concat(elem.reduce(exports.flattenR, [])) : pushR(memo, elem);\n};\n/**\n * Reduce function that pushes an object to an array, then returns the array.\n * Mostly just for [[flattenR]] and [[uniqR]]\n */\nfunction pushR(arr, obj) {\n    arr.push(obj);\n    return arr;\n}\nexports.pushR = pushR;\n/** Reduce function that filters out duplicates */\nexports.uniqR = function (acc, token) {\n    return exports.inArray(acc, token) ? acc : pushR(acc, token);\n};\n/**\n * Return a new array with a single level of arrays unnested.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexports.unnest = function (arr) { return arr.reduce(exports.unnestR, []); };\n/**\n * Return a completely flattened version of an array.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexports.flatten = function (arr) { return arr.reduce(exports.flattenR, []); };\n/**\n * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n * @example\n * ```\n *\n * let isNumber = (obj) => typeof(obj) === 'number';\n * let allNumbers = [ 1, 2, 3, 4, 5 ];\n * allNumbers.filter(assertPredicate(isNumber)); //OK\n *\n * let oneString = [ 1, 2, 3, 4, \"5\" ];\n * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n * ```\n */\nfunction assertPredicate(predicate, errMsg) {\n    if (errMsg === void 0) { errMsg = \"assert failure\"; }\n    return function (obj) {\n        if (!predicate(obj)) {\n            throw new Error(predicates_1.isFunction(errMsg) ? errMsg(obj) : errMsg);\n        }\n        return true;\n    };\n}\nexports.assertPredicate = assertPredicate;\n/**\n * Like _.pairs: Given an object, returns an array of key/value pairs\n *\n * @example\n * ```\n *\n * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n * ```\n */\nexports.pairs = function (obj) {\n    return Object.keys(obj).map(function (key) { return [key, obj[key]]; });\n};\n/**\n * Given two or more parallel arrays, returns an array of tuples where\n * each tuple is composed of [ a[i], b[i], ... z[i] ]\n *\n * @example\n * ```\n *\n * let foo = [ 0, 2, 4, 6 ];\n * let bar = [ 1, 3, 5, 7 ];\n * let baz = [ 10, 30, 50, 70 ];\n * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n * ```\n */\nfunction arrayTuples() {\n    var arrayArgs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arrayArgs[_i - 0] = arguments[_i];\n    }\n    if (arrayArgs.length === 0)\n        return [];\n    var length = arrayArgs.reduce(function (min, arr) { return Math.min(arr.length, min); }, 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n    return Array.apply(null, Array(length)).map(function (ignored, idx) { return arrayArgs.map(function (arr) { return arr[idx]; }); });\n}\nexports.arrayTuples = arrayTuples;\n/**\n * Reduce function which builds an object from an array of [key, value] pairs.\n *\n * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n *\n * Each keyValueTuple should be an array with values [ key: string, value: any ]\n *\n * @example\n * ```\n *\n * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n *\n * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n *\n * // Or, more simply:\n * var pairsToObj = pairs.reduce(applyPairs, {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n * ```\n */\nfunction applyPairs(memo, keyValTuple) {\n    var key, value;\n    if (predicates_1.isArray(keyValTuple))\n        key = keyValTuple[0], value = keyValTuple[1];\n    if (!predicates_1.isString(key))\n        throw new Error(\"invalid parameters to applyPairs\");\n    memo[key] = value;\n    return memo;\n}\nexports.applyPairs = applyPairs;\n/** Get the last element of an array */\nfunction tail(arr) {\n    return arr.length && arr[arr.length - 1] || undefined;\n}\nexports.tail = tail;\n/**\n * shallow copy from src to dest\n *\n * note: This is a shallow copy, while angular.copy is a deep copy.\n * ui-router uses `copy` only to make copies of state parameters.\n */\nfunction _copy(src, dest) {\n    if (dest)\n        Object.keys(dest).forEach(function (key) { return delete dest[key]; });\n    if (!dest)\n        dest = {};\n    return exports.extend(dest, src);\n}\n/** Naive forEach implementation works with Objects or Arrays */\nfunction _forEach(obj, cb, _this) {\n    if (predicates_1.isArray(obj))\n        return obj.forEach(cb, _this);\n    Object.keys(obj).forEach(function (key) { return cb(obj[key], key); });\n}\nfunction _copyProps(to, from) {\n    Object.keys(from).forEach(function (key) { return to[key] = from[key]; });\n    return to;\n}\nfunction _extend(toObj) {\n    return restArgs(arguments, 1).filter(exports.identity).reduce(_copyProps, toObj);\n}\nfunction _equals(o1, o2) {\n    if (o1 === o2)\n        return true;\n    if (o1 === null || o2 === null)\n        return false;\n    if (o1 !== o1 && o2 !== o2)\n        return true; // NaN === NaN\n    var t1 = typeof o1, t2 = typeof o2;\n    if (t1 !== t2 || t1 !== 'object')\n        return false;\n    var tup = [o1, o2];\n    if (hof_1.all(predicates_1.isArray)(tup))\n        return _arraysEq(o1, o2);\n    if (hof_1.all(predicates_1.isDate)(tup))\n        return o1.getTime() === o2.getTime();\n    if (hof_1.all(predicates_1.isRegExp)(tup))\n        return o1.toString() === o2.toString();\n    if (hof_1.all(predicates_1.isFunction)(tup))\n        return true; // meh\n    var predicates = [predicates_1.isFunction, predicates_1.isArray, predicates_1.isDate, predicates_1.isRegExp];\n    if (predicates.map(hof_1.any).reduce(function (b, fn) { return b || !!fn(tup); }, false))\n        return false;\n    var key, keys = {};\n    for (key in o1) {\n        if (!_equals(o1[key], o2[key]))\n            return false;\n        keys[key] = true;\n    }\n    for (key in o2) {\n        if (!keys[key])\n            return false;\n    }\n    return true;\n}\nfunction _arraysEq(a1, a2) {\n    if (a1.length !== a2.length)\n        return false;\n    return arrayTuples(a1, a2).reduce(function (b, t) { return b && _equals(t[0], t[1]); }, true);\n}\n// issue #2676\nexports.silenceUncaughtInPromise = function (promise) {\n    return promise.catch(function (e) { return 0; }) && promise;\n};\nexports.silentRejection = function (error) {\n    return exports.silenceUncaughtInPromise(coreservices_1.services.$q.reject(error));\n};\n//# sourceMappingURL=common.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/common.js\n// module id = 3\n// module chunks = 0 1","\"use strict\";\n/** Predicates\n *\n * These predicates return true/false based on the input.\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_predicates\n */ /** */\nvar hof_1 = require(\"./hof\");\nvar toStr = Object.prototype.toString;\nvar tis = function (t) { return function (x) { return typeof (x) === t; }; };\nexports.isUndefined = tis('undefined');\nexports.isDefined = hof_1.not(exports.isUndefined);\nexports.isNull = function (o) { return o === null; };\nexports.isFunction = tis('function');\nexports.isNumber = tis('number');\nexports.isString = tis('string');\nexports.isObject = function (x) { return x !== null && typeof x === 'object'; };\nexports.isArray = Array.isArray;\nexports.isDate = (function (x) { return toStr.call(x) === '[object Date]'; });\nexports.isRegExp = (function (x) { return toStr.call(x) === '[object RegExp]'; });\n/**\n * Predicate which checks if a value is injectable\n *\n * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n * where all the elements in the array are Strings, except the last one, which is a Function\n */\nfunction isInjectable(val) {\n    if (exports.isArray(val) && val.length) {\n        var head = val.slice(0, -1), tail = val.slice(-1);\n        return !(head.filter(hof_1.not(exports.isString)).length || tail.filter(hof_1.not(exports.isFunction)).length);\n    }\n    return exports.isFunction(val);\n}\nexports.isInjectable = isInjectable;\n/**\n * Predicate which checks if a value looks like a Promise\n *\n * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n */\nexports.isPromise = hof_1.and(exports.isObject, hof_1.pipe(hof_1.prop('then'), exports.isFunction));\n//# sourceMappingURL=predicates.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/predicates.js\n// module id = 4\n// module chunks = 0 1","/**\n * Higher order functions\n *\n * These utility functions are exported, but are subject to change without notice.\n *\n * @module common_hof\n */ /** */\n\"use strict\";\n/**\n * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n *\n * Given a function with N parameters, returns a new function that supports partial application.\n * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n * accept more parameters until all N parameters have been supplied.\n *\n *\n * This contrived example uses a partially applied function as an predicate, which returns true\n * if an object is found in both arrays.\n * @example\n * ```\n * // returns true if an object is in both of the two arrays\n * function inBoth(array1, array2, object) {\n *   return array1.indexOf(object) !== -1 &&\n *          array2.indexOf(object) !== 1;\n * }\n * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n * let foos = [obj1, obj3]\n * let bars = [obj3, obj4, obj5]\n *\n * // A curried \"copy\" of inBoth\n * let curriedInBoth = curry(inBoth);\n * // Partially apply both the array1 and array2\n * let inFoosAndBars = curriedInBoth(foos, bars);\n *\n * // Supply the final argument; since all arguments are\n * // supplied, the original inBoth function is then called.\n * let obj1InBoth = inFoosAndBars(obj1); // false\n *\n * // Use the inFoosAndBars as a predicate.\n * // Filter, on each iteration, supplies the final argument\n * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n *\n * ```\n *\n * Stolen from: http://stackoverflow.com/questions/4394747/javascript-curry-function\n *\n * @param fn\n * @returns {*|function(): (*|any)}\n */\nfunction curry(fn) {\n    var initial_args = [].slice.apply(arguments, [1]);\n    var func_args_length = fn.length;\n    function curried(args) {\n        if (args.length >= func_args_length)\n            return fn.apply(null, args);\n        return function () {\n            return curried(args.concat([].slice.apply(arguments)));\n        };\n    }\n    return curried(initial_args);\n}\nexports.curry = curry;\n/**\n * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n * given: f(x), g(x), h(x)\n * let composed = compose(f,g,h)\n * then, composed is: f(g(h(x)))\n */\nfunction compose() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n        var i = start, result = args[start].apply(this, arguments);\n        while (i--)\n            result = args[i].call(this, result);\n        return result;\n    };\n}\nexports.compose = compose;\n/**\n * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n * given: f(x), g(x), h(x)\n * let piped = pipe(f,g,h);\n * then, piped is: h(g(f(x)))\n */\nfunction pipe() {\n    var funcs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        funcs[_i - 0] = arguments[_i];\n    }\n    return compose.apply(null, [].slice.call(arguments).reverse());\n}\nexports.pipe = pipe;\n/**\n * Given a property name, returns a function that returns that property from an object\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = prop(\"name\");\n * getName(obj) === \"blarg\"\n */\nexports.prop = function (name) {\n    return function (obj) { return obj && obj[name]; };\n};\n/**\n * Given a property name and a value, returns a function that returns a boolean based on whether\n * the passed object has a property that matches the value\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = propEq(\"name\", \"blarg\");\n * getName(obj) === true\n */\nexports.propEq = curry(function (name, val, obj) { return obj && obj[name] === val; });\n/**\n * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n * let getName = prop(\"nestedObj.name\");\n * getName(obj) === \"blarg\"\n * let propNotFound = prop(\"this.property.doesnt.exist\");\n * propNotFound(obj) === undefined\n */\nexports.parse = function (name) {\n    return pipe.apply(null, name.split(\".\").map(exports.prop));\n};\n/**\n * Given a function that returns a truthy or falsey value, returns a\n * function that returns the opposite (falsey or truthy) value given the same inputs\n */\nexports.not = function (fn) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        return !fn.apply(null, args);\n    };\n};\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if both functions return truthy for the given arguments\n */\nfunction and(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        return fn1.apply(null, args) && fn2.apply(null, args);\n    };\n}\nexports.and = and;\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if at least one of the functions returns truthy for the given arguments\n */\nfunction or(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        return fn1.apply(null, args) || fn2.apply(null, args);\n    };\n}\nexports.or = or;\n/**\n * Check if all the elements of an array match a predicate function\n *\n * @param fn1 a predicate function `fn1`\n * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n */\nexports.all = function (fn1) {\n    return function (arr) { return arr.reduce(function (b, x) { return b && !!fn1(x); }, true); };\n};\nexports.any = function (fn1) {\n    return function (arr) { return arr.reduce(function (b, x) { return b || !!fn1(x); }, false); };\n};\n/** Given a class, returns a Predicate function that returns true if the object is of that class */\nexports.is = function (ctor) { return function (obj) {\n    return (obj != null && obj.constructor === ctor || obj instanceof ctor);\n}; };\n/** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\nexports.eq = function (val) { return function (other) {\n    return val === other;\n}; };\n/** Given a value, returns a function which returns the value */\nexports.val = function (v) { return function () { return v; }; };\nfunction invoke(fnName, args) {\n    return function (obj) {\n        return obj[fnName].apply(obj, args);\n    };\n}\nexports.invoke = invoke;\n/**\n * Sorta like Pattern Matching (a functional programming conditional construct)\n *\n * See http://c2.com/cgi/wiki?PatternMatching\n *\n * This is a conditional construct which allows a series of predicates and output functions\n * to be checked and then applied.  Each predicate receives the input.  If the predicate\n * returns truthy, then its matching output function (mapping function) is provided with\n * the input and, then the result is returned.\n *\n * Each combination (2-tuple) of predicate + output function should be placed in an array\n * of size 2: [ predicate, mapFn ]\n *\n * These 2-tuples should be put in an outer array.\n *\n * @example\n * ```\n *\n * // Here's a 2-tuple where the first element is the isString predicate\n * // and the second element is a function that returns a description of the input\n * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n *\n * // Second tuple: predicate \"isNumber\", mapfn returns a description\n * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n *\n * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n *\n * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n *\n * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n *\n * console.log(descriptionOf(undefined)); // 'notdefined'\n * console.log(descriptionOf(55)); // '(55) That's a number!'\n * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n * ```\n *\n * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n * with a Predicate and a mapping/output function\n * @returns {function(any): *}\n */\nfunction pattern(struct) {\n    return function (x) {\n        for (var i = 0; i < struct.length; i++) {\n            if (struct[i][0](x))\n                return struct[i][1](x);\n        }\n    };\n}\nexports.pattern = pattern;\n//# sourceMappingURL=hof.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/hof.js\n// module id = 5\n// module chunks = 0 1","\"use strict\";\nvar notImplemented = function (fnname) { return function () {\n    throw new Error(fnname + \"(): No coreservices implementation for UI-Router is loaded. You should include one of: ['angular1.js']\");\n}; };\nvar services = {\n    $q: undefined,\n    $injector: undefined,\n    location: {},\n    locationConfig: {},\n    template: {}\n};\nexports.services = services;\n[\"setUrl\", \"path\", \"search\", \"hash\", \"onChange\"]\n    .forEach(function (key) { return services.location[key] = notImplemented(key); });\n[\"port\", \"protocol\", \"host\", \"baseHref\", \"html5Mode\", \"hashPrefix\"]\n    .forEach(function (key) { return services.locationConfig[key] = notImplemented(key); });\n//# sourceMappingURL=coreservices.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/coreservices.js\n// module id = 6\n// module chunks = 0 1","\"use strict\";\n/** @module core */\n/**\n * Matches state names using glob-like pattern strings.\n *\n * Globs can be used in specific APIs including:\n *\n * - [[StateService.is]]\n * - [[StateService.includes]]\n * - The first argument to Hook Registration functions like [[TransitionService.onStart]]\n *    - [[HookMatchCriteria]] and [[HookMatchCriterion]]\n *\n * A `Glob` string is a pattern which matches state names.\n * Nested state names are split into segments (separated by a dot) when processing.\n * The state named `foo.bar.baz` is split into three segments ['foo', 'bar', 'baz']\n *\n * Globs work according to the following rules:\n *\n * ### Exact match:\n *\n * The glob `'A.B'` matches the state named exactly `'A.B'`.\n *\n * | Glob        |Matches states named|Does not match state named|\n * |:------------|:--------------------|:---------------------|\n * | `'A'`       | `'A'`               | `'B'` , `'A.C'`      |\n * | `'A.B'`     | `'A.B'`             | `'A'` , `'A.B.C'`    |\n * | `'foo'`     | `'foo'`             | `'FOO'` , `'foo.bar'`|\n *\n * ### Single star (`*`)\n *\n * A single star (`*`) is a wildcard that matches exactly one segment.\n *\n * | Glob        |Matches states named  |Does not match state named |\n * |:------------|:---------------------|:--------------------------|\n * | `'*'`       | `'A'` , `'Z'`        | `'A.B'` , `'Z.Y.X'`       |\n * | `'A.*'`     | `'A.B'` , `'A.C'`    | `'A'` , `'A.B.C'`         |\n * | `'A.*.*'`   | `'A.B.C'` , `'A.X.Y'`| `'A'`, `'A.B'` , `'Z.Y.X'`|\n *\n * ### Double star (`**`)\n *\n * A double star (`'**'`) is a wildcard that matches *zero or more segments*\n *\n * | Glob        |Matches states named                           |Does not match state named         |\n * |:------------|:----------------------------------------------|:----------------------------------|\n * | `'**'`      | `'A'` , `'A.B'`, `'Z.Y.X'`                    | (matches all states)              |\n * | `'A.**'`    | `'A'` , `'A.B'` , `'A.C.X'`                   | `'Z.Y.X'`                         |\n * | `'**.X'`    | `'X'` , `'A.X'` , `'Z.Y.X'`                   | `'A'` , `'A.login.Z'`             |\n * | `'A.**.X'`  | `'A.X'` , `'A.B.X'` , `'A.B.C.X'`             | `'A'` , `'A.B.C'`                 |\n *\n */\nvar Glob = (function () {\n    function Glob(text) {\n        this.text = text;\n        this.glob = text.split('.');\n        var regexpString = this.text.split('.')\n            .map(function (seg) {\n            if (seg === '**')\n                return '(?:|(?:\\\\.[^.]*)*)';\n            if (seg === '*')\n                return '\\\\.[^.]*';\n            return '\\\\.' + seg;\n        }).join('');\n        this.regexp = new RegExp(\"^\" + regexpString + \"$\");\n    }\n    Glob.prototype.matches = function (name) {\n        return this.regexp.test('.' + name);\n    };\n    /** @deprecated whats the point? */\n    Glob.is = function (text) {\n        return text.indexOf('*') > -1;\n    };\n    /** @deprecated whats the point? */\n    Glob.fromString = function (text) {\n        if (!this.is(text))\n            return null;\n        return new Glob(text);\n    };\n    return Glob;\n}());\nexports.Glob = Glob;\n//# sourceMappingURL=glob.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/glob.js\n// module id = 7\n// module chunks = 0 1","/**\n * @module common\n */ /** for typedoc */\n\"use strict\";\nvar Queue = (function () {\n    function Queue(_items, _limit) {\n        if (_items === void 0) { _items = []; }\n        if (_limit === void 0) { _limit = null; }\n        this._items = _items;\n        this._limit = _limit;\n    }\n    Queue.prototype.enqueue = function (item) {\n        var items = this._items;\n        items.push(item);\n        if (this._limit && items.length > this._limit)\n            items.shift();\n        return item;\n    };\n    Queue.prototype.dequeue = function () {\n        if (this.size())\n            return this._items.splice(0, 1)[0];\n    };\n    Queue.prototype.clear = function () {\n        var current = this._items;\n        this._items = [];\n        return current;\n    };\n    Queue.prototype.size = function () {\n        return this._items.length;\n    };\n    Queue.prototype.remove = function (item) {\n        var idx = this._items.indexOf(item);\n        return idx > -1 && this._items.splice(idx, 1)[0];\n    };\n    Queue.prototype.peekTail = function () {\n        return this._items[this._items.length - 1];\n    };\n    Queue.prototype.peekHead = function () {\n        if (this.size())\n            return this._items[0];\n    };\n    return Queue;\n}());\nexports.Queue = Queue;\n//# sourceMappingURL=queue.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/queue.js\n// module id = 8\n// module chunks = 0 1","/**\n * Functions that manipulate strings\n *\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_strings\n */ /** */\n\"use strict\";\nvar predicates_1 = require(\"./predicates\");\nvar rejectFactory_1 = require(\"../transition/rejectFactory\");\nvar common_1 = require(\"./common\");\nvar hof_1 = require(\"./hof\");\nvar transition_1 = require(\"../transition/transition\");\nvar resolvable_1 = require(\"../resolve/resolvable\");\n/**\n * Returns a string shortened to a maximum length\n *\n * If the string is already less than the `max` length, return the string.\n * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n *\n * @param max the maximum length of the string to return\n * @param str the input string\n */\nfunction maxLength(max, str) {\n    if (str.length <= max)\n        return str;\n    return str.substr(0, max - 3) + \"...\";\n}\nexports.maxLength = maxLength;\n/**\n * Returns a string, with spaces added to the end, up to a desired str length\n *\n * If the string is already longer than the desired length, return the string.\n * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n *\n * @param length the desired length of the string to return\n * @param str the input string\n */\nfunction padString(length, str) {\n    while (str.length < length)\n        str += \" \";\n    return str;\n}\nexports.padString = padString;\nfunction kebobString(camelCase) {\n    return camelCase\n        .replace(/^([A-Z])/, function ($1) { return $1.toLowerCase(); }) // replace first char\n        .replace(/([A-Z])/g, function ($1) { return \"-\" + $1.toLowerCase(); }); // replace rest\n}\nexports.kebobString = kebobString;\nfunction _toJson(obj) {\n    return JSON.stringify(obj);\n}\nfunction _fromJson(json) {\n    return predicates_1.isString(json) ? JSON.parse(json) : json;\n}\nfunction promiseToString(p) {\n    return \"Promise(\" + JSON.stringify(p) + \")\";\n}\nfunction functionToString(fn) {\n    var fnStr = fnToString(fn);\n    var namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n    var toStr = namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n    var fnName = fn['name'] || \"\";\n    if (fnName && toStr.match(/function \\(/)) {\n        return 'function ' + fnName + toStr.substr(9);\n    }\n    return toStr;\n}\nexports.functionToString = functionToString;\nfunction fnToString(fn) {\n    var _fn = predicates_1.isArray(fn) ? fn.slice(-1)[0] : fn;\n    return _fn && _fn.toString() || \"undefined\";\n}\nexports.fnToString = fnToString;\nvar stringifyPatternFn = null;\nvar stringifyPattern = function (value) {\n    var isTransitionRejectionPromise = rejectFactory_1.Rejection.isTransitionRejectionPromise;\n    stringifyPatternFn = stringifyPatternFn || hof_1.pattern([\n        [hof_1.not(predicates_1.isDefined), hof_1.val(\"undefined\")],\n        [predicates_1.isNull, hof_1.val(\"null\")],\n        [predicates_1.isPromise, hof_1.val(\"[Promise]\")],\n        [isTransitionRejectionPromise, function (x) { return x._transitionRejection.toString(); }],\n        [hof_1.is(rejectFactory_1.Rejection), hof_1.invoke(\"toString\")],\n        [hof_1.is(transition_1.Transition), hof_1.invoke(\"toString\")],\n        [hof_1.is(resolvable_1.Resolvable), hof_1.invoke(\"toString\")],\n        [predicates_1.isInjectable, functionToString],\n        [hof_1.val(true), common_1.identity]\n    ]);\n    return stringifyPatternFn(value);\n};\nfunction stringify(o) {\n    var seen = [];\n    function format(val) {\n        if (predicates_1.isObject(val)) {\n            if (seen.indexOf(val) !== -1)\n                return '[circular ref]';\n            seen.push(val);\n        }\n        return stringifyPattern(val);\n    }\n    return JSON.stringify(o, function (key, val) { return format(val); }).replace(/\\\\\"/g, '\"');\n}\nexports.stringify = stringify;\n/** Returns a function that splits a string on a character or substring */\nexports.beforeAfterSubstr = function (char) { return function (str) {\n    if (!str)\n        return [\"\", \"\"];\n    var idx = str.indexOf(char);\n    if (idx === -1)\n        return [str, \"\"];\n    return [str.substr(0, idx), str.substr(idx + 1)];\n}; };\n//# sourceMappingURL=strings.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/strings.js\n// module id = 9\n// module chunks = 0 1","/** @internal @module transition */ /** for typedoc */\n\"use strict\";\nvar common_1 = require(\"../common/common\");\nvar strings_1 = require(\"../common/strings\");\n(function (RejectType) {\n    RejectType[RejectType[\"SUPERSEDED\"] = 2] = \"SUPERSEDED\";\n    RejectType[RejectType[\"ABORTED\"] = 3] = \"ABORTED\";\n    RejectType[RejectType[\"INVALID\"] = 4] = \"INVALID\";\n    RejectType[RejectType[\"IGNORED\"] = 5] = \"IGNORED\";\n    RejectType[RejectType[\"ERROR\"] = 6] = \"ERROR\";\n})(exports.RejectType || (exports.RejectType = {}));\nvar RejectType = exports.RejectType;\nvar Rejection = (function () {\n    function Rejection(type, message, detail) {\n        this.type = type;\n        this.message = message;\n        this.detail = detail;\n    }\n    Rejection.prototype.toString = function () {\n        var detailString = function (d) {\n            return d && d.toString !== Object.prototype.toString ? d.toString() : strings_1.stringify(d);\n        };\n        var type = this.type, message = this.message, detail = detailString(this.detail);\n        return \"TransitionRejection(type: \" + type + \", message: \" + message + \", detail: \" + detail + \")\";\n    };\n    Rejection.prototype.toPromise = function () {\n        return common_1.extend(common_1.silentRejection(this), { _transitionRejection: this });\n    };\n    /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n    Rejection.isTransitionRejectionPromise = function (obj) {\n        return obj && (typeof obj.then === 'function') && obj._transitionRejection instanceof Rejection;\n    };\n    /** Returns a TransitionRejection due to transition superseded */\n    Rejection.superseded = function (detail, options) {\n        var message = \"The transition has been superseded by a different transition\";\n        var rejection = new Rejection(RejectType.SUPERSEDED, message, detail);\n        if (options && options.redirected) {\n            rejection.redirected = true;\n        }\n        return rejection;\n    };\n    /** Returns a TransitionRejection due to redirected transition */\n    Rejection.redirected = function (detail) {\n        return Rejection.superseded(detail, { redirected: true });\n    };\n    /** Returns a TransitionRejection due to invalid transition */\n    Rejection.invalid = function (detail) {\n        var message = \"This transition is invalid\";\n        return new Rejection(RejectType.INVALID, message, detail);\n    };\n    /** Returns a TransitionRejection due to ignored transition */\n    Rejection.ignored = function (detail) {\n        var message = \"The transition was ignored\";\n        return new Rejection(RejectType.IGNORED, message, detail);\n    };\n    /** Returns a TransitionRejection due to aborted transition */\n    Rejection.aborted = function (detail) {\n        // TODO think about how to encapsulate an Error() object\n        var message = \"The transition has been aborted\";\n        return new Rejection(RejectType.ABORTED, message, detail);\n    };\n    /** Returns a TransitionRejection due to aborted transition */\n    Rejection.errored = function (detail) {\n        // TODO think about how to encapsulate an Error() object\n        var message = \"The transition errored\";\n        return new Rejection(RejectType.ERROR, message, detail);\n    };\n    return Rejection;\n}());\nexports.Rejection = Rejection;\n//# sourceMappingURL=rejectFactory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/transition/rejectFactory.js\n// module id = 10\n// module chunks = 0 1","\"use strict\";\n/** @internal @module transition */ /** for typedoc */\nvar strings_1 = require(\"../common/strings\");\nvar trace_1 = require(\"../common/trace\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar hof_1 = require(\"../common/hof\");\nvar transitionHook_1 = require(\"./transitionHook\");\nvar hookRegistry_1 = require(\"./hookRegistry\");\nvar hookBuilder_1 = require(\"./hookBuilder\");\nvar node_1 = require(\"../path/node\");\nvar pathFactory_1 = require(\"../path/pathFactory\");\nvar targetState_1 = require(\"../state/targetState\");\nvar param_1 = require(\"../params/param\");\nvar resolvable_1 = require(\"../resolve/resolvable\");\nvar rejectFactory_1 = require(\"./rejectFactory\");\nvar resolveContext_1 = require(\"../resolve/resolveContext\");\nvar router_1 = require(\"../router\");\nvar transitionCount = 0;\nvar stateSelf = hof_1.prop(\"self\");\n/**\n * Represents a transition between two states.\n *\n * When navigating to a state, we are transitioning **from** the current state **to** the new state.\n *\n * This object contains all contextual information about the to/from states, parameters, resolves.\n * It has information about all states being entered and exited as a result of the transition.\n */\nvar Transition = (function () {\n    /**\n     * Creates a new Transition object.\n     *\n     * If the target state is not valid, an error is thrown.\n     *\n     * @param fromPath The path of [[PathNode]]s from which the transition is leaving.  The last node in the `fromPath`\n     *        encapsulates the \"from state\".\n     * @param targetState The target state and parameters being transitioned to (also, the transition options)\n     * @param router The [[UIRouter]] instance\n     */\n    function Transition(fromPath, targetState, router) {\n        var _this = this;\n        /** @hidden */\n        this._deferred = coreservices_1.services.$q.defer();\n        /**\n         * This promise is resolved or rejected based on the outcome of the Transition.\n         *\n         * When the transition is successful, the promise is resolved\n         * When the transition is unsuccessful, the promise is rejected with the [[TransitionRejection]] or javascript error\n         */\n        this.promise = this._deferred.promise;\n        this.treeChanges = function () { return _this._treeChanges; };\n        this.isActive = function () { return _this === _this._options.current(); };\n        this.router = router;\n        this._targetState = targetState;\n        if (!targetState.valid()) {\n            throw new Error(targetState.error());\n        }\n        // Makes the Transition instance a hook registry (onStart, etc)\n        hookRegistry_1.HookRegistry.mixin(new hookRegistry_1.HookRegistry(), this);\n        // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n        this._options = common_1.extend({ current: hof_1.val(this) }, targetState.options());\n        this.$id = transitionCount++;\n        var toPath = pathFactory_1.PathFactory.buildToPath(fromPath, targetState);\n        this._treeChanges = pathFactory_1.PathFactory.treeChanges(fromPath, toPath, this._options.reloadState);\n        var enteringStates = this._treeChanges.entering.map(function (node) { return node.state; });\n        pathFactory_1.PathFactory.applyViewConfigs(router.transitionService.$view, this._treeChanges.to, enteringStates);\n        var rootResolvables = [\n            new resolvable_1.Resolvable(router_1.UIRouter, function () { return router; }, [], undefined, router),\n            new resolvable_1.Resolvable(Transition, function () { return _this; }, [], undefined, this),\n            new resolvable_1.Resolvable('$transition$', function () { return _this; }, [], undefined, this),\n            new resolvable_1.Resolvable('$stateParams', function () { return _this.params(); }, [], undefined, this.params())\n        ];\n        var rootNode = this._treeChanges.to[0];\n        var context = new resolveContext_1.ResolveContext(this._treeChanges.to);\n        context.addResolvables(rootResolvables, rootNode.state);\n    }\n    /** @inheritdoc */\n    Transition.prototype.onBefore = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    Transition.prototype.onStart = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    Transition.prototype.onExit = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    Transition.prototype.onRetain = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    Transition.prototype.onEnter = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    Transition.prototype.onFinish = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    Transition.prototype.onSuccess = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    Transition.prototype.onError = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    Transition.prototype.$from = function () {\n        return common_1.tail(this._treeChanges.from).state;\n    };\n    Transition.prototype.$to = function () {\n        return common_1.tail(this._treeChanges.to).state;\n    };\n    /**\n     * Returns the \"from state\"\n     *\n     * @returns The state object for the Transition's \"from state\".\n     */\n    Transition.prototype.from = function () {\n        return this.$from().self;\n    };\n    /**\n     * Returns the \"to state\"\n     *\n     * @returns The state object for the Transition's target state (\"to state\").\n     */\n    Transition.prototype.to = function () {\n        return this.$to().self;\n    };\n    /**\n     * Gets the Target State\n     *\n     * A transition's [[TargetState]] encapsulates the [[to]] state, the [[params]], and the [[options]].\n     *\n     * @returns the [[TargetState]] of this Transition\n     */\n    Transition.prototype.targetState = function () {\n        return this._targetState;\n    };\n    /**\n     * Determines whether two transitions are equivalent.\n     */\n    Transition.prototype.is = function (compare) {\n        if (compare instanceof Transition) {\n            // TODO: Also compare parameters\n            return this.is({ to: compare.$to().name, from: compare.$from().name });\n        }\n        return !((compare.to && !hookRegistry_1.matchState(this.$to(), compare.to)) ||\n            (compare.from && !hookRegistry_1.matchState(this.$from(), compare.from)));\n    };\n    /**\n     * Gets transition parameter values\n     *\n     * @param pathname Pick which treeChanges path to get parameters for:\n     *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n     * @returns transition parameter values for the desired path.\n     */\n    Transition.prototype.params = function (pathname) {\n        if (pathname === void 0) { pathname = \"to\"; }\n        return this._treeChanges[pathname].map(hof_1.prop(\"paramValues\")).reduce(common_1.mergeR, {});\n    };\n    /**\n     * Creates a [[UIInjector]] Dependency Injector\n     *\n     * Returns a Dependency Injector for the Transition's target state (to state).\n     * The injector provides resolve values which the target state has access to.\n     *\n     * The `UIInjector` can also provide values from the native root/global injector (ng1/ng2).\n     *\n     * If a `state` is provided, the injector that is returned will be limited to resolve values that the provided state has access to.\n     *\n     * @param state Limits the resolves provided to only the resolves the provided state has access to.\n     * @returns a [[UIInjector]]\n     */\n    Transition.prototype.injector = function (state) {\n        var path = this.treeChanges().to;\n        if (state)\n            path = pathFactory_1.PathFactory.subPath(path, function (node) { return node.state === state || node.state.name === state; });\n        return new resolveContext_1.ResolveContext(path).injector();\n    };\n    /**\n     * Gets all available resolve tokens (keys)\n     *\n     * This method can be used in conjunction with [[getResolve]] to inspect the resolve values\n     * available to the Transition.\n     *\n     * The returned tokens include those defined on [[StateDeclaration.resolve]] blocks, for the states\n     * in the Transition's [[TreeChanges.to]] path.\n     *\n     * @returns an array of resolve tokens (keys)\n     */\n    Transition.prototype.getResolveTokens = function () {\n        return new resolveContext_1.ResolveContext(this._treeChanges.to).getTokens();\n    };\n    /**\n     * Gets resolved values\n     *\n     * This method can be used in conjunction with [[getResolveTokens]] to inspect what resolve values\n     * are available to the Transition.\n     *\n     * Given a token, returns the resolved data for that token.\n     * Given an array of tokens, returns an array of resolved data for those tokens.\n     *\n     * If a resolvable hasn't yet been fetched, returns `undefined` for that token\n     * If a resolvable doesn't exist for the token, throws an error.\n     *\n     * @param token the token (or array of tokens)\n     *\n     * @returns an array of resolve tokens (keys)\n     */\n    Transition.prototype.getResolveValue = function (token) {\n        var resolveContext = new resolveContext_1.ResolveContext(this._treeChanges.to);\n        var getData = function (token) {\n            var resolvable = resolveContext.getResolvable(token);\n            if (resolvable === undefined) {\n                throw new Error(\"Dependency Injection token not found: \" + strings_1.stringify(token));\n            }\n            return resolvable.data;\n        };\n        if (predicates_1.isArray(token)) {\n            return token.map(getData);\n        }\n        return getData(token);\n    };\n    /**\n     * Gets a [[Resolvable]] primitive\n     *\n     * This is a lower level API that returns a [[Resolvable]] from the Transition for a given token.\n     *\n     * @param token the DI token\n     *\n     * @returns the [[Resolvable]] in the transition's to path, or undefined\n     */\n    Transition.prototype.getResolvable = function (token) {\n        return new resolveContext_1.ResolveContext(this._treeChanges.to).getResolvable(token);\n    };\n    /**\n     * Dynamically adds a new [[Resolvable]] (`resolve`) to this transition.\n     *\n     * @param resolvable an [[Resolvable]] object\n     * @param state the state in the \"to path\" which should receive the new resolve (otherwise, the root state)\n     */\n    Transition.prototype.addResolvable = function (resolvable, state) {\n        if (state === void 0) { state = \"\"; }\n        var stateName = (typeof state === \"string\") ? state : state.name;\n        var topath = this._treeChanges.to;\n        var targetNode = common_1.find(topath, function (node) { return node.state.name === stateName; });\n        var resolveContext = new resolveContext_1.ResolveContext(topath);\n        resolveContext.addResolvables([resolvable], targetNode.state);\n    };\n    /**\n     * If the current transition is a redirect, returns the transition that was redirected.\n     *\n     * Gets the transition from which this transition was redirected.\n     *\n     *\n     * #### Example:\n     * ```js\n     * let transitionA = $state.go('A').transitionA\n     * transitionA.onStart({}, () => $state.target('B'));\n     * $transitions.onSuccess({ to: 'B' }, (trans) => {\n     *   trans.to().name === 'B'; // true\n     *   trans.redirectedFrom() === transitionA; // true\n     * });\n     * ```\n     *\n     * @returns The previous Transition, or null if this Transition is not the result of a redirection\n     */\n    Transition.prototype.redirectedFrom = function () {\n        return this._options.redirectedFrom || null;\n    };\n    /**\n     * Get the transition options\n     *\n     * @returns the options for this Transition.\n     */\n    Transition.prototype.options = function () {\n        return this._options;\n    };\n    /**\n     * Gets the states being entered.\n     *\n     * @returns an array of states that will be entered during this transition.\n     */\n    Transition.prototype.entering = function () {\n        return common_1.map(this._treeChanges.entering, hof_1.prop('state')).map(stateSelf);\n    };\n    /**\n     * Gets the states being exited.\n     *\n     * @returns an array of states that will be exited during this transition.\n     */\n    Transition.prototype.exiting = function () {\n        return common_1.map(this._treeChanges.exiting, hof_1.prop('state')).map(stateSelf).reverse();\n    };\n    /**\n     * Gets the states being retained.\n     *\n     * @returns an array of states that are already entered from a previous Transition, that will not be\n     *    exited during this Transition\n     */\n    Transition.prototype.retained = function () {\n        return common_1.map(this._treeChanges.retained, hof_1.prop('state')).map(stateSelf);\n    };\n    /**\n     * Get the [[ViewConfig]]s associated with this Transition\n     *\n     * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n     * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n     *\n     * @param pathname the name of the path to fetch views for:\n     *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n     * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n     *\n     * @returns a list of ViewConfig objects for the given path.\n     */\n    Transition.prototype.views = function (pathname, state) {\n        if (pathname === void 0) { pathname = \"entering\"; }\n        var path = this._treeChanges[pathname];\n        path = !state ? path : path.filter(hof_1.propEq('state', state));\n        return path.map(hof_1.prop(\"views\")).filter(common_1.identity).reduce(common_1.unnestR, []);\n    };\n    /**\n     * Creates a new transition that is a redirection of the current one.\n     *\n     * This transition can be returned from a [[TransitionService]] hook to\n     * redirect a transition to a new state and/or set of parameters.\n     *\n     * @returns Returns a new [[Transition]] instance.\n     */\n    Transition.prototype.redirect = function (targetState) {\n        var newOptions = common_1.extend({}, this.options(), targetState.options(), { redirectedFrom: this, source: \"redirect\" });\n        targetState = new targetState_1.TargetState(targetState.identifier(), targetState.$state(), targetState.params(), newOptions);\n        var newTransition = this.router.transitionService.create(this._treeChanges.from, targetState);\n        var originalEnteringNodes = this.treeChanges().entering;\n        var redirectEnteringNodes = newTransition.treeChanges().entering;\n        // --- Re-use resolve data from original transition ---\n        // When redirecting from a parent state to a child state where the parent parameter values haven't changed\n        // (because of the redirect), the resolves fetched by the original transition are still valid in the\n        // redirected transition.\n        //\n        // This allows you to define a redirect on a parent state which depends on an async resolve value.\n        // You can wait for the resolve, then redirect to a child state based on the result.\n        // The redirected transition does not have to re-fetch the resolve.\n        // ---------------------------------------------------------\n        var nodeIsReloading = function (reloadState) { return function (node) {\n            return reloadState && node.state.includes[reloadState.name];\n        }; };\n        // Find any \"entering\" nodes in the redirect path that match the original path and aren't being reloaded\n        var matchingEnteringNodes = node_1.PathNode.matching(redirectEnteringNodes, originalEnteringNodes)\n            .filter(hof_1.not(nodeIsReloading(targetState.options().reloadState)));\n        // Use the existing (possibly pre-resolved) resolvables for the matching entering nodes.\n        matchingEnteringNodes.forEach(function (node, idx) {\n            node.resolvables = originalEnteringNodes[idx].resolvables;\n        });\n        return newTransition;\n    };\n    /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n    Transition.prototype._changedParams = function () {\n        var _a = this._treeChanges, to = _a.to, from = _a.from;\n        if (this._options.reload || common_1.tail(to).state !== common_1.tail(from).state)\n            return undefined;\n        var nodeSchemas = to.map(function (node) { return node.paramSchema; });\n        var _b = [to, from].map(function (path) { return path.map(function (x) { return x.paramValues; }); }), toValues = _b[0], fromValues = _b[1];\n        var tuples = common_1.arrayTuples(nodeSchemas, toValues, fromValues);\n        return tuples.map(function (_a) {\n            var schema = _a[0], toVals = _a[1], fromVals = _a[2];\n            return param_1.Param.changed(schema, toVals, fromVals);\n        }).reduce(common_1.unnestR, []);\n    };\n    /**\n     * Returns true if the transition is dynamic.\n     *\n     * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n     *\n     * @returns true if the Transition is dynamic\n     */\n    Transition.prototype.dynamic = function () {\n        var changes = this._changedParams();\n        return !changes ? false : changes.map(function (x) { return x.dynamic; }).reduce(common_1.anyTrueR, false);\n    };\n    /**\n     * Returns true if the transition is ignored.\n     *\n     * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n     *\n     * @returns true if the Transition is ignored.\n     */\n    Transition.prototype.ignored = function () {\n        var changes = this._changedParams();\n        return !changes ? false : changes.length === 0;\n    };\n    /**\n     * @hidden\n     */\n    Transition.prototype.hookBuilder = function () {\n        return new hookBuilder_1.HookBuilder(this.router.transitionService, this, {\n            transition: this,\n            current: this._options.current\n        });\n    };\n    /**\n     * Runs the transition\n     *\n     * This method is generally called from the [[StateService.transitionTo]]\n     *\n     * @returns a promise for a successful transition.\n     */\n    Transition.prototype.run = function () {\n        var _this = this;\n        var runSynchronousHooks = transitionHook_1.TransitionHook.runSynchronousHooks;\n        var runAllHooks = transitionHook_1.TransitionHook.runAllHooks;\n        var hookBuilder = this.hookBuilder();\n        var globals = this.router.globals;\n        globals.transitionHistory.enqueue(this);\n        var syncResult = runSynchronousHooks(hookBuilder.getOnBeforeHooks());\n        if (rejectFactory_1.Rejection.isTransitionRejectionPromise(syncResult)) {\n            syncResult.catch(function () { return 0; }); // issue #2676\n            var rejectReason = syncResult._transitionRejection;\n            this._deferred.reject(rejectReason);\n            return this.promise;\n        }\n        if (!this.valid()) {\n            var error = new Error(this.error());\n            this._deferred.reject(error);\n            return this.promise;\n        }\n        if (this.ignored()) {\n            trace_1.trace.traceTransitionIgnored(this);\n            this._deferred.reject(rejectFactory_1.Rejection.ignored());\n            return this.promise;\n        }\n        // When the chain is complete, then resolve or reject the deferred\n        var transitionSuccess = function () {\n            trace_1.trace.traceSuccess(_this.$to(), _this);\n            _this.success = true;\n            _this._deferred.resolve(_this.to());\n            runAllHooks(hookBuilder.getOnSuccessHooks());\n        };\n        var transitionError = function (reason) {\n            trace_1.trace.traceError(reason, _this);\n            _this.success = false;\n            _this._deferred.reject(reason);\n            _this._error = reason;\n            runAllHooks(hookBuilder.getOnErrorHooks());\n        };\n        trace_1.trace.traceTransitionStart(this);\n        // Chain the next hook off the previous\n        var appendHookToChain = function (prev, nextHook) {\n            return prev.then(function () { return nextHook.invokeHook(); });\n        };\n        // Run the hooks, then resolve or reject the overall deferred in the .then() handler\n        hookBuilder.asyncHooks()\n            .reduce(appendHookToChain, syncResult)\n            .then(transitionSuccess, transitionError);\n        return this.promise;\n    };\n    /**\n     * Checks if the Transition is valid\n     *\n     * @returns true if the Transition is valid\n     */\n    Transition.prototype.valid = function () {\n        return !this.error() || this.success !== undefined;\n    };\n    /**\n     * The Transition error reason.\n     *\n     * If the transition is invalid (and could not be run), returns the reason the transition is invalid.\n     * If the transition was valid and ran, but was not successful, returns the reason the transition failed.\n     *\n     * @returns an error message explaining why the transition is invalid, or the reason the transition failed.\n     */\n    Transition.prototype.error = function () {\n        var state = this.$to();\n        var redirects = 0, trans = this;\n        while ((trans = trans.redirectedFrom()) != null) {\n            if (++redirects > 20)\n                return \"Too many Transition redirects (20+)\";\n        }\n        if (state.self.abstract)\n            return \"Cannot transition to abstract state '\" + state.name + \"'\";\n        if (!param_1.Param.validates(state.parameters(), this.params()))\n            return \"Param values not valid for state '\" + state.name + \"'\";\n        if (this.success === false)\n            return this._error;\n    };\n    /**\n     * A string representation of the Transition\n     *\n     * @returns A string representation of the Transition\n     */\n    Transition.prototype.toString = function () {\n        var fromStateOrName = this.from();\n        var toStateOrName = this.to();\n        var avoidEmptyHash = function (params) {\n            return (params[\"#\"] !== null && params[\"#\"] !== undefined) ? params : common_1.omit(params, \"#\");\n        };\n        // (X) means the to state is invalid.\n        var id = this.$id, from = predicates_1.isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName, fromParams = common_1.toJson(avoidEmptyHash(this._treeChanges.from.map(hof_1.prop('paramValues')).reduce(common_1.mergeR, {}))), toValid = this.valid() ? \"\" : \"(X) \", to = predicates_1.isObject(toStateOrName) ? toStateOrName.name : toStateOrName, toParams = common_1.toJson(avoidEmptyHash(this.params()));\n        return \"Transition#\" + id + \"( '\" + from + \"'\" + fromParams + \" -> \" + toValid + \"'\" + to + \"'\" + toParams + \" )\";\n    };\n    Transition.diToken = Transition;\n    return Transition;\n}());\nexports.Transition = Transition;\n//# sourceMappingURL=transition.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/transition/transition.js\n// module id = 11\n// module chunks = 0 1","\"use strict\";\n/**\n * UI-Router Transition Tracing\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"ui-router-ng2\"; // or \"angular-ui-router\"\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"angular-ui-router\").trace; // or \"ui-router-ng2\"\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"angular-ui-router\"].trace; // or \"ui-router-ng2\"\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @module trace\n */ /** for typedoc */\nvar hof_1 = require(\"../common/hof\");\nvar predicates_1 = require(\"../common/predicates\");\nvar strings_1 = require(\"./strings\");\n/** @hidden */\nfunction uiViewString(viewData) {\n    if (!viewData)\n        return 'ui-view (defunct)';\n    return (\"[ui-view#\" + viewData.id + \" tag \") +\n        (\"in template from '\" + (viewData.creationContext && viewData.creationContext.name || '(root)') + \"' state]: \") +\n        (\"fqn: '\" + viewData.fqn + \"', \") +\n        (\"name: '\" + viewData.name + \"@\" + viewData.creationContext + \"')\");\n}\n/** @hidden */\nvar viewConfigString = function (viewConfig) {\n    return (\"[ViewConfig#\" + viewConfig.$id + \" from '\" + (viewConfig.viewDecl.$context.name || '(root)') + \"' state]: target ui-view: '\" + viewConfig.viewDecl.$uiViewName + \"@\" + viewConfig.viewDecl.$uiViewContextAnchor + \"'\");\n};\n/** @hidden */\nfunction normalizedCat(input) {\n    return predicates_1.isNumber(input) ? Category[input] : Category[Category[input]];\n}\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\n(function (Category) {\n    Category[Category[\"RESOLVE\"] = 0] = \"RESOLVE\";\n    Category[Category[\"TRANSITION\"] = 1] = \"TRANSITION\";\n    Category[Category[\"HOOK\"] = 2] = \"HOOK\";\n    Category[Category[\"UIVIEW\"] = 3] = \"UIVIEW\";\n    Category[Category[\"VIEWCONFIG\"] = 4] = \"VIEWCONFIG\";\n})(exports.Category || (exports.Category = {}));\nvar Category = exports.Category;\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nvar Trace = (function () {\n    /** @hidden */\n    function Trace() {\n        /** @hidden */\n        this._enabled = {};\n        this.approximateDigests = 0;\n    }\n    /** @hidden */\n    Trace.prototype._set = function (enabled, categories) {\n        var _this = this;\n        if (!categories.length) {\n            categories = Object.keys(Category)\n                .map(function (k) { return parseInt(k, 10); })\n                .filter(function (k) { return !isNaN(k); })\n                .map(function (key) { return Category[key]; });\n        }\n        categories.map(normalizedCat).forEach(function (category) { return _this._enabled[category] = enabled; });\n    };\n    /**\n     * Enables a trace [[Category]]\n     *\n     * ```js\n     * trace.enable(\"TRANSITION\");\n     * ```\n     *\n     * @param categories categories to enable. If `categories` is omitted, all categories are enabled.\n     *        Also takes strings (category name) or ordinal (category position)\n     */\n    Trace.prototype.enable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i - 0] = arguments[_i];\n        }\n        this._set(true, categories);\n    };\n    /**\n     * Disables a trace [[Category]]\n     *\n     * ```js\n     * trace.disable(\"VIEWCONFIG\");\n     * ```\n     *\n     * @param categories categories to disable. If `categories` is omitted, all categories are disabled.\n     *        Also takes strings (category name) or ordinal (category position)\n     */\n    Trace.prototype.disable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i - 0] = arguments[_i];\n        }\n        this._set(false, categories);\n    };\n    /**\n     * Retrieves the enabled stateus of a [[Category]]\n     *\n     * ```js\n     * trace.enabled(\"VIEWCONFIG\"); // true or false\n     * ```\n     *\n     * @returns boolean true if the category is enabled\n     */\n    Trace.prototype.enabled = function (category) {\n        return !!this._enabled[normalizedCat(category)];\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionStart = function (transition) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        var tid = transition.$id, digest = this.approximateDigests, transitionStr = strings_1.stringify(transition);\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \": Started  -> \" + transitionStr);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionIgnored = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        var tid = trans && trans.$id, digest = this.approximateDigests, transitionStr = strings_1.stringify(trans);\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \": Ignored  <> \" + transitionStr);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookInvocation = function (step, options) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        var tid = hof_1.parse(\"transition.$id\")(options), digest = this.approximateDigests, event = hof_1.parse(\"traceData.hookType\")(options) || \"internal\", context = hof_1.parse(\"traceData.context.state.name\")(options) || hof_1.parse(\"traceData.context\")(options) || \"unknown\", name = strings_1.functionToString(step.eventHook.callback);\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \":   Hook -> \" + event + \" context: \" + context + \", \" + strings_1.maxLength(200, name));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookResult = function (hookResult, transitionOptions) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        var tid = hof_1.parse(\"transition.$id\")(transitionOptions), digest = this.approximateDigests, hookResultStr = strings_1.stringify(hookResult);\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \":   <- Hook returned: \" + strings_1.maxLength(200, hookResultStr));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvePath = function (path, when, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        var tid = trans && trans.$id, digest = this.approximateDigests, pathStr = path && path.toString();\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \":         Resolving \" + pathStr + \" (\" + when + \")\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvableResolved = function (resolvable, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        var tid = trans && trans.$id, digest = this.approximateDigests, resolvableStr = resolvable && resolvable.toString(), result = strings_1.stringify(resolvable.data);\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \":               <- Resolved  \" + resolvableStr + \" to: \" + strings_1.maxLength(200, result));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceError = function (reason, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        var tid = trans && trans.$id, digest = this.approximateDigests, transitionStr = strings_1.stringify(trans);\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \": <- Rejected \" + transitionStr + \", reason: \" + reason);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceSuccess = function (finalState, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        var tid = trans && trans.$id, digest = this.approximateDigests, state = finalState.name, transitionStr = strings_1.stringify(trans);\n        console.log(\"Transition #\" + tid + \" Digest #\" + digest + \": <- Success  \" + transitionStr + \", final state: \" + state);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {\n        if (extra === void 0) { extra = \"\"; }\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        console.log(\"ui-view: \" + strings_1.padString(30, event) + \" \" + uiViewString(viewData) + extra);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent(\"Updating\", viewData, \" with ViewConfig from context='\" + context + \"'\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewFill = function (viewData, html) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent(\"Fill\", viewData, \" with: \" + strings_1.maxLength(200, html));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + viewConfigString(viewConfig));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + uiViewString(viewData));\n    };\n    return Trace;\n}());\nexports.Trace = Trace;\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"angular-ui-router\";\n * trace.enable(1, 5);\n * ```\n */\nvar trace = new Trace();\nexports.trace = trace;\n//# sourceMappingURL=trace.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/common/trace.js\n// module id = 12\n// module chunks = 0 1","\"use strict\";\nvar common_1 = require(\"../common/common\");\nvar strings_1 = require(\"../common/strings\");\nvar predicates_1 = require(\"../common/predicates\");\nvar hof_1 = require(\"../common/hof\");\nvar trace_1 = require(\"../common/trace\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar rejectFactory_1 = require(\"./rejectFactory\");\nvar targetState_1 = require(\"../state/targetState\");\nvar defaultOptions = {\n    async: true,\n    rejectIfSuperseded: true,\n    current: common_1.noop,\n    transition: null,\n    traceData: {},\n    bind: null\n};\n/** @hidden */\nvar TransitionHook = (function () {\n    function TransitionHook(transition, stateContext, eventHook, options) {\n        var _this = this;\n        this.transition = transition;\n        this.stateContext = stateContext;\n        this.eventHook = eventHook;\n        this.options = options;\n        this.isSuperseded = function () {\n            return _this.options.current() !== _this.options.transition;\n        };\n        this.options = common_1.defaults(options, defaultOptions);\n    }\n    TransitionHook.prototype.invokeHook = function () {\n        var _a = this, options = _a.options, eventHook = _a.eventHook;\n        trace_1.trace.traceHookInvocation(this, options);\n        if (options.rejectIfSuperseded && this.isSuperseded()) {\n            return rejectFactory_1.Rejection.superseded(options.current()).toPromise();\n        }\n        var synchronousHookResult = !eventHook._deregistered\n            ? eventHook.callback.call(options.bind, this.transition, this.stateContext)\n            : undefined;\n        return this.handleHookResult(synchronousHookResult);\n    };\n    /**\n     * This method handles the return value of a Transition Hook.\n     *\n     * A hook can return false (cancel), a TargetState (redirect),\n     * or a promise (which may later resolve to false or a redirect)\n     *\n     * This also handles \"transition superseded\" -- when a new transition\n     * was started while the hook was still running\n     */\n    TransitionHook.prototype.handleHookResult = function (result) {\n        // This transition is no longer current.\n        // Another transition started while this hook was still running.\n        if (this.isSuperseded()) {\n            // Abort this transition\n            return rejectFactory_1.Rejection.superseded(this.options.current()).toPromise();\n        }\n        // Hook returned a promise\n        if (predicates_1.isPromise(result)) {\n            // Wait for the promise, then reprocess the resolved value\n            return result.then(this.handleHookResult.bind(this));\n        }\n        trace_1.trace.traceHookResult(result, this.options);\n        // Hook returned false\n        if (result === false) {\n            // Abort this Transition\n            return rejectFactory_1.Rejection.aborted(\"Hook aborted transition\").toPromise();\n        }\n        var isTargetState = hof_1.is(targetState_1.TargetState);\n        // hook returned a TargetState\n        if (isTargetState(result)) {\n            // Halt the current Transition and start a redirected Transition (to the TargetState).\n            return rejectFactory_1.Rejection.redirected(result).toPromise();\n        }\n    };\n    TransitionHook.prototype.toString = function () {\n        var _a = this, options = _a.options, eventHook = _a.eventHook;\n        var event = hof_1.parse(\"traceData.hookType\")(options) || \"internal\", context = hof_1.parse(\"traceData.context.state.name\")(options) || hof_1.parse(\"traceData.context\")(options) || \"unknown\", name = strings_1.fnToString(eventHook.callback);\n        return event + \" context: \" + context + \", \" + strings_1.maxLength(200, name);\n    };\n    /**\n     * Run all TransitionHooks, ignoring their return value.\n     */\n    TransitionHook.runAllHooks = function (hooks) {\n        hooks.forEach(function (hook) {\n            try {\n                hook.invokeHook();\n            }\n            catch (exception) {\n                var errorHandler = hook.transition.router.stateService.defaultErrorHandler();\n                errorHandler(exception);\n            }\n        });\n    };\n    /**\n     * Given an array of TransitionHooks, runs each one synchronously and sequentially.\n     * Should any hook return a Rejection synchronously, the remaining hooks will not run.\n     *\n     * Returns a promise chain composed of any promises returned from each hook.invokeStep() call\n     */\n    TransitionHook.runSynchronousHooks = function (hooks) {\n        var results = [];\n        for (var _i = 0, hooks_1 = hooks; _i < hooks_1.length; _i++) {\n            var hook = hooks_1[_i];\n            try {\n                var hookResult = hook.invokeHook();\n                if (rejectFactory_1.Rejection.isTransitionRejectionPromise(hookResult)) {\n                    // Break on first thrown error or false/TargetState\n                    return hookResult;\n                }\n                results.push(hookResult);\n            }\n            catch (exception) {\n                return rejectFactory_1.Rejection.errored(exception).toPromise();\n            }\n        }\n        return results\n            .filter(predicates_1.isPromise)\n            .reduce(function (chain, promise) { return chain.then(hof_1.val(promise)); }, coreservices_1.services.$q.when());\n    };\n    return TransitionHook;\n}());\nexports.TransitionHook = TransitionHook;\n//# sourceMappingURL=transitionHook.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/transition/transitionHook.js\n// module id = 13\n// module chunks = 0 1","/** @module state */ /** for typedoc */\n\"use strict\";\nvar common_1 = require(\"../common/common\");\n/**\n * Encapsulate the target (destination) state/params/options of a [[Transition]].\n *\n * This class is frequently used to redirect a transition to a new destination.\n *\n * See:\n *\n * - [[HookResult]]\n * - [[TransitionHookFn]]\n * - [[TransitionService.onStart]]\n *\n * To create a `TargetState`, use [[StateService.target]].\n *\n * ---\n *\n * This class wraps:\n *\n * 1) an identifier for a state\n * 2) a set of parameters\n * 3) and transition options\n * 4) the registered state object (the [[StateDeclaration]])\n *\n * Many UI-Router APIs such as [[StateService.go]] take a [[StateOrName]] argument which can\n * either be a *state object* (a [[StateDeclaration]] or [[State]]) or a *state name* (a string).\n * The `TargetState` class normalizes those options.\n *\n * A `TargetState` may be valid (the state being targeted exists in the registry)\n * or invalid (the state being targeted is not registered).\n */\nvar TargetState = (function () {\n    /**\n     * The TargetState constructor\n     *\n     * Note: Do not construct a `TargetState` manually.\n     * To create a `TargetState`, use the [[StateService.target]] factory method.\n     *\n     * @param _identifier An identifier for a state.\n     *    Either a fully-qualified state name, or the object used to define the state.\n     * @param _definition The internal state representation, if exists.\n     * @param _params Parameters for the target state\n     * @param _options Transition options.\n     */\n    function TargetState(_identifier, _definition, _params, _options) {\n        if (_params === void 0) { _params = {}; }\n        if (_options === void 0) { _options = {}; }\n        this._identifier = _identifier;\n        this._definition = _definition;\n        this._options = _options;\n        this._params = _params || {};\n    }\n    TargetState.prototype.name = function () {\n        return this._definition && this._definition.name || this._identifier;\n    };\n    TargetState.prototype.identifier = function () {\n        return this._identifier;\n    };\n    TargetState.prototype.params = function () {\n        return this._params;\n    };\n    TargetState.prototype.$state = function () {\n        return this._definition;\n    };\n    TargetState.prototype.state = function () {\n        return this._definition && this._definition.self;\n    };\n    TargetState.prototype.options = function () {\n        return this._options;\n    };\n    TargetState.prototype.exists = function () {\n        return !!(this._definition && this._definition.self);\n    };\n    TargetState.prototype.valid = function () {\n        return !this.error();\n    };\n    TargetState.prototype.error = function () {\n        var base = this.options().relative;\n        if (!this._definition && !!base) {\n            var stateName = base.name ? base.name : base;\n            return \"Could not resolve '\" + this.name() + \"' from state '\" + stateName + \"'\";\n        }\n        if (!this._definition)\n            return \"No such state '\" + this.name() + \"'\";\n        if (!this._definition.self)\n            return \"State '\" + this.name() + \"' has an invalid definition\";\n    };\n    TargetState.prototype.toString = function () {\n        return \"'\" + this.name() + \"'\" + common_1.toJson(this.params());\n    };\n    return TargetState;\n}());\nexports.TargetState = TargetState;\n//# sourceMappingURL=targetState.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/targetState.js\n// module id = 14\n// module chunks = 0 1","\"use strict\";\n/** @internal @module transition */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar glob_1 = require(\"../common/glob\");\n/**\n * Determines if the given state matches the matchCriteria\n *\n * @hidden\n *\n * @param state a State Object to test against\n * @param criterion\n * - If a string, matchState uses the string as a glob-matcher against the state name\n * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n *   and returns a positive match if any of the globs match.\n * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n * @returns {boolean}\n */\nfunction matchState(state, criterion) {\n    var toMatch = predicates_1.isString(criterion) ? [criterion] : criterion;\n    function matchGlobs(_state) {\n        var globStrings = toMatch;\n        for (var i = 0; i < globStrings.length; i++) {\n            var glob = glob_1.Glob.fromString(globStrings[i]);\n            if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    var matchFn = (predicates_1.isFunction(toMatch) ? toMatch : matchGlobs);\n    return !!matchFn(state);\n}\nexports.matchState = matchState;\n/** @hidden */\nvar EventHook = (function () {\n    function EventHook(matchCriteria, callback, options) {\n        if (options === void 0) { options = {}; }\n        this.callback = callback;\n        this.matchCriteria = common_1.extend({ to: true, from: true, exiting: true, retained: true, entering: true }, matchCriteria);\n        this.priority = options.priority || 0;\n        this.bind = options.bind || null;\n        this._deregistered = false;\n    }\n    EventHook._matchingNodes = function (nodes, criterion) {\n        if (criterion === true)\n            return nodes;\n        var matching = nodes.filter(function (node) { return matchState(node.state, criterion); });\n        return matching.length ? matching : null;\n    };\n    /**\n     * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n     *\n     * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n     * are the matching [[PathNode]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n     */\n    EventHook.prototype.matches = function (treeChanges) {\n        var mc = this.matchCriteria, _matchingNodes = EventHook._matchingNodes;\n        var matches = {\n            to: _matchingNodes([common_1.tail(treeChanges.to)], mc.to),\n            from: _matchingNodes([common_1.tail(treeChanges.from)], mc.from),\n            exiting: _matchingNodes(treeChanges.exiting, mc.exiting),\n            retained: _matchingNodes(treeChanges.retained, mc.retained),\n            entering: _matchingNodes(treeChanges.entering, mc.entering),\n        };\n        // Check if all the criteria matched the TreeChanges object\n        var allMatched = [\"to\", \"from\", \"exiting\", \"retained\", \"entering\"]\n            .map(function (prop) { return matches[prop]; })\n            .reduce(common_1.allTrueR, true);\n        return allMatched ? matches : null;\n    };\n    return EventHook;\n}());\nexports.EventHook = EventHook;\n/** @hidden Return a registration function of the requested type. */\nfunction makeHookRegistrationFn(hooks, name) {\n    return function (matchObject, callback, options) {\n        if (options === void 0) { options = {}; }\n        var eventHook = new EventHook(matchObject, callback, options);\n        hooks[name].push(eventHook);\n        return function deregisterEventHook() {\n            eventHook._deregistered = true;\n            common_1.removeFrom(hooks[name])(eventHook);\n        };\n    };\n}\n/**\n * Mixin class acts as a Transition Hook registry.\n *\n * Holds the registered [[HookFn]] objects.\n * Exposes functions to register new hooks.\n *\n * This is a Mixin class which can be applied to other objects.\n *\n * The hook registration functions are [[onBefore]], [[onStart]], [[onEnter]], [[onRetain]], [[onExit]], [[onFinish]], [[onSuccess]], [[onError]].\n *\n * This class is mixed into both the [[TransitionService]] and every [[Transition]] object.\n * Global hooks are added to the [[TransitionService]].\n * Since each [[Transition]] is itself a `HookRegistry`, hooks can also be added to individual Transitions\n * (note: the hook criteria still must match the Transition).\n */\nvar HookRegistry = (function () {\n    function HookRegistry() {\n        var _this = this;\n        this._transitionEvents = {\n            onBefore: [], onStart: [], onEnter: [], onRetain: [], onExit: [], onFinish: [], onSuccess: [], onError: []\n        };\n        this.getHooks = function (name) { return _this._transitionEvents[name]; };\n        /** @inheritdoc */\n        this.onBefore = makeHookRegistrationFn(this._transitionEvents, \"onBefore\");\n        /** @inheritdoc */\n        this.onStart = makeHookRegistrationFn(this._transitionEvents, \"onStart\");\n        /** @inheritdoc */\n        this.onEnter = makeHookRegistrationFn(this._transitionEvents, \"onEnter\");\n        /** @inheritdoc */\n        this.onRetain = makeHookRegistrationFn(this._transitionEvents, \"onRetain\");\n        /** @inheritdoc */\n        this.onExit = makeHookRegistrationFn(this._transitionEvents, \"onExit\");\n        /** @inheritdoc */\n        this.onFinish = makeHookRegistrationFn(this._transitionEvents, \"onFinish\");\n        /** @inheritdoc */\n        this.onSuccess = makeHookRegistrationFn(this._transitionEvents, \"onSuccess\");\n        /** @inheritdoc */\n        this.onError = makeHookRegistrationFn(this._transitionEvents, \"onError\");\n    }\n    HookRegistry.mixin = function (source, target) {\n        Object.keys(source._transitionEvents).concat([\"getHooks\"]).forEach(function (key) { return target[key] = source[key]; });\n    };\n    return HookRegistry;\n}());\nexports.HookRegistry = HookRegistry;\n//# sourceMappingURL=hookRegistry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/transition/hookRegistry.js\n// module id = 15\n// module chunks = 0 1","/** @internal @module transition */ /** for typedoc */\n\"use strict\";\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar transitionHook_1 = require(\"./transitionHook\");\nvar resolveContext_1 = require(\"../resolve/resolveContext\");\n/**\n * This class returns applicable TransitionHooks for a specific Transition instance.\n *\n * Hooks (IEventHook) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n * myTransition.onEnter(...).  The HookBuilder finds matching IEventHooks (where the match criteria is\n * determined by the type of hook)\n *\n * The HookBuilder also converts IEventHooks objects to TransitionHook objects, which are used to run a Transition.\n *\n * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n * in the Transition class, so we must also provide the Transition's _treeChanges)\n *\n */\nvar HookBuilder = (function () {\n    function HookBuilder($transitions, transition, baseHookOptions) {\n        var _this = this;\n        this.$transitions = $transitions;\n        this.transition = transition;\n        this.baseHookOptions = baseHookOptions;\n        this.getOnBeforeHooks = function () { return _this._buildNodeHooks(\"onBefore\", \"to\", tupleSort(), { async: false }); };\n        this.getOnStartHooks = function () { return _this._buildNodeHooks(\"onStart\", \"to\", tupleSort()); };\n        this.getOnExitHooks = function () { return _this._buildNodeHooks(\"onExit\", \"exiting\", tupleSort(true), { stateHook: true }); };\n        this.getOnRetainHooks = function () { return _this._buildNodeHooks(\"onRetain\", \"retained\", tupleSort(false), { stateHook: true }); };\n        this.getOnEnterHooks = function () { return _this._buildNodeHooks(\"onEnter\", \"entering\", tupleSort(false), { stateHook: true }); };\n        this.getOnFinishHooks = function () { return _this._buildNodeHooks(\"onFinish\", \"to\", tupleSort()); };\n        this.getOnSuccessHooks = function () { return _this._buildNodeHooks(\"onSuccess\", \"to\", tupleSort(), { async: false, rejectIfSuperseded: false }); };\n        this.getOnErrorHooks = function () { return _this._buildNodeHooks(\"onError\", \"to\", tupleSort(), { async: false, rejectIfSuperseded: false }); };\n        this.treeChanges = transition.treeChanges();\n        this.toState = common_1.tail(this.treeChanges.to).state;\n        this.fromState = common_1.tail(this.treeChanges.from).state;\n        this.transitionOptions = transition.options();\n    }\n    HookBuilder.prototype.asyncHooks = function () {\n        var onStartHooks = this.getOnStartHooks();\n        var onExitHooks = this.getOnExitHooks();\n        var onRetainHooks = this.getOnRetainHooks();\n        var onEnterHooks = this.getOnEnterHooks();\n        var onFinishHooks = this.getOnFinishHooks();\n        var asyncHooks = [onStartHooks, onExitHooks, onRetainHooks, onEnterHooks, onFinishHooks];\n        return asyncHooks.reduce(common_1.unnestR, []).filter(common_1.identity);\n    };\n    /**\n     * Returns an array of newly built TransitionHook objects.\n     *\n     * - Finds all IEventHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n     * - Finds [[PathNode]] (or `PathNode[]`) to use as the TransitionHook context(s)\n     * - For each of the [[PathNode]]s, creates a TransitionHook\n     *\n     * @param hookType the name of the hook registration function, e.g., 'onEnter', 'onFinish'.\n     * @param matchingNodesProp selects which [[PathNode]]s from the [[IMatchingNodes]] object to create hooks for.\n     * @param getLocals a function which accepts a [[PathNode]] and returns additional locals to provide to the hook as injectables\n     * @param sortHooksFn a function which compares two HookTuple and returns <1, 0, or >1\n     * @param options any specific Transition Hook Options\n     */\n    HookBuilder.prototype._buildNodeHooks = function (hookType, matchingNodesProp, sortHooksFn, options) {\n        var _this = this;\n        // Find all the matching registered hooks for a given hook type\n        var matchingHooks = this._matchingHooks(hookType, this.treeChanges);\n        if (!matchingHooks)\n            return [];\n        var makeTransitionHooks = function (hook) {\n            // Fetch the Nodes that caused this hook to match.\n            var matches = hook.matches(_this.treeChanges);\n            // Select the PathNode[] that will be used as TransitionHook context objects\n            var matchingNodes = matches[matchingNodesProp];\n            // When invoking 'exiting' hooks, give them the \"from path\" for resolve data.\n            // Everything else gets the \"to path\"\n            var resolvePath = matchingNodesProp === 'exiting' ? _this.treeChanges.from : _this.treeChanges.to;\n            var resolveContext = new resolveContext_1.ResolveContext(resolvePath);\n            // Return an array of HookTuples\n            return matchingNodes.map(function (node) {\n                var _options = common_1.extend({ bind: hook.bind, traceData: { hookType: hookType, context: node } }, _this.baseHookOptions, options);\n                var state = _options.stateHook ? node.state : null;\n                var transitionHook = new transitionHook_1.TransitionHook(_this.transition, state, hook, _options);\n                return { hook: hook, node: node, transitionHook: transitionHook };\n            });\n        };\n        return matchingHooks.map(makeTransitionHooks)\n            .reduce(common_1.unnestR, [])\n            .sort(sortHooksFn)\n            .map(function (tuple) { return tuple.transitionHook; });\n    };\n    /**\n     * Finds all IEventHooks from:\n     * - The Transition object instance hook registry\n     * - The TransitionService ($transitions) global hook registry\n     *\n     * which matched:\n     * - the eventType\n     * - the matchCriteria (to, from, exiting, retained, entering)\n     *\n     * @returns an array of matched [[IEventHook]]s\n     */\n    HookBuilder.prototype._matchingHooks = function (hookName, treeChanges) {\n        return [this.transition, this.$transitions] // Instance and Global hook registries\n            .map(function (reg) { return reg.getHooks(hookName); }) // Get named hooks from registries\n            .filter(common_1.assertPredicate(predicates_1.isArray, \"broken event named: \" + hookName)) // Sanity check\n            .reduce(common_1.unnestR, []) // Un-nest IEventHook[][] to IEventHook[] array\n            .filter(function (hook) { return hook.matches(treeChanges); }); // Only those satisfying matchCriteria\n    };\n    return HookBuilder;\n}());\nexports.HookBuilder = HookBuilder;\n/**\n * A factory for a sort function for HookTuples.\n *\n * The sort function first compares the PathNode depth (how deep in the state tree a node is), then compares\n * the EventHook priority.\n *\n * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n * @returns a tuple sort function\n */\nfunction tupleSort(reverseDepthSort) {\n    if (reverseDepthSort === void 0) { reverseDepthSort = false; }\n    return function nodeDepthThenPriority(l, r) {\n        var factor = reverseDepthSort ? -1 : 1;\n        var depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n        return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n    };\n}\n//# sourceMappingURL=hookBuilder.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/transition/hookBuilder.js\n// module id = 16\n// module chunks = 0 1","\"use strict\";\n/** @module resolve */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar trace_1 = require(\"../common/trace\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar interface_1 = require(\"./interface\");\nvar resolvable_1 = require(\"./resolvable\");\nvar pathFactory_1 = require(\"../path/pathFactory\");\nvar strings_1 = require(\"../common/strings\");\nvar when = interface_1.resolvePolicies.when;\nvar ALL_WHENS = [when.EAGER, when.LAZY];\nvar EAGER_WHENS = [when.EAGER];\nexports.NATIVE_INJECTOR_TOKEN = \"Native Injector\";\n/**\n * Encapsulates Depenency Injection for a path of nodes\n *\n * UI-Router states are organized as a tree.\n * A nested state has a path of ancestors to the root of the tree.\n * When a state is being activated, each element in the path is wrapped as a [[PathNode]].\n * A `PathNode` is a stateful object that holds things like parameters and resolvables for the state being activated.\n *\n * The ResolveContext closes over the [[PathNode]]s, and provides DI for the last node in the path.\n */\nvar ResolveContext = (function () {\n    function ResolveContext(_path) {\n        this._path = _path;\n    }\n    /** Gets all the tokens found in the resolve context, de-duplicated */\n    ResolveContext.prototype.getTokens = function () {\n        return this._path.reduce(function (acc, node) { return acc.concat(node.resolvables.map(function (r) { return r.token; })); }, []).reduce(common_1.uniqR, []);\n    };\n    /**\n     * Gets the Resolvable that matches the token\n     *\n     * Gets the last Resolvable that matches the token in this context, or undefined.\n     * Throws an error if it doesn't exist in the ResolveContext\n     */\n    ResolveContext.prototype.getResolvable = function (token) {\n        var matching = this._path.map(function (node) { return node.resolvables; })\n            .reduce(common_1.unnestR, [])\n            .filter(function (r) { return r.token === token; });\n        return common_1.tail(matching);\n    };\n    /**\n     * Returns a ResolveContext that includes a portion of this one\n     *\n     * Given a state, this method creates a new ResolveContext from this one.\n     * The new context starts at the first node (root) and stops at the node for the `state` parameter.\n     *\n     * #### Why\n     *\n     * When a transition is created, the nodes in the \"To Path\" are injected from a ResolveContext.\n     * A ResolveContext closes over a path of [[PathNode]]s and processes the resolvables.\n     * The \"To State\" can inject values from its own resolvables, as well as those from all its ancestor state's (node's).\n     * This method is used to create a narrower context when injecting ancestor nodes.\n     *\n     * @example\n     * `let ABCD = new ResolveContext([A, B, C, D]);`\n     *\n     * Given a path `[A, B, C, D]`, where `A`, `B`, `C` and `D` are nodes for states `a`, `b`, `c`, `d`:\n     * When injecting `D`, `D` should have access to all resolvables from `A`, `B`, `C`, `D`.\n     * However, `B` should only be able to access resolvables from `A`, `B`.\n     *\n     * When resolving for the `B` node, first take the full \"To Path\" Context `[A,B,C,D]` and limit to the subpath `[A,B]`.\n     * `let AB = ABCD.subcontext(a)`\n     */\n    ResolveContext.prototype.subContext = function (state) {\n        return new ResolveContext(pathFactory_1.PathFactory.subPath(this._path, function (node) { return node.state === state; }));\n    };\n    /**\n     * Adds Resolvables to the node that matches the state\n     *\n     * This adds a [[Resolvable]] (generally one created on the fly; not declared on a [[StateDeclaration.resolve]] block).\n     * The resolvable is added to the node matching the `state` parameter.\n     *\n     * These new resolvables are not automatically fetched.\n     * The calling code should either fetch them, fetch something that depends on them,\n     * or rely on [[resolvePath]] being called when some state is being entered.\n     *\n     * Note: each resolvable's [[ResolvePolicy]] is merged with the state's policy, and the global default.\n     *\n     * @param newResolvables the new Resolvables\n     * @param state Used to find the node to put the resolvable on\n     */\n    ResolveContext.prototype.addResolvables = function (newResolvables, state) {\n        var node = common_1.find(this._path, hof_1.propEq('state', state));\n        var keys = newResolvables.map(function (r) { return r.token; });\n        node.resolvables = node.resolvables.filter(function (r) { return keys.indexOf(r.token) === -1; }).concat(newResolvables);\n    };\n    /**\n     * Returns a promise for an array of resolved path Element promises\n     *\n     * @param when\n     * @param trans\n     * @returns {Promise<any>|any}\n     */\n    ResolveContext.prototype.resolvePath = function (when, trans) {\n        var _this = this;\n        if (when === void 0) { when = \"LAZY\"; }\n        // This option determines which 'when' policy Resolvables we are about to fetch.\n        var whenOption = common_1.inArray(ALL_WHENS, when) ? when : \"LAZY\";\n        // If the caller specified EAGER, only the EAGER Resolvables are fetched.\n        // if the caller specified LAZY, both EAGER and LAZY Resolvables are fetched.`\n        var matchedWhens = whenOption === interface_1.resolvePolicies.when.EAGER ? EAGER_WHENS : ALL_WHENS;\n        // get the subpath to the state argument, if provided\n        trace_1.trace.traceResolvePath(this._path, when, trans);\n        var promises = this._path.reduce(function (acc, node) {\n            var matchesRequestedPolicy = function (resolvable) {\n                return common_1.inArray(matchedWhens, resolvable.getPolicy(node.state).when);\n            };\n            var nodeResolvables = node.resolvables.filter(matchesRequestedPolicy);\n            var subContext = _this.subContext(node.state);\n            // For the matching Resolvables, start their async fetch process.\n            var getResult = function (r) { return r.get(subContext, trans)\n                .then(function (value) { return ({ token: r.token, value: value }); }); };\n            return acc.concat(nodeResolvables.map(getResult));\n        }, []);\n        return coreservices_1.services.$q.all(promises);\n    };\n    ResolveContext.prototype.injector = function () {\n        return this._injector || (this._injector = new UIInjectorImpl(this));\n    };\n    ResolveContext.prototype.findNode = function (resolvable) {\n        return common_1.find(this._path, function (node) { return common_1.inArray(node.resolvables, resolvable); });\n    };\n    /**\n     * Gets the async dependencies of a Resolvable\n     *\n     * Given a Resolvable, returns its dependencies as a Resolvable[]\n     */\n    ResolveContext.prototype.getDependencies = function (resolvable) {\n        var _this = this;\n        var node = this.findNode(resolvable);\n        // Find which other resolvables are \"visible\" to the `resolvable` argument\n        // subpath stopping at resolvable's node, or the whole path (if the resolvable isn't in the path)\n        var subPath = pathFactory_1.PathFactory.subPath(this._path, function (x) { return x === node; }) || this._path;\n        var availableResolvables = subPath\n            .reduce(function (acc, node) { return acc.concat(node.resolvables); }, []) //all of subpath's resolvables\n            .filter(function (res) { return res !== resolvable; }); // filter out the `resolvable` argument\n        var getDependency = function (token) {\n            var matching = availableResolvables.filter(function (r) { return r.token === token; });\n            if (matching.length)\n                return common_1.tail(matching);\n            var fromInjector = _this.injector().getNative(token);\n            if (!fromInjector) {\n                throw new Error(\"Could not find Dependency Injection token: \" + strings_1.stringify(token));\n            }\n            return new resolvable_1.Resolvable(token, function () { return fromInjector; }, [], fromInjector);\n        };\n        return resolvable.deps.map(getDependency);\n    };\n    return ResolveContext;\n}());\nexports.ResolveContext = ResolveContext;\nvar UIInjectorImpl = (function () {\n    function UIInjectorImpl(context) {\n        this.context = context;\n        this.native = this.get(exports.NATIVE_INJECTOR_TOKEN) || coreservices_1.services.$injector;\n    }\n    UIInjectorImpl.prototype.get = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable) {\n            if (!resolvable.resolved) {\n                throw new Error(\"Resolvable async .get() not complete:\" + strings_1.stringify(resolvable.token));\n            }\n            return resolvable.data;\n        }\n        return this.native && this.native.get(token);\n    };\n    UIInjectorImpl.prototype.getAsync = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable)\n            return resolvable.get(this.context);\n        return coreservices_1.services.$q.when(this.native.get(token));\n    };\n    UIInjectorImpl.prototype.getNative = function (token) {\n        return this.native.get(token);\n    };\n    return UIInjectorImpl;\n}());\n//# sourceMappingURL=resolveContext.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/resolve/resolveContext.js\n// module id = 17\n// module chunks = 0 1","\"use strict\";\n/** @internalapi */\nexports.resolvePolicies = {\n    when: {\n        LAZY: \"LAZY\",\n        EAGER: \"EAGER\"\n    },\n    async: {\n        WAIT: \"WAIT\",\n        NOWAIT: \"NOWAIT\",\n        RXWAIT: \"RXWAIT\"\n    }\n};\n//# sourceMappingURL=interface.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/resolve/interface.js\n// module id = 18\n// module chunks = 0 1","\"use strict\";\n/** @module resolve */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar trace_1 = require(\"../common/trace\");\nvar strings_1 = require(\"../common/strings\");\nvar predicates_1 = require(\"../common/predicates\");\n// TODO: explicitly make this user configurable\nexports.defaultResolvePolicy = {\n    when: \"LAZY\",\n    async: \"WAIT\"\n};\n/**\n * The basic building block for the resolve system.\n *\n * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n * and the unwrapped-when-complete (.data) result of the resolveFn.\n *\n * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n * resolveFn) and returns the resulting promise.\n *\n * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n * parameter to those fns.\n */\nvar Resolvable = (function () {\n    function Resolvable(arg1, resolveFn, deps, policy, data) {\n        this.resolved = false;\n        this.promise = undefined;\n        if (arg1 instanceof Resolvable) {\n            common_1.extend(this, arg1);\n        }\n        else if (predicates_1.isFunction(resolveFn)) {\n            if (arg1 == null || arg1 == undefined)\n                throw new Error(\"new Resolvable(): token argument is required\");\n            if (!predicates_1.isFunction(resolveFn))\n                throw new Error(\"new Resolvable(): resolveFn argument must be a function\");\n            this.token = arg1;\n            this.policy = policy;\n            this.resolveFn = resolveFn;\n            this.deps = deps || [];\n            this.data = data;\n            this.resolved = data !== undefined;\n            this.promise = this.resolved ? coreservices_1.services.$q.when(this.data) : undefined;\n        }\n        else if (predicates_1.isObject(arg1) && arg1.token && predicates_1.isFunction(arg1.resolveFn)) {\n            var literal = arg1;\n            return new Resolvable(literal.token, literal.resolveFn, literal.deps, literal.policy, literal.data);\n        }\n    }\n    Resolvable.prototype.getPolicy = function (state) {\n        var thisPolicy = this.policy || {};\n        var statePolicy = state && state.resolvePolicy || {};\n        return {\n            when: thisPolicy.when || statePolicy.when || exports.defaultResolvePolicy.when,\n            async: thisPolicy.async || statePolicy.async || exports.defaultResolvePolicy.async,\n        };\n    };\n    /**\n     * Asynchronously resolve this Resolvable's data\n     *\n     * Given a ResolveContext that this Resolvable is found in:\n     * Wait for this Resolvable's dependencies, then invoke this Resolvable's function\n     * and update the Resolvable's state\n     */\n    Resolvable.prototype.resolve = function (resolveContext, trans) {\n        var _this = this;\n        var $q = coreservices_1.services.$q;\n        // Gets all dependencies from ResolveContext and wait for them to be resolved\n        var getResolvableDependencies = function () {\n            return $q.all(resolveContext.getDependencies(_this).map(function (r) {\n                return r.get(resolveContext, trans);\n            }));\n        };\n        // Invokes the resolve function passing the resolved dependencies as arguments\n        var invokeResolveFn = function (resolvedDeps) {\n            return _this.resolveFn.apply(null, resolvedDeps);\n        };\n        /**\n         * For RXWAIT policy:\n         *\n         * Given an observable returned from a resolve function:\n         * - enables .cache() mode (this allows multicast subscribers)\n         * - then calls toPromise() (this triggers subscribe() and thus fetches)\n         * - Waits for the promise, then return the cached observable (not the first emitted value).\n         */\n        var waitForRx = function (observable$) {\n            var cached = observable$.cache(1);\n            return cached.take(1).toPromise().then(function () { return cached; });\n        };\n        // If the resolve policy is RXWAIT, wait for the observable to emit something. otherwise pass through.\n        var node = resolveContext.findNode(this);\n        var state = node && node.state;\n        var maybeWaitForRx = this.getPolicy(state).async === \"RXWAIT\" ? waitForRx : common_1.identity;\n        // After the final value has been resolved, update the state of the Resolvable\n        var applyResolvedValue = function (resolvedValue) {\n            _this.data = resolvedValue;\n            _this.resolved = true;\n            trace_1.trace.traceResolvableResolved(_this, trans);\n            return _this.data;\n        };\n        // Sets the promise property first, then getsResolvableDependencies in the context of the promise chain. Always waits one tick.\n        return this.promise = $q.when()\n            .then(getResolvableDependencies)\n            .then(invokeResolveFn)\n            .then(maybeWaitForRx)\n            .then(applyResolvedValue);\n    };\n    /**\n     * Gets a promise for this Resolvable's data.\n     *\n     * Fetches the data and returns a promise.\n     * Returns the existing promise if it has already been fetched once.\n     */\n    Resolvable.prototype.get = function (resolveContext, trans) {\n        return this.promise || this.resolve(resolveContext, trans);\n    };\n    Resolvable.prototype.toString = function () {\n        return \"Resolvable(token: \" + strings_1.stringify(this.token) + \", requires: [\" + this.deps.map(strings_1.stringify) + \"])\";\n    };\n    Resolvable.prototype.clone = function () {\n        return new Resolvable(this);\n    };\n    Resolvable.fromData = function (token, data) {\n        return new Resolvable(token, function () { return data; }, null, null, data);\n    };\n    return Resolvable;\n}());\nexports.Resolvable = Resolvable;\n//# sourceMappingURL=resolvable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/resolve/resolvable.js\n// module id = 19\n// module chunks = 0 1","/** @module path */ /** for typedoc */\n\"use strict\";\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar targetState_1 = require(\"../state/targetState\");\nvar node_1 = require(\"../path/node\");\n/**\n * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n */\nvar PathFactory = (function () {\n    function PathFactory() {\n    }\n    /** Given a PathNode[], create an TargetState */\n    PathFactory.makeTargetState = function (path) {\n        var state = common_1.tail(path).state;\n        return new targetState_1.TargetState(state, state, path.map(hof_1.prop(\"paramValues\")).reduce(common_1.mergeR, {}));\n    };\n    PathFactory.buildPath = function (targetState) {\n        var toParams = targetState.params();\n        return targetState.$state().path.map(function (state) { return new node_1.PathNode(state).applyRawParams(toParams); });\n    };\n    /** Given a fromPath: PathNode[] and a TargetState, builds a toPath: PathNode[] */\n    PathFactory.buildToPath = function (fromPath, targetState) {\n        var toPath = PathFactory.buildPath(targetState);\n        if (targetState.options().inherit) {\n            return PathFactory.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n        }\n        return toPath;\n    };\n    /**\n     * Creates ViewConfig objects and adds to nodes.\n     *\n     * On each [[PathNode]], creates ViewConfig objects from the views: property of the node's state\n     */\n    PathFactory.applyViewConfigs = function ($view, path, states) {\n        // Only apply the viewConfigs to the nodes for the given states\n        path.filter(function (node) { return common_1.inArray(states, node.state); }).forEach(function (node) {\n            var viewDecls = common_1.values(node.state.views || {});\n            var subPath = PathFactory.subPath(path, function (n) { return n === node; });\n            var viewConfigs = viewDecls.map(function (view) { return $view.createViewConfig(subPath, view); });\n            node.views = viewConfigs.reduce(common_1.unnestR, []);\n        });\n    };\n    /**\n     * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n     *\n     * For a parameter in a node to be inherited from the from path:\n     * - The toPath's node must have a matching node in the fromPath (by state).\n     * - The parameter name must not be found in the toKeys parameter array.\n     *\n     * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n     * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n     * it is not inherited from the fromPath.\n     */\n    PathFactory.inheritParams = function (fromPath, toPath, toKeys) {\n        if (toKeys === void 0) { toKeys = []; }\n        function nodeParamVals(path, state) {\n            var node = common_1.find(path, hof_1.propEq('state', state));\n            return common_1.extend({}, node && node.paramValues);\n        }\n        /**\n         * Given an [[PathNode]] \"toNode\", return a new [[PathNode]] with param values inherited from the\n         * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n         */\n        function makeInheritedParamsNode(toNode) {\n            // All param values for the node (may include default key/vals, when key was not found in toParams)\n            var toParamVals = common_1.extend({}, toNode && toNode.paramValues);\n            // limited to only those keys found in toParams\n            var incomingParamVals = common_1.pick(toParamVals, toKeys);\n            toParamVals = common_1.omit(toParamVals, toKeys);\n            var fromParamVals = nodeParamVals(fromPath, toNode.state) || {};\n            // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n            var ownParamVals = common_1.extend(toParamVals, fromParamVals, incomingParamVals);\n            return new node_1.PathNode(toNode.state).applyRawParams(ownParamVals);\n        }\n        // The param keys specified by the incoming toParams\n        return toPath.map(makeInheritedParamsNode);\n    };\n    /**\n     * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n     */\n    PathFactory.treeChanges = function (fromPath, toPath, reloadState) {\n        var keep = 0, max = Math.min(fromPath.length, toPath.length);\n        var staticParams = function (state) {\n            return state.parameters({ inherit: false }).filter(hof_1.not(hof_1.prop('dynamic'))).map(hof_1.prop('id'));\n        };\n        var nodesMatch = function (node1, node2) {\n            return node1.equals(node2, staticParams(node1.state));\n        };\n        while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n            keep++;\n        }\n        /** Given a retained node, return a new node which uses the to node's param values */\n        function applyToParams(retainedNode, idx) {\n            var cloned = node_1.PathNode.clone(retainedNode);\n            cloned.paramValues = toPath[idx].paramValues;\n            return cloned;\n        }\n        var from, retained, exiting, entering, to;\n        from = fromPath;\n        retained = from.slice(0, keep);\n        exiting = from.slice(keep);\n        // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n        var retainedWithToParams = retained.map(applyToParams);\n        entering = toPath.slice(keep);\n        to = (retainedWithToParams).concat(entering);\n        return { from: from, to: to, retained: retained, exiting: exiting, entering: entering };\n    };\n    /**\n     * Return a subpath of a path, which stops at the first matching node\n     *\n     * Given an array of nodes, returns a subset of the array starting from the first node,\n     * stopping when the first node matches the predicate.\n     *\n     * @param path a path of [[PathNode]]s\n     * @param predicate a [[Predicate]] fn that matches [[PathNode]]s\n     * @returns a subpath up to the matching node, or undefined if no match is found\n     */\n    PathFactory.subPath = function (path, predicate) {\n        var node = common_1.find(path, predicate);\n        var elementIdx = path.indexOf(node);\n        return elementIdx === -1 ? undefined : path.slice(0, elementIdx + 1);\n    };\n    /** Gets the raw parameter values from a path */\n    PathFactory.paramValues = function (path) { return path.reduce(function (acc, node) { return common_1.extend(acc, node.paramValues); }, {}); };\n    return PathFactory;\n}());\nexports.PathFactory = PathFactory;\n//# sourceMappingURL=pathFactory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/path/pathFactory.js\n// module id = 20\n// module chunks = 0 1","\"use strict\";\n/** @module path */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar param_1 = require(\"../params/param\");\n/**\n * A node in a [[TreeChanges]] path\n *\n * For a [[TreeChanges]] path, this class holds the stateful information for a single node in the path.\n * Each PathNode corresponds to a state being entered, exited, or retained.\n * The stateful information includes parameter values and resolve data.\n */\nvar PathNode = (function () {\n    function PathNode(stateOrPath) {\n        if (stateOrPath instanceof PathNode) {\n            var node = stateOrPath;\n            this.state = node.state;\n            this.paramSchema = node.paramSchema.slice();\n            this.paramValues = common_1.extend({}, node.paramValues);\n            this.resolvables = node.resolvables.slice();\n            this.views = node.views && node.views.slice();\n        }\n        else {\n            var state = stateOrPath;\n            this.state = state;\n            this.paramSchema = state.parameters({ inherit: false });\n            this.paramValues = {};\n            this.resolvables = state.resolvables.map(function (res) { return res.clone(); });\n        }\n    }\n    /** Sets [[paramValues]] for the node, from the values of an object hash */\n    PathNode.prototype.applyRawParams = function (params) {\n        var getParamVal = function (paramDef) { return [paramDef.id, paramDef.value(params[paramDef.id])]; };\n        this.paramValues = this.paramSchema.reduce(function (memo, pDef) { return common_1.applyPairs(memo, getParamVal(pDef)); }, {});\n        return this;\n    };\n    /** Gets a specific [[Param]] metadata that belongs to the node */\n    PathNode.prototype.parameter = function (name) {\n        return common_1.find(this.paramSchema, hof_1.propEq(\"id\", name));\n    };\n    /**\n     * @returns true if the state and parameter values for another PathNode are\n     * equal to the state and param values for this PathNode\n     */\n    PathNode.prototype.equals = function (node, keys) {\n        var _this = this;\n        if (keys === void 0) { keys = this.paramSchema.map(function (p) { return p.id; }); }\n        var paramValsEq = function (key) {\n            return _this.parameter(key).type.equals(_this.paramValues[key], node.paramValues[key]);\n        };\n        return this.state === node.state && keys.map(paramValsEq).reduce(common_1.allTrueR, true);\n    };\n    /** Returns a clone of the PathNode */\n    PathNode.clone = function (node) {\n        return new PathNode(node);\n    };\n    /**\n     * Returns a new path which is a subpath of the first path which matched the second path.\n     *\n     * The new path starts from root and contains any nodes that match the nodes in the second path.\n     * Nodes are compared using their state property and parameter values.\n     *\n     * @param pathA the first path\n     * @param pathB the second path\n     * @param ignoreDynamicParams don't compare dynamic parameter values\n     */\n    PathNode.matching = function (pathA, pathB, ignoreDynamicParams) {\n        if (ignoreDynamicParams === void 0) { ignoreDynamicParams = true; }\n        var matching = [];\n        for (var i = 0; i < pathA.length && i < pathB.length; i++) {\n            var a = pathA[i], b = pathB[i];\n            if (a.state !== b.state)\n                break;\n            var changedParams = param_1.Param.changed(a.paramSchema, a.paramValues, b.paramValues)\n                .filter(function (param) { return !(ignoreDynamicParams && param.dynamic); });\n            if (changedParams.length)\n                break;\n            matching.push(a);\n        }\n        return matching;\n    };\n    return PathNode;\n}());\nexports.PathNode = PathNode;\n//# sourceMappingURL=node.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/path/node.js\n// module id = 21\n// module chunks = 0 1","\"use strict\";\n/** @module params */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar predicates_1 = require(\"../common/predicates\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar urlMatcherConfig_1 = require(\"../url/urlMatcherConfig\");\nvar type_1 = require(\"./type\");\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar isShorthand = function (cfg) {\n    return [\"value\", \"type\", \"squash\", \"array\", \"dynamic\"].filter(hasOwn.bind(cfg || {})).length === 0;\n};\n(function (DefType) {\n    DefType[DefType[\"PATH\"] = 0] = \"PATH\";\n    DefType[DefType[\"SEARCH\"] = 1] = \"SEARCH\";\n    DefType[DefType[\"CONFIG\"] = 2] = \"CONFIG\";\n})(exports.DefType || (exports.DefType = {}));\nvar DefType = exports.DefType;\nfunction unwrapShorthand(cfg) {\n    cfg = isShorthand(cfg) && { value: cfg } || cfg;\n    return common_1.extend(cfg, {\n        $$fn: predicates_1.isInjectable(cfg.value) ? cfg.value : function () { return cfg.value; }\n    });\n}\nfunction getType(cfg, urlType, location, id, paramTypes) {\n    if (cfg.type && urlType && urlType.name !== 'string')\n        throw new Error(\"Param '\" + id + \"' has two type configurations.\");\n    if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type))\n        return paramTypes.type(cfg.type);\n    if (urlType)\n        return urlType;\n    if (!cfg.type)\n        return (location === DefType.CONFIG ? paramTypes.type(\"any\") : paramTypes.type(\"string\"));\n    return cfg.type instanceof type_1.ParamType ? cfg.type : paramTypes.type(cfg.type);\n}\n/**\n * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n */\nfunction getSquashPolicy(config, isOptional) {\n    var squash = config.squash;\n    if (!isOptional || squash === false)\n        return false;\n    if (!predicates_1.isDefined(squash) || squash == null)\n        return urlMatcherConfig_1.matcherConfig.defaultSquashPolicy();\n    if (squash === true || predicates_1.isString(squash))\n        return squash;\n    throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n}\nfunction getReplace(config, arrayMode, isOptional, squash) {\n    var replace, configuredKeys, defaultPolicy = [\n        { from: \"\", to: (isOptional || arrayMode ? undefined : \"\") },\n        { from: null, to: (isOptional || arrayMode ? undefined : \"\") }\n    ];\n    replace = predicates_1.isArray(config.replace) ? config.replace : [];\n    if (predicates_1.isString(squash))\n        replace.push({ from: squash, to: undefined });\n    configuredKeys = common_1.map(replace, hof_1.prop(\"from\"));\n    return common_1.filter(defaultPolicy, function (item) { return configuredKeys.indexOf(item.from) === -1; }).concat(replace);\n}\nvar Param = (function () {\n    function Param(id, type, config, location, paramTypes) {\n        config = unwrapShorthand(config);\n        type = getType(config, type, location, id, paramTypes);\n        var arrayMode = getArrayMode();\n        type = arrayMode ? type.$asArray(arrayMode, location === DefType.SEARCH) : type;\n        var isOptional = config.value !== undefined;\n        var dynamic = predicates_1.isDefined(config.dynamic) ? !!config.dynamic : !!type.dynamic;\n        var squash = getSquashPolicy(config, isOptional);\n        var replace = getReplace(config, arrayMode, isOptional, squash);\n        // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n        function getArrayMode() {\n            var arrayDefaults = { array: (location === DefType.SEARCH ? \"auto\" : false) };\n            var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n            return common_1.extend(arrayDefaults, arrayParamNomenclature, config).array;\n        }\n        common_1.extend(this, { id: id, type: type, location: location, squash: squash, replace: replace, isOptional: isOptional, dynamic: dynamic, config: config, array: arrayMode });\n    }\n    Param.prototype.isDefaultValue = function (value) {\n        return this.isOptional && this.type.equals(this.value(), value);\n    };\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    Param.prototype.value = function (value) {\n        var _this = this;\n        /**\n         * [Internal] Get the default value of a parameter, which may be an injectable function.\n         */\n        var $$getDefaultValue = function () {\n            if (!coreservices_1.services.$injector)\n                throw new Error(\"Injectable functions cannot be called at configuration time\");\n            var defaultValue = coreservices_1.services.$injector.invoke(_this.config.$$fn);\n            if (defaultValue !== null && defaultValue !== undefined && !_this.type.is(defaultValue))\n                throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + _this.id + \"' is not an instance of ParamType (\" + _this.type.name + \")\");\n            return defaultValue;\n        };\n        var $replace = function (val) {\n            var replacement = common_1.map(common_1.filter(_this.replace, hof_1.propEq('from', val)), hof_1.prop(\"to\"));\n            return replacement.length ? replacement[0] : val;\n        };\n        value = $replace(value);\n        return !predicates_1.isDefined(value) ? $$getDefaultValue() : this.type.$normalize(value);\n    };\n    Param.prototype.isSearch = function () {\n        return this.location === DefType.SEARCH;\n    };\n    Param.prototype.validates = function (value) {\n        // There was no parameter value, but the param is optional\n        if ((!predicates_1.isDefined(value) || value === null) && this.isOptional)\n            return true;\n        // The value was not of the correct ParamType, and could not be decoded to the correct ParamType\n        var normalized = this.type.$normalize(value);\n        if (!this.type.is(normalized))\n            return false;\n        // The value was of the correct type, but when encoded, did not match the ParamType's regexp\n        var encoded = this.type.encode(normalized);\n        return !(predicates_1.isString(encoded) && !this.type.pattern.exec(encoded));\n    };\n    Param.prototype.toString = function () {\n        return \"{Param:\" + this.id + \" \" + this.type + \" squash: '\" + this.squash + \"' optional: \" + this.isOptional + \"}\";\n    };\n    /** Creates a new [[Param]] from a CONFIG block */\n    Param.fromConfig = function (id, type, config, paramTypes) {\n        return new Param(id, type, config, DefType.CONFIG, paramTypes);\n    };\n    /** Creates a new [[Param]] from a url PATH */\n    Param.fromPath = function (id, type, config, paramTypes) {\n        return new Param(id, type, config, DefType.PATH, paramTypes);\n    };\n    /** Creates a new [[Param]] from a url SEARCH */\n    Param.fromSearch = function (id, type, config, paramTypes) {\n        return new Param(id, type, config, DefType.SEARCH, paramTypes);\n    };\n    Param.values = function (params, values) {\n        if (values === void 0) { values = {}; }\n        return params.map(function (param) { return [param.id, param.value(values[param.id])]; }).reduce(common_1.applyPairs, {});\n    };\n    /**\n     * Finds [[Param]] objects which have different param values\n     *\n     * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n     *\n     * @param params: The list of Param objects to filter\n     * @param values1: The first set of parameter values\n     * @param values2: the second set of parameter values\n     *\n     * @returns any Param objects whose values were different between values1 and values2\n     */\n    Param.changed = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return params.filter(function (param) { return !param.type.equals(values1[param.id], values2[param.id]); });\n    };\n    /**\n     * Checks if two param value objects are equal (for a set of [[Param]] objects)\n     *\n     * @param params The list of [[Param]] objects to check\n     * @param values1 The first set of param values\n     * @param values2 The second set of param values\n     *\n     * @returns true if the param values in values1 and values2 are equal\n     */\n    Param.equals = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return Param.changed(params, values1, values2).length === 0;\n    };\n    /** Returns true if a the parameter values are valid, according to the Param definitions */\n    Param.validates = function (params, values) {\n        if (values === void 0) { values = {}; }\n        return params.map(function (param) { return param.validates(values[param.id]); }).reduce(common_1.allTrueR, true);\n    };\n    return Param;\n}());\nexports.Param = Param;\n//# sourceMappingURL=param.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/params/param.js\n// module id = 22\n// module chunks = 0 1","\"use strict\";\n/** @module url */ /** for typedoc */\nvar predicates_1 = require(\"../common/predicates\");\nvar MatcherConfig = (function () {\n    function MatcherConfig() {\n        this._isCaseInsensitive = false;\n        this._isStrictMode = true;\n        this._defaultSquashPolicy = false;\n    }\n    MatcherConfig.prototype.caseInsensitive = function (value) {\n        return this._isCaseInsensitive = predicates_1.isDefined(value) ? value : this._isCaseInsensitive;\n    };\n    MatcherConfig.prototype.strictMode = function (value) {\n        return this._isStrictMode = predicates_1.isDefined(value) ? value : this._isStrictMode;\n    };\n    MatcherConfig.prototype.defaultSquashPolicy = function (value) {\n        if (predicates_1.isDefined(value) && value !== true && value !== false && !predicates_1.isString(value))\n            throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n        return this._defaultSquashPolicy = predicates_1.isDefined(value) ? value : this._defaultSquashPolicy;\n    };\n    return MatcherConfig;\n}());\nexports.MatcherConfig = MatcherConfig;\n// TODO: Do not export global instance; create one in UIRouter() constructor\nexports.matcherConfig = new MatcherConfig();\n//# sourceMappingURL=urlMatcherConfig.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/url/urlMatcherConfig.js\n// module id = 23\n// module chunks = 0 1","\"use strict\";\n/** @module params */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\n/**\n * Wraps up a `ParamType` object to handle array values.\n */\nfunction ArrayType(type, mode) {\n    var _this = this;\n    // Wrap non-array value as array\n    function arrayWrap(val) {\n        return predicates_1.isArray(val) ? val : (predicates_1.isDefined(val) ? [val] : []);\n    }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n        switch (val.length) {\n            case 0: return undefined;\n            case 1: return mode === \"auto\" ? val[0] : val;\n            default: return val;\n        }\n    }\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n        return function handleArray(val) {\n            if (predicates_1.isArray(val) && val.length === 0)\n                return val;\n            var arr = arrayWrap(val);\n            var result = common_1.map(arr, callback);\n            return (allTruthyMode === true) ? common_1.filter(result, function (x) { return !x; }).length === 0 : arrayUnwrap(result);\n        };\n    }\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n        return function handleArray(val1, val2) {\n            var left = arrayWrap(val1), right = arrayWrap(val2);\n            if (left.length !== right.length)\n                return false;\n            for (var i = 0; i < left.length; i++) {\n                if (!callback(left[i], right[i]))\n                    return false;\n            }\n            return true;\n        };\n    }\n    ['encode', 'decode', 'equals', '$normalize'].forEach(function (name) {\n        var paramTypeFn = type[name].bind(type);\n        var wrapperFn = name === 'equals' ? arrayEqualsHandler : arrayHandler;\n        _this[name] = wrapperFn(paramTypeFn);\n    });\n    common_1.extend(this, {\n        dynamic: type.dynamic,\n        name: type.name,\n        pattern: type.pattern,\n        is: arrayHandler(type.is.bind(type), true),\n        $arrayMode: mode\n    });\n}\n/**\n * A class that implements Custom Parameter Type functionality.\n *\n * This class has naive implementations for all the [[ParamTypeDefinition]] methods.\n *\n * An instance of this class is created when a custom [[ParamTypeDefinition]] object is registered with the [[UrlMatcherFactory.type]].\n *\n * Used by [[UrlMatcher]] when matching or formatting URLs, or comparing and validating parameter values.\n *\n * @example\n * ```\n *\n * {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n * ```\n */\nvar ParamType = (function () {\n    /**\n     * @param def  A configuration object which contains the custom type definition.  The object's\n     *        properties will override the default methods and/or pattern in `ParamType`'s public interface.\n     * @returns a new ParamType object\n     */\n    function ParamType(def) {\n        this.pattern = /.*/;\n        common_1.extend(this, def);\n    }\n    // consider these four methods to be \"abstract methods\" that should be overridden\n    /** @inheritdoc */\n    ParamType.prototype.is = function (val, key) { return true; };\n    /** @inheritdoc */\n    ParamType.prototype.encode = function (val, key) { return val; };\n    /** @inheritdoc */\n    ParamType.prototype.decode = function (val, key) { return val; };\n    /** @inheritdoc */\n    ParamType.prototype.equals = function (a, b) { return a == b; };\n    ParamType.prototype.$subPattern = function () {\n        var sub = this.pattern.toString();\n        return sub.substr(1, sub.length - 2);\n    };\n    ParamType.prototype.toString = function () {\n        return \"{ParamType:\" + this.name + \"}\";\n    };\n    /** Given an encoded string, or a decoded object, returns a decoded object */\n    ParamType.prototype.$normalize = function (val) {\n        return this.is(val) ? val : this.decode(val);\n    };\n    /**\n     * Wraps an existing custom ParamType as an array of ParamType, depending on 'mode'.\n     * e.g.:\n     * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n     * - url: \"/path?queryParam=1&queryParam=2\n     * - $stateParams.queryParam will be [1, 2]\n     * if `mode` is \"auto\", then\n     * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n     * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n     */\n    ParamType.prototype.$asArray = function (mode, isSearch) {\n        if (!mode)\n            return this;\n        if (mode === \"auto\" && !isSearch)\n            throw new Error(\"'auto' array mode is for query parameters only\");\n        return new ArrayType(this, mode);\n    };\n    return ParamType;\n}());\nexports.ParamType = ParamType;\n//# sourceMappingURL=type.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/params/type.js\n// module id = 24\n// module chunks = 0 1","\"use strict\";\n/** @module core */ /** */\nvar urlMatcherFactory_1 = require(\"./url/urlMatcherFactory\");\nvar urlRouter_1 = require(\"./url/urlRouter\");\nvar urlRouter_2 = require(\"./url/urlRouter\");\nvar transitionService_1 = require(\"./transition/transitionService\");\nvar view_1 = require(\"./view/view\");\nvar stateRegistry_1 = require(\"./state/stateRegistry\");\nvar stateService_1 = require(\"./state/stateService\");\nvar globals_1 = require(\"./globals\");\n/**\n * The master class used to instantiate an instance of UI-Router.\n *\n * UI-Router (for a specific framework) will create an instance of this class during bootstrap.\n * This class instantiates and wires the UI-Router services together.\n *\n * After a new instance of the UIRouter class is created, it should be configured for your app.\n * For instance, app states should be registered with the [[stateRegistry]].\n *\n * Tell UI-Router to monitor the URL by calling `uiRouter.urlRouter.listen()` ([[UrlRouter.listen]])\n */\nvar UIRouter = (function () {\n    function UIRouter() {\n        this.viewService = new view_1.ViewService();\n        this.transitionService = new transitionService_1.TransitionService(this);\n        this.globals = new globals_1.Globals(this.transitionService);\n        this.urlMatcherFactory = new urlMatcherFactory_1.UrlMatcherFactory();\n        this.urlRouterProvider = new urlRouter_1.UrlRouterProvider(this.urlMatcherFactory, this.globals.params);\n        this.urlRouter = new urlRouter_2.UrlRouter(this.urlRouterProvider);\n        this.stateRegistry = new stateRegistry_1.StateRegistry(this.urlMatcherFactory, this.urlRouterProvider);\n        this.stateService = new stateService_1.StateService(this);\n        this.viewService.rootContext(this.stateRegistry.root());\n        this.globals.$current = this.stateRegistry.root();\n        this.globals.current = this.globals.$current.self;\n    }\n    return UIRouter;\n}());\nexports.UIRouter = UIRouter;\n//# sourceMappingURL=router.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/router.js\n// module id = 25\n// module chunks = 0 1","\"use strict\";\n/** @module url */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar urlMatcher_1 = require(\"./urlMatcher\");\nvar urlMatcherConfig_1 = require(\"./urlMatcherConfig\");\nvar param_1 = require(\"../params/param\");\nvar paramTypes_1 = require(\"../params/paramTypes\");\n/** @hidden */\nfunction getDefaultConfig() {\n    return {\n        strict: urlMatcherConfig_1.matcherConfig.strictMode(),\n        caseInsensitive: urlMatcherConfig_1.matcherConfig.caseInsensitive()\n    };\n}\n/**\n * Factory for [[UrlMatcher]] instances.\n *\n * The factory is available to ng1 services as\n * `$urlMatcherFactor` or ng1 providers as `$urlMatcherFactoryProvider`.\n */\nvar UrlMatcherFactory = (function () {\n    function UrlMatcherFactory() {\n        this.paramTypes = new paramTypes_1.ParamTypes();\n        common_1.extend(this, { UrlMatcher: urlMatcher_1.UrlMatcher, Param: param_1.Param });\n    }\n    /**\n     * Defines whether URL matching should be case sensitive (the default behavior), or not.\n     *\n     * @param value `false` to match URL in a case sensitive manner; otherwise `true`;\n     * @returns the current value of caseInsensitive\n     */\n    UrlMatcherFactory.prototype.caseInsensitive = function (value) {\n        return urlMatcherConfig_1.matcherConfig.caseInsensitive(value);\n    };\n    /**\n     * Defines whether URLs should match trailing slashes, or not (the default behavior).\n     *\n     * @param value `false` to match trailing slashes in URLs, otherwise `true`.\n     * @returns the current value of strictMode\n     */\n    UrlMatcherFactory.prototype.strictMode = function (value) {\n        return urlMatcherConfig_1.matcherConfig.strictMode(value);\n    };\n    /**\n     * Sets the default behavior when generating or matching URLs with default parameter values.\n     *\n     * @param value A string that defines the default parameter URL squashing behavior.\n     *    - `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n     *    - `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n     *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n     *    - any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n     *             the parameter value from the URL and replace it with this string.\n     * @returns the current value of defaultSquashPolicy\n     */\n    UrlMatcherFactory.prototype.defaultSquashPolicy = function (value) {\n        return urlMatcherConfig_1.matcherConfig.defaultSquashPolicy(value);\n    };\n    /**\n     * Creates a [[UrlMatcher]] for the specified pattern.\n     *\n     * @param pattern  The URL pattern.\n     * @param config  The config object hash.\n     * @returns The UrlMatcher.\n     */\n    UrlMatcherFactory.prototype.compile = function (pattern, config) {\n        return new urlMatcher_1.UrlMatcher(pattern, this.paramTypes, common_1.extend(getDefaultConfig(), config));\n    };\n    /**\n     * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n     *\n     * @param object  The object to perform the type check against.\n     * @returns `true` if the object matches the `UrlMatcher` interface, by\n     *          implementing all the same methods.\n     */\n    UrlMatcherFactory.prototype.isMatcher = function (object) {\n        // TODO: typeof?\n        if (!predicates_1.isObject(object))\n            return false;\n        var result = true;\n        common_1.forEach(urlMatcher_1.UrlMatcher.prototype, function (val, name) {\n            if (predicates_1.isFunction(val))\n                result = result && (predicates_1.isDefined(object[name]) && predicates_1.isFunction(object[name]));\n        });\n        return result;\n    };\n    ;\n    /**\n     * Creates and registers a custom [[ParamType]] object\n     *\n     * A [[ParamType]] can be used to generate URLs with typed parameters.\n     *\n     * @param name  The type name.\n     * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n     * @param definitionFn A function that is injected before the app runtime starts.\n     *        The result of this function should be a [[ParamTypeDefinition]].\n     *        The result is merged into the existing `definition`.\n     *        See [[ParamType]] for information on the values accepted.\n     *\n     * @returns - if a type was registered: the [[UrlMatcherFactory]]\n     *   - if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n     *\n     * Note: Register custom types *before using them* in a state definition.\n     *\n     * See [[ParamTypeDefinition]] for examples\n     */\n    UrlMatcherFactory.prototype.type = function (name, definition, definitionFn) {\n        var type = this.paramTypes.type(name, definition, definitionFn);\n        return !predicates_1.isDefined(definition) ? type : this;\n    };\n    ;\n    /** @hidden */\n    UrlMatcherFactory.prototype.$get = function () {\n        this.paramTypes.enqueue = false;\n        this.paramTypes._flushTypeQueue();\n        return this;\n    };\n    ;\n    return UrlMatcherFactory;\n}());\nexports.UrlMatcherFactory = UrlMatcherFactory;\n//# sourceMappingURL=urlMatcherFactory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/url/urlMatcherFactory.js\n// module id = 26\n// module chunks = 0 1","\"use strict\";\n/** @module url */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar predicates_1 = require(\"../common/predicates\");\nvar param_1 = require(\"../params/param\");\nvar predicates_2 = require(\"../common/predicates\");\nvar param_2 = require(\"../params/param\");\nvar common_2 = require(\"../common/common\");\nvar common_3 = require(\"../common/common\");\n/** @hidden */\nfunction quoteRegExp(string, param) {\n    var surroundPattern = ['', ''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n    if (!param)\n        return result;\n    switch (param.squash) {\n        case false:\n            surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')];\n            break;\n        case true:\n            result = result.replace(/\\/$/, '');\n            surroundPattern = ['(?:\\/(', ')|\\/)?'];\n            break;\n        default:\n            surroundPattern = [(\"(\" + param.squash + \"|\"), ')?'];\n            break;\n    }\n    return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n}\n/** @hidden */\nvar memoizeTo = function (obj, prop, fn) {\n    return obj[prop] = obj[prop] || fn();\n};\n/**\n * Matches URLs against patterns.\n *\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL.\n *\n * A URL pattern consists of a path pattern, optionally followed by '?' and a list of search (query)\n * parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by [[UrlMatcher.exec]].\n *\n * - *Path parameters* are defined using curly brace placeholders (`/somepath/{param}`)\n * or colon placeholders (`/somePath/:param`).\n *\n * - *A parameter RegExp* may be defined for a param after a colon\n * (`/somePath/{param:[a-zA-Z0-9]+}`) in a curly brace placeholder.\n * The regexp must match for the url to be matched.\n * Should the regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n * Note that a RegExp parameter will encode its value with `string` ParamType encoding: \"/\" as \"~2F\", and \"~\" as \"~~\".\n * When matching these characters, use the encoded versions in the regexp.\n * See issue [#2540](https://github.com/angular-ui/ui-router/issues/2540) for more information.\n *\n * - *Custom parameter types* may also be specified after a colon (`/somePath/{param:int}`)\n * in curly brace parameters.  See [[UrlMatcherFactory.type]] for more information.\n *\n * - *Catch-all parameters* are defined using an asterisk placeholder (`/somepath/*catchallparam`).  A catch-all\n * parameter value will contain the remainder of the URL.\n *\n * ---\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters).\n * A path parameter matches any number of characters other than '/'. For catch-all\n * placeholders the path parameter matches any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` ParamType matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n */\nvar UrlMatcher = (function () {\n    /**\n     * @param pattern The pattern to compile into a matcher.\n     * @param paramTypes The [[ParamTypes]] registry\n     * @param config  A configuration object\n     * - `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n     * - `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n     */\n    function UrlMatcher(pattern, paramTypes, config) {\n        var _this = this;\n        this.config = config;\n        /** @hidden */\n        this._cache = { path: [], pattern: null };\n        /** @hidden */\n        this._children = [];\n        /** @hidden */\n        this._params = [];\n        /** @hidden */\n        this._segments = [];\n        /** @hidden */\n        this._compiled = [];\n        this.pattern = pattern;\n        this.config = common_1.defaults(this.config, {\n            params: {},\n            strict: true,\n            caseInsensitive: false,\n            paramMap: common_1.identity\n        });\n        // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n        //   '*' name\n        //   ':' name\n        //   '{' name '}'\n        //   '{' name ':' regexp '}'\n        // The regular expression is somewhat complicated due to the need to allow curly braces\n        // inside the regular expression. The placeholder regexp breaks down as follows:\n        //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n        //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n        //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n        //    [^{}\\\\]+                       - anything other than curly braces or backslash\n        //    \\\\.                            - a backslash escape\n        //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n        var placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g, searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g, last = 0, m, patterns = [];\n        var checkParamErrors = function (id) {\n            if (!UrlMatcher.nameValidator.test(id))\n                throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n            if (common_1.find(_this._params, hof_1.propEq('id', id)))\n                throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n        };\n        // Split into static segments separated by path parameter placeholders.\n        // The number of segments is always 1 more than the number of parameters.\n        var matchDetails = function (m, isSearch) {\n            // IE[78] returns '' for unmatched groups instead of null\n            var id = m[2] || m[3], regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '.*' : null);\n            return {\n                id: id,\n                regexp: regexp,\n                cfg: _this.config.params[id],\n                segment: pattern.substring(last, m.index),\n                type: !regexp ? null : paramTypes.type(regexp || \"string\") || common_1.inherit(paramTypes.type(\"string\"), {\n                    pattern: new RegExp(regexp, _this.config.caseInsensitive ? 'i' : undefined)\n                })\n            };\n        };\n        var p, segment;\n        while ((m = placeholder.exec(pattern))) {\n            p = matchDetails(m, false);\n            if (p.segment.indexOf('?') >= 0)\n                break; // we're into the search part\n            checkParamErrors(p.id);\n            this._params.push(param_1.Param.fromPath(p.id, p.type, this.config.paramMap(p.cfg, false), paramTypes));\n            this._segments.push(p.segment);\n            patterns.push([p.segment, common_1.tail(this._params)]);\n            last = placeholder.lastIndex;\n        }\n        segment = pattern.substring(last);\n        // Find any search parameter names and remove them from the last segment\n        var i = segment.indexOf('?');\n        if (i >= 0) {\n            var search = segment.substring(i);\n            segment = segment.substring(0, i);\n            if (search.length > 0) {\n                last = 0;\n                while ((m = searchPlaceholder.exec(search))) {\n                    p = matchDetails(m, true);\n                    checkParamErrors(p.id);\n                    this._params.push(param_1.Param.fromSearch(p.id, p.type, this.config.paramMap(p.cfg, true), paramTypes));\n                    last = placeholder.lastIndex;\n                }\n            }\n        }\n        this._segments.push(segment);\n        common_1.extend(this, {\n            _compiled: patterns.map(function (pattern) { return quoteRegExp.apply(null, pattern); }).concat(quoteRegExp(segment)),\n            prefix: this._segments[0]\n        });\n        Object.freeze(this);\n    }\n    /**\n     * Creates a new concatenated UrlMatcher\n     *\n     * Builds a new UrlMatcher by appending another UrlMatcher to this one.\n     *\n     * @param url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n     */\n    UrlMatcher.prototype.append = function (url) {\n        this._children.push(url);\n        common_1.forEach(url._cache, function (val, key) { return url._cache[key] = predicates_1.isArray(val) ? [] : null; });\n        url._cache.path = this._cache.path.concat(this);\n        return url;\n    };\n    /** @hidden */\n    UrlMatcher.prototype.isRoot = function () {\n        return this._cache.path.length === 0;\n    };\n    /** Returns the input pattern string */\n    UrlMatcher.prototype.toString = function () {\n        return this.pattern;\n    };\n    /**\n     * Tests the specified url/path against this matcher.\n     *\n     * Tests if the given url matches this matcher's pattern, and returns an object containing the captured\n     * parameter values.  Returns null if the path does not match.\n     *\n     * The returned object contains the values\n     * of any search parameters that are mentioned in the pattern, but their value may be null if\n     * they are not present in `search`. This means that search parameters are always treated\n     * as optional.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n     *   x: '1', q: 'hello'\n     * });\n     * // returns { id: 'bob', q: 'hello', r: null }\n     * ```\n     *\n     * @param path    The URL path to match, e.g. `$location.path()`.\n     * @param search  URL search parameters, e.g. `$location.search()`.\n     * @param hash    URL hash e.g. `$location.hash()`.\n     * @param options\n     *\n     * @returns The captured parameter values.\n     */\n    UrlMatcher.prototype.exec = function (path, search, hash, options) {\n        var _this = this;\n        if (search === void 0) { search = {}; }\n        if (options === void 0) { options = {}; }\n        var match = memoizeTo(this._cache, 'pattern', function () {\n            return new RegExp([\n                '^',\n                common_1.unnest(_this._cache.path.concat(_this).map(hof_1.prop('_compiled'))).join(''),\n                _this.config.strict === false ? '\\/?' : '',\n                '$'\n            ].join(''), _this.config.caseInsensitive ? 'i' : undefined);\n        }).exec(path);\n        if (!match)\n            return null;\n        //options = defaults(options, { isolate: false });\n        var allParams = this.parameters(), pathParams = allParams.filter(function (param) { return !param.isSearch(); }), searchParams = allParams.filter(function (param) { return param.isSearch(); }), nPathSegments = this._cache.path.concat(this).map(function (urlm) { return urlm._segments.length - 1; }).reduce(function (a, x) { return a + x; }), values = {};\n        if (nPathSegments !== match.length - 1)\n            throw new Error(\"Unbalanced capture group in route '\" + this.pattern + \"'\");\n        function decodePathArray(string) {\n            var reverseString = function (str) { return str.split(\"\").reverse().join(\"\"); };\n            var unquoteDashes = function (str) { return str.replace(/\\\\-/g, \"-\"); };\n            var split = reverseString(string).split(/-(?!\\\\)/);\n            var allReversed = common_1.map(split, reverseString);\n            return common_1.map(allReversed, unquoteDashes).reverse();\n        }\n        for (var i = 0; i < nPathSegments; i++) {\n            var param = pathParams[i];\n            var value = match[i + 1];\n            // if the param value matches a pre-replace pair, replace the value before decoding.\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (value && param.array === true)\n                value = decodePathArray(value);\n            if (predicates_2.isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        }\n        searchParams.forEach(function (param) {\n            var value = search[param.id];\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (predicates_2.isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        });\n        if (hash)\n            values[\"#\"] = hash;\n        return values;\n    };\n    /**\n     * @hidden\n     * Returns all the [[Param]] objects of all path and search parameters of this pattern in order of appearance.\n     *\n     * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n     *    pattern has no parameters, an empty array is returned.\n     */\n    UrlMatcher.prototype.parameters = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        if (opts.inherit === false)\n            return this._params;\n        return common_1.unnest(this._cache.path.concat(this).map(hof_1.prop('_params')));\n    };\n    /**\n     * @hidden\n     * Returns a single parameter from this UrlMatcher by id\n     *\n     * @param id\n     * @param opts\n     * @returns {T|Param|any|boolean|UrlMatcher|null}\n     */\n    UrlMatcher.prototype.parameter = function (id, opts) {\n        if (opts === void 0) { opts = {}; }\n        var parent = common_1.tail(this._cache.path);\n        return (common_1.find(this._params, hof_1.propEq('id', id)) ||\n            (opts.inherit !== false && parent && parent.parameter(id)) ||\n            null);\n    };\n    /**\n     * Validates the input parameter values against this UrlMatcher\n     *\n     * Checks an object hash of parameters to validate their correctness according to the parameter\n     * types of this `UrlMatcher`.\n     *\n     * @param params The object hash of parameters to validate.\n     * @returns Returns `true` if `params` validates, otherwise `false`.\n     */\n    UrlMatcher.prototype.validates = function (params) {\n        var _this = this;\n        var validParamVal = function (param, val) {\n            return !param || param.validates(val);\n        };\n        return common_1.pairs(params || {}).map(function (_a) {\n            var key = _a[0], val = _a[1];\n            return validParamVal(_this.parameter(key), val);\n        }).reduce(common_1.allTrueR, true);\n    };\n    /**\n     * Given a set of parameter values, creates a URL from this UrlMatcher.\n     *\n     * Creates a URL that matches this pattern by substituting the specified values\n     * for the path and search parameters.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n     * // returns '/user/bob?q=yes'\n     * ```\n     *\n     * @param values  the values to substitute for the parameters in this pattern.\n     * @returns the formatted URL (path and optionally search part).\n     */\n    UrlMatcher.prototype.format = function (values) {\n        if (values === void 0) { values = {}; }\n        if (!this.validates(values))\n            return null;\n        // Build the full path of UrlMatchers (including all parent UrlMatchers)\n        var urlMatchers = this._cache.path.slice().concat(this);\n        // Extract all the static segments and Params into an ordered array\n        var pathSegmentsAndParams = urlMatchers.map(UrlMatcher.pathSegmentsAndParams).reduce(common_2.unnestR, []);\n        // Extract the query params into a separate array\n        var queryParams = urlMatchers.map(UrlMatcher.queryParams).reduce(common_2.unnestR, []);\n        /**\n         * Given a Param,\n         * Applies the parameter value, then returns details about it\n         */\n        function getDetails(param) {\n            // Normalize to typed value\n            var value = param.value(values[param.id]);\n            var isDefaultValue = param.isDefaultValue(value);\n            // Check if we're in squash mode for the parameter\n            var squash = isDefaultValue ? param.squash : false;\n            // Allow the Parameter's Type to encode the value\n            var encoded = param.type.encode(value);\n            return { param: param, value: value, isDefaultValue: isDefaultValue, squash: squash, encoded: encoded };\n        }\n        // Build up the path-portion from the list of static segments and parameters\n        var pathString = pathSegmentsAndParams.reduce(function (acc, x) {\n            // The element is a static segment (a raw string); just append it\n            if (predicates_1.isString(x))\n                return acc + x;\n            // Otherwise, it's a Param.  Fetch details about the parameter value\n            var _a = getDetails(x), squash = _a.squash, encoded = _a.encoded, param = _a.param;\n            // If squash is === true, try to remove a slash from the path\n            if (squash === true)\n                return (acc.match(/\\/$/)) ? acc.slice(0, -1) : acc;\n            // If squash is a string, use the string for the param value\n            if (predicates_1.isString(squash))\n                return acc + squash;\n            if (squash !== false)\n                return acc; // ?\n            if (encoded == null)\n                return acc;\n            // If this parameter value is an array, encode the value using encodeDashes\n            if (predicates_1.isArray(encoded))\n                return acc + common_1.map(encoded, UrlMatcher.encodeDashes).join(\"-\");\n            // If the parameter type is \"raw\", then do not encodeURIComponent\n            if (param.type.raw)\n                return acc + encoded;\n            // Encode the value\n            return acc + encodeURIComponent(encoded);\n        }, \"\");\n        // Build the query string by applying parameter values (array or regular)\n        // then mapping to key=value, then flattening and joining using \"&\"\n        var queryString = queryParams.map(function (param) {\n            var _a = getDetails(param), squash = _a.squash, encoded = _a.encoded, isDefaultValue = _a.isDefaultValue;\n            if (encoded == null || (isDefaultValue && squash !== false))\n                return;\n            if (!predicates_1.isArray(encoded))\n                encoded = [encoded];\n            if (encoded.length === 0)\n                return;\n            if (!param.type.raw)\n                encoded = common_1.map(encoded, encodeURIComponent);\n            return encoded.map(function (val) { return (param.id + \"=\" + val); });\n        }).filter(common_1.identity).reduce(common_2.unnestR, []).join(\"&\");\n        // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n        return pathString + (queryString ? \"?\" + queryString : \"\") + (values[\"#\"] ? \"#\" + values[\"#\"] : \"\");\n    };\n    /** @hidden */\n    UrlMatcher.encodeDashes = function (str) {\n        return encodeURIComponent(str).replace(/-/g, function (c) { return (\"%5C%\" + c.charCodeAt(0).toString(16).toUpperCase()); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's path segments and path params, in order */\n    UrlMatcher.pathSegmentsAndParams = function (matcher) {\n        var staticSegments = matcher._segments;\n        var pathParams = matcher._params.filter(function (p) { return p.location === param_2.DefType.PATH; });\n        return common_3.arrayTuples(staticSegments, pathParams.concat(undefined)).reduce(common_2.unnestR, []).filter(function (x) { return x !== \"\" && predicates_2.isDefined(x); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's query params */\n    UrlMatcher.queryParams = function (matcher) {\n        return matcher._params.filter(function (p) { return p.location === param_2.DefType.SEARCH; });\n    };\n    /** @hidden */\n    UrlMatcher.nameValidator = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n    return UrlMatcher;\n}());\nexports.UrlMatcher = UrlMatcher;\n//# sourceMappingURL=urlMatcher.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/url/urlMatcher.js\n// module id = 27\n// module chunks = 0 1","\"use strict\";\n/** @module params */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar hof_1 = require(\"../common/hof\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar type_1 = require(\"./type\");\n// Use tildes to pre-encode slashes.\n// If the slashes are simply URLEncoded, the browser can choose to pre-decode them,\n// and bidirectional encoding/decoding fails.\n// Tilde was chosen because it's not a RFC 3986 section 2.2 Reserved Character\nfunction valToString(val) { return val != null ? val.toString().replace(/(~|\\/)/g, function (m) { return ({ '~': '~~', '/': '~2F' }[m]); }) : val; }\nfunction valFromString(val) { return val != null ? val.toString().replace(/(~~|~2F)/g, function (m) { return ({ '~~': '~', '~2F': '/' }[m]); }) : val; }\nvar ParamTypes = (function () {\n    function ParamTypes() {\n        this.enqueue = true;\n        this.typeQueue = [];\n        this.defaultTypes = {\n            \"hash\": {\n                encode: valToString,\n                decode: valFromString,\n                is: hof_1.is(String),\n                pattern: /.*/,\n                equals: function (a, b) { return a == b; } // allow coersion for null/undefined/\"\"\n            },\n            \"string\": {\n                encode: valToString,\n                decode: valFromString,\n                is: hof_1.is(String),\n                pattern: /[^/]*/\n            },\n            \"int\": {\n                encode: valToString,\n                decode: function (val) { return parseInt(val, 10); },\n                is: function (val) { return predicates_1.isDefined(val) && this.decode(val.toString()) === val; },\n                pattern: /-?\\d+/\n            },\n            \"bool\": {\n                encode: function (val) { return val && 1 || 0; },\n                decode: function (val) { return parseInt(val, 10) !== 0; },\n                is: hof_1.is(Boolean),\n                pattern: /0|1/\n            },\n            \"date\": {\n                encode: function (val) {\n                    return !this.is(val) ? undefined : [\n                        val.getFullYear(),\n                        ('0' + (val.getMonth() + 1)).slice(-2),\n                        ('0' + val.getDate()).slice(-2)\n                    ].join(\"-\");\n                },\n                decode: function (val) {\n                    if (this.is(val))\n                        return val;\n                    var match = this.capture.exec(val);\n                    return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n                },\n                is: function (val) { return val instanceof Date && !isNaN(val.valueOf()); },\n                equals: function (l, r) {\n                    return ['getFullYear', 'getMonth', 'getDate']\n                        .reduce(function (acc, fn) { return acc && l[fn]() === r[fn](); }, true);\n                },\n                pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n                capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n            },\n            \"json\": {\n                encode: common_1.toJson,\n                decode: common_1.fromJson,\n                is: hof_1.is(Object),\n                equals: common_1.equals,\n                pattern: /[^/]*/\n            },\n            \"any\": {\n                encode: common_1.identity,\n                decode: common_1.identity,\n                equals: common_1.equals,\n                pattern: /.*/\n            }\n        };\n        // Register default types. Store them in the prototype of this.types.\n        var makeType = function (definition, name) { return new type_1.ParamType(common_1.extend({ name: name }, definition)); };\n        this.types = common_1.inherit(common_1.map(this.defaultTypes, makeType), {});\n    }\n    ParamTypes.prototype.type = function (name, definition, definitionFn) {\n        if (!predicates_1.isDefined(definition))\n            return this.types[name];\n        if (this.types.hasOwnProperty(name))\n            throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n        this.types[name] = new type_1.ParamType(common_1.extend({ name: name }, definition));\n        if (definitionFn) {\n            this.typeQueue.push({ name: name, def: definitionFn });\n            if (!this.enqueue)\n                this._flushTypeQueue();\n        }\n        return this;\n    };\n    ParamTypes.prototype._flushTypeQueue = function () {\n        while (this.typeQueue.length) {\n            var type = this.typeQueue.shift();\n            if (type.pattern)\n                throw new Error(\"You cannot override a type's .pattern at runtime.\");\n            common_1.extend(this.types[type.name], coreservices_1.services.$injector.invoke(type.def));\n        }\n    };\n    return ParamTypes;\n}());\nexports.ParamTypes = ParamTypes;\n//# sourceMappingURL=paramTypes.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/params/paramTypes.js\n// module id = 28\n// module chunks = 0 1","\"use strict\";\n/** @module url */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar coreservices_1 = require(\"../common/coreservices\");\n/** @hidden */\nvar $location = coreservices_1.services.location;\n/** @hidden Returns a string that is a prefix of all strings matching the RegExp */\nfunction regExpPrefix(re) {\n    var prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n    return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n}\n/** @hidden Interpolates matched values into a String.replace()-style pattern */\nfunction interpolate(pattern, match) {\n    return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n        return match[what === '$' ? 0 : Number(what)];\n    });\n}\n/** @hidden */\nfunction handleIfMatch($injector, $stateParams, handler, match) {\n    if (!match)\n        return false;\n    var result = $injector.invoke(handler, handler, { $match: match, $stateParams: $stateParams });\n    return predicates_1.isDefined(result) ? result : true;\n}\n/** @hidden */\nfunction appendBasePath(url, isHtml5, absolute) {\n    var baseHref = coreservices_1.services.locationConfig.baseHref();\n    if (baseHref === '/')\n        return url;\n    if (isHtml5)\n        return baseHref.slice(0, -1) + url;\n    if (absolute)\n        return baseHref.slice(1) + url;\n    return url;\n}\n// TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\n/** @hidden */\nfunction update(rules, otherwiseFn, evt) {\n    if (evt && evt.defaultPrevented)\n        return;\n    function check(rule) {\n        var handled = rule(coreservices_1.services.$injector, $location);\n        if (!handled)\n            return false;\n        if (predicates_1.isString(handled)) {\n            $location.setUrl(handled, true);\n        }\n        return true;\n    }\n    var n = rules.length;\n    for (var i = 0; i < n; i++) {\n        if (check(rules[i]))\n            return;\n    }\n    // always check otherwise last to allow dynamic updates to the set of rules\n    if (otherwiseFn)\n        check(otherwiseFn);\n}\n/**\n * Manages rules for client-side URL\n *\n * This class manages the router rules for what to do when the URL changes.\n */\nvar UrlRouterProvider = (function () {\n    function UrlRouterProvider($urlMatcherFactory, $stateParams) {\n        /** @hidden */\n        this.rules = [];\n        /** @hidden */\n        this.interceptDeferred = false;\n        this.$urlMatcherFactory = $urlMatcherFactory;\n        this.$stateParams = $stateParams;\n    }\n    /**\n     * Registers a url handler function.\n     *\n     * Registers a low level url handler (a `rule`). A rule detects specific URL patterns and returns\n     * a redirect, or performs some action.\n     *\n     * If a rule returns a string, the URL is replaced with the string, and all rules are fired again.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Here's an example of how you might allow case insensitive urls\n     *   $urlRouterProvider.rule(function ($injector, $location) {\n     *     var path = $location.path(),\n     *         normalized = path.toLowerCase();\n     *\n     *     if (path !== normalized) {\n     *       return normalized;\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param rule\n     * Handler function that takes `$injector` and `$location` services as arguments.\n     * You can use them to detect a url and return a different url as a string.\n     *\n     * @return [[$urlRouterProvider]] (`this`)\n     */\n    UrlRouterProvider.prototype.rule = function (rule) {\n        if (!predicates_1.isFunction(rule))\n            throw new Error(\"'rule' must be a function\");\n        this.rules.push(rule);\n        return this;\n    };\n    ;\n    /**\n     * Remove a rule previously registered\n     *\n     * @param rule the matcher rule that was previously registered using [[rule]]\n     * @return true if the rule was found (and removed)\n     */\n    UrlRouterProvider.prototype.removeRule = function (rule) {\n        return this.rules.length !== common_1.removeFrom(this.rules, rule).length;\n    };\n    /**\n     * Defines the path or behavior to use when no url can be matched.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // if the path doesn't match any of the urls you configured\n     *   // otherwise will take care of routing the user to the\n     *   // specified url\n     *   $urlRouterProvider.otherwise('/index');\n     *\n     *   // Example of using function rule as param\n     *   $urlRouterProvider.otherwise(function ($injector, $location) {\n     *     return '/a/valid/url';\n     *   });\n     * });\n     * ```\n     *\n     * @param rule\n     * The url path you want to redirect to or a function rule that returns the url path or performs a `$state.go()`.\n     * The function version is passed two params: `$injector` and `$location` services, and should return a url string.\n     *\n     * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n     */\n    UrlRouterProvider.prototype.otherwise = function (rule) {\n        if (!predicates_1.isFunction(rule) && !predicates_1.isString(rule))\n            throw new Error(\"'rule' must be a string or function\");\n        this.otherwiseFn = predicates_1.isString(rule) ? function () { return rule; } : rule;\n        return this;\n    };\n    ;\n    /**\n     * Registers a handler for a given url matching.\n     *\n     * If the handler is a string, it is\n     * treated as a redirect, and is interpolated according to the syntax of match\n     * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n     *\n     * If the handler is a function, it is injectable.\n     * It gets invoked if `$location` matches.\n     * You have the option of inject the match object as `$match`.\n     *\n     * The handler can return\n     *\n     * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n     *   will continue trying to find another one that matches.\n     * - **string** which is treated as a redirect and passed to `$location.url()`\n     * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n     *\n     * @example\n     * ```js\n     *\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n     *     if ($state.$current.navigable !== state ||\n     *         !equalForKeys($match, $stateParams) {\n     *      $state.transitionTo(state, $match, false);\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param what A pattern string to match, compiled as a [[UrlMatcher]].\n     * @param handler The path (or function that returns a path) that you want to redirect your user to.\n     * @param ruleCallback [optional] A callback that receives the `rule` registered with [[UrlMatcher.rule]]\n     *\n     * Note: the handler may also invoke arbitrary code, such as `$state.go()`\n     */\n    UrlRouterProvider.prototype.when = function (what, handler, ruleCallback) {\n        if (ruleCallback === void 0) { ruleCallback = function (rule) { }; }\n        var _a = this, $urlMatcherFactory = _a.$urlMatcherFactory, $stateParams = _a.$stateParams;\n        var redirect, handlerIsString = predicates_1.isString(handler);\n        // @todo Queue this\n        if (predicates_1.isString(what))\n            what = $urlMatcherFactory.compile(what);\n        if (!handlerIsString && !predicates_1.isFunction(handler) && !predicates_1.isArray(handler))\n            throw new Error(\"invalid 'handler' in when()\");\n        var strategies = {\n            matcher: function (_what, _handler) {\n                if (handlerIsString) {\n                    redirect = $urlMatcherFactory.compile(_handler);\n                    _handler = ['$match', redirect.format.bind(redirect)];\n                }\n                return common_1.extend(function () {\n                    return handleIfMatch(coreservices_1.services.$injector, $stateParams, _handler, _what.exec($location.path(), $location.search(), $location.hash()));\n                }, {\n                    prefix: predicates_1.isString(_what.prefix) ? _what.prefix : ''\n                });\n            },\n            regex: function (_what, _handler) {\n                if (_what.global || _what.sticky)\n                    throw new Error(\"when() RegExp must not be global or sticky\");\n                if (handlerIsString) {\n                    redirect = _handler;\n                    _handler = ['$match', function ($match) { return interpolate(redirect, $match); }];\n                }\n                return common_1.extend(function () {\n                    return handleIfMatch(coreservices_1.services.$injector, $stateParams, _handler, _what.exec($location.path()));\n                }, {\n                    prefix: regExpPrefix(_what)\n                });\n            }\n        };\n        var check = {\n            matcher: $urlMatcherFactory.isMatcher(what),\n            regex: what instanceof RegExp\n        };\n        for (var n in check) {\n            if (check[n]) {\n                var rule = strategies[n](what, handler);\n                ruleCallback(rule);\n                return this.rule(rule);\n            }\n        }\n        throw new Error(\"invalid 'what' in when()\");\n    };\n    ;\n    /**\n     * Disables monitoring of the URL.\n     *\n     * Call this method before UI-Router has bootstrapped.\n     * It will stop UI-Router from performing the initial url sync.\n     *\n     * This can be useful to perform some asynchronous initialization before the router starts.\n     * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Prevent $urlRouter from automatically intercepting URL changes;\n     *   $urlRouterProvider.deferIntercept();\n     * })\n     *\n     * app.run(function (MyService, $urlRouter, $http) {\n     *   $http.get(\"/stuff\").then(function(resp) {\n     *     MyService.doStuff(resp.data);\n     *     $urlRouter.listen();\n     *     $urlRouter.sync();\n     *   });\n     * });\n     * ```\n     *\n     * @param defer Indicates whether to defer location change interception. Passing\n     *        no parameter is equivalent to `true`.\n     */\n    UrlRouterProvider.prototype.deferIntercept = function (defer) {\n        if (defer === undefined)\n            defer = true;\n        this.interceptDeferred = defer;\n    };\n    ;\n    return UrlRouterProvider;\n}());\nexports.UrlRouterProvider = UrlRouterProvider;\nvar UrlRouter = (function () {\n    /** @hidden */\n    function UrlRouter(urlRouterProvider) {\n        this.urlRouterProvider = urlRouterProvider;\n        common_1.bindFunctions(UrlRouter.prototype, this, this);\n    }\n    /**\n     * Checks the current URL for a matching rule\n     *\n     * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n     * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n     * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n     * with the transition by calling `$urlRouter.sync()`.\n     *\n     * #### Example:\n     * ```js\n     * angular.module('app', ['ui.router'])\n     *   .run(function($rootScope, $urlRouter) {\n     *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n     *       // Halt state change from even starting\n     *       evt.preventDefault();\n     *       // Perform custom logic\n     *       var meetsRequirement = ...\n     *       // Continue with the update and state transition if logic allows\n     *       if (meetsRequirement) $urlRouter.sync();\n     *     });\n     * });\n     * ```\n     */\n    UrlRouter.prototype.sync = function () {\n        update(this.urlRouterProvider.rules, this.urlRouterProvider.otherwiseFn);\n    };\n    /**\n     * Starts listening for URL changes\n     *\n     * Call this sometime after calling [[deferIntercept]] to start monitoring the url.\n     * This causes [[UrlRouter]] to start listening for changes to the URL, if it wasn't already listening.\n     */\n    UrlRouter.prototype.listen = function () {\n        var _this = this;\n        return this.listener = this.listener || $location.onChange(function (evt) { return update(_this.urlRouterProvider.rules, _this.urlRouterProvider.otherwiseFn, evt); });\n    };\n    /**\n     * Internal API.\n     */\n    UrlRouter.prototype.update = function (read) {\n        if (read) {\n            this.location = $location.path();\n            return;\n        }\n        if ($location.path() === this.location)\n            return;\n        $location.setUrl(this.location, true);\n    };\n    /**\n     * Internal API.\n     *\n     * Pushes a new location to the browser history.\n     *\n     * @param urlMatcher\n     * @param params\n     * @param options\n     */\n    UrlRouter.prototype.push = function (urlMatcher, params, options) {\n        var replace = options && !!options.replace;\n        $location.setUrl(urlMatcher.format(params || {}), replace);\n    };\n    /**\n     * Builds and returns a URL with interpolated parameters\n     *\n     * #### Example:\n     * ```js\n     * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n     *   person: \"bob\"\n     * });\n     * // $bob == \"/about/bob\";\n     * ```\n     *\n     * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n     * @param params An object of parameter values to fill the matcher's required parameters.\n     * @param options Options object. The options are:\n     *\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     *\n     * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n     */\n    UrlRouter.prototype.href = function (urlMatcher, params, options) {\n        if (!urlMatcher.validates(params))\n            return null;\n        var url = urlMatcher.format(params);\n        options = options || { absolute: false };\n        var cfg = coreservices_1.services.locationConfig;\n        var isHtml5 = cfg.html5Mode();\n        if (!isHtml5 && url !== null) {\n            url = \"#\" + cfg.hashPrefix() + url;\n        }\n        url = appendBasePath(url, isHtml5, options.absolute);\n        if (!options.absolute || !url) {\n            return url;\n        }\n        var slash = (!isHtml5 && url ? '/' : ''), port = cfg.port();\n        port = (port === 80 || port === 443 ? '' : ':' + port);\n        return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n    };\n    return UrlRouter;\n}());\nexports.UrlRouter = UrlRouter;\n//# sourceMappingURL=urlRouter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/url/urlRouter.js\n// module id = 29\n// module chunks = 0 1","\"use strict\";\nvar transition_1 = require(\"./transition\");\nvar hookRegistry_1 = require(\"./hookRegistry\");\nvar resolve_1 = require(\"../hooks/resolve\");\nvar views_1 = require(\"../hooks/views\");\nvar url_1 = require(\"../hooks/url\");\nvar redirectTo_1 = require(\"../hooks/redirectTo\");\nvar onEnterExitRetain_1 = require(\"../hooks/onEnterExitRetain\");\nvar lazyLoadStates_1 = require(\"../hooks/lazyLoadStates\");\n/**\n * The default [[Transition]] options.\n *\n * Include this object when applying custom defaults:\n * let reloadOpts = { reload: true, notify: true }\n * let options = defaults(theirOpts, customDefaults, defaultOptions);\n */\nexports.defaultTransOpts = {\n    location: true,\n    relative: null,\n    inherit: false,\n    notify: true,\n    reload: false,\n    custom: {},\n    current: function () { return null; },\n    source: \"unknown\"\n};\n/**\n * This class provides services related to Transitions.\n *\n * - Most importantly, it allows global Transition Hooks to be registered.\n * - It allows the default transition error handler to be set.\n * - It also has a factory function for creating new [[Transition]] objects, (used internally by the [[StateService]]).\n *\n * At bootstrap, [[UIRouter]] creates a single instance (singleton) of this class.\n */\nvar TransitionService = (function () {\n    function TransitionService(_router) {\n        this._router = _router;\n        this.$view = _router.viewService;\n        hookRegistry_1.HookRegistry.mixin(new hookRegistry_1.HookRegistry(), this);\n        this._deregisterHookFns = {};\n        this.registerTransitionHooks();\n    }\n    /** @hidden */\n    TransitionService.prototype.registerTransitionHooks = function () {\n        var fns = this._deregisterHookFns;\n        // Wire up redirectTo hook\n        fns.redirectTo = redirectTo_1.registerRedirectToHook(this);\n        // Wire up onExit/Retain/Enter state hooks\n        fns.onExit = onEnterExitRetain_1.registerOnExitHook(this);\n        fns.onRetain = onEnterExitRetain_1.registerOnRetainHook(this);\n        fns.onEnter = onEnterExitRetain_1.registerOnEnterHook(this);\n        // Wire up Resolve hooks\n        fns.eagerResolve = resolve_1.registerEagerResolvePath(this);\n        fns.lazyResolve = resolve_1.registerLazyResolveState(this);\n        // Wire up the View management hooks\n        fns.loadViews = views_1.registerLoadEnteringViews(this);\n        fns.activateViews = views_1.registerActivateViews(this);\n        // After globals.current is updated at priority: 10000\n        fns.updateUrl = url_1.registerUpdateUrl(this);\n        // Lazy load state trees\n        fns.lazyLoad = lazyLoadStates_1.registerLazyLoadHook(this);\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onBefore = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    TransitionService.prototype.onStart = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    TransitionService.prototype.onExit = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    TransitionService.prototype.onRetain = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    TransitionService.prototype.onEnter = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    TransitionService.prototype.onFinish = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    TransitionService.prototype.onSuccess = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /** @inheritdoc */\n    TransitionService.prototype.onError = function (matchCriteria, callback, options) { throw \"\"; };\n    ;\n    /**\n     * Creates a new [[Transition]] object\n     *\n     * This is a factory function for creating new Transition objects.\n     * It is used internally by the [[StateService]] and should generally not be called by application code.\n     *\n     * @param fromPath the path to the current state (the from state)\n     * @param targetState the target state (destination)\n     * @returns a Transition\n     */\n    TransitionService.prototype.create = function (fromPath, targetState) {\n        return new transition_1.Transition(fromPath, targetState, this._router);\n    };\n    return TransitionService;\n}());\nexports.TransitionService = TransitionService;\n//# sourceMappingURL=transitionService.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/transition/transitionService.js\n// module id = 30\n// module chunks = 0 1","\"use strict\";\n/** @module hooks */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar resolveContext_1 = require(\"../resolve/resolveContext\");\nvar hof_1 = require(\"../common/hof\");\n/**\n * A [[TransitionHookFn]] which resolves all EAGER Resolvables in the To Path\n *\n * Registered using `transitionService.onStart({}, eagerResolvePath);`\n *\n * When a Transition starts, this hook resolves all the EAGER Resolvables, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar eagerResolvePath = function (trans) {\n    return new resolveContext_1.ResolveContext(trans.treeChanges().to)\n        .resolvePath(\"EAGER\", trans)\n        .then(common_1.noop);\n};\nexports.registerEagerResolvePath = function (transitionService) {\n    return transitionService.onStart({}, eagerResolvePath, { priority: 1000 });\n};\n/**\n * A [[TransitionHookFn]] which resolves all LAZY Resolvables for the state (and all its ancestors) in the To Path\n *\n * Registered using `transitionService.onEnter({ entering: () => true }, lazyResolveState);`\n *\n * When a State is being entered, this hook resolves all the Resolvables for this state, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar lazyResolveState = function (trans, state) {\n    return new resolveContext_1.ResolveContext(trans.treeChanges().to)\n        .subContext(state)\n        .resolvePath(\"LAZY\", trans)\n        .then(common_1.noop);\n};\nexports.registerLazyResolveState = function (transitionService) {\n    return transitionService.onEnter({ entering: hof_1.val(true) }, lazyResolveState, { priority: 1000 });\n};\n//# sourceMappingURL=resolve.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/hooks/resolve.js\n// module id = 31\n// module chunks = 0 1","\"use strict\";\n/** @module hooks */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar coreservices_1 = require(\"../common/coreservices\");\n/**\n * A [[TransitionHookFn]] which waits for the views to load\n *\n * Registered using `transitionService.onStart({}, loadEnteringViews);`\n *\n * Allows the views to do async work in [[ViewConfig.load]] before the transition continues.\n * In angular 1, this includes loading the templates.\n */\nvar loadEnteringViews = function (transition) {\n    var enteringViews = transition.views(\"entering\");\n    if (!enteringViews.length)\n        return;\n    return coreservices_1.services.$q.all(enteringViews.map(function (view) { return view.load(); })).then(common_1.noop);\n};\nexports.registerLoadEnteringViews = function (transitionService) {\n    return transitionService.onStart({}, loadEnteringViews);\n};\n/**\n * A [[TransitionHookFn]] which activates the new views when a transition is successful.\n *\n * Registered using `transitionService.onSuccess({}, activateViews);`\n *\n * After a transition is complete, this hook deactivates the old views from the previous state,\n * and activates the new views from the destination state.\n *\n * See [[ViewService]]\n */\nvar activateViews = function (transition) {\n    var enteringViews = transition.views(\"entering\");\n    var exitingViews = transition.views(\"exiting\");\n    if (!enteringViews.length && !exitingViews.length)\n        return;\n    var $view = transition.router.viewService;\n    exitingViews.forEach(function (vc) { return $view.deactivateViewConfig(vc); });\n    enteringViews.forEach(function (vc) { return $view.activateViewConfig(vc); });\n    $view.sync();\n};\nexports.registerActivateViews = function (transitionService) {\n    return transitionService.onSuccess({}, activateViews);\n};\n//# sourceMappingURL=views.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/hooks/views.js\n// module id = 32\n// module chunks = 0 1","\"use strict\";\n/**\n * A [[TransitionHookFn]] which updates the URL after a successful transition\n *\n * Registered using `transitionService.onSuccess({}, updateUrl);`\n */\nvar updateUrl = function (transition) {\n    var options = transition.options();\n    var $state = transition.router.stateService;\n    var $urlRouter = transition.router.urlRouter;\n    // Dont update the url in these situations:\n    // The transition was triggered by a URL sync (options.source === 'url')\n    // The user doesn't want the url to update (options.location === false)\n    // The destination state, and all parents have no navigable url\n    if (options.source !== 'url' && options.location && $state.$current.navigable) {\n        var urlOptions = { replace: options.location === 'replace' };\n        $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions);\n    }\n    $urlRouter.update(true);\n};\nexports.registerUpdateUrl = function (transitionService) {\n    return transitionService.onSuccess({}, updateUrl, { priority: 9999 });\n};\n//# sourceMappingURL=url.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/hooks/url.js\n// module id = 33\n// module chunks = 0 1","\"use strict\";\n/** @module hooks */ /** */\nvar predicates_1 = require(\"../common/predicates\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar targetState_1 = require(\"../state/targetState\");\n/**\n * A [[TransitionHookFn]] that redirects to a different state or params\n *\n * Registered using `transitionService.onStart({ to: (state) => !!state.redirectTo }, redirectHook);`\n *\n * See [[StateDeclaration.redirectTo]]\n */\nvar redirectToHook = function (trans) {\n    var redirect = trans.to().redirectTo;\n    if (!redirect)\n        return;\n    function handleResult(result) {\n        var $state = trans.router.stateService;\n        if (result instanceof targetState_1.TargetState)\n            return result;\n        if (predicates_1.isString(result))\n            return $state.target(result, trans.params(), trans.options());\n        if (result['state'] || result['params'])\n            return $state.target(result['state'] || trans.to(), result['params'] || trans.params(), trans.options());\n    }\n    if (predicates_1.isFunction(redirect)) {\n        return coreservices_1.services.$q.when(redirect(trans)).then(handleResult);\n    }\n    return handleResult(redirect);\n};\nexports.registerRedirectToHook = function (transitionService) {\n    return transitionService.onStart({ to: function (state) { return !!state.redirectTo; } }, redirectToHook);\n};\n//# sourceMappingURL=redirectTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/hooks/redirectTo.js\n// module id = 34\n// module chunks = 0 1","\"use strict\";\n/**\n * A factory which creates an onEnter, onExit or onRetain transition hook function\n *\n * The returned function invokes the (for instance) state.onEnter hook when the\n * state is being entered.\n *\n * @hidden\n */\nfunction makeEnterExitRetainHook(hookName) {\n    return function (transition, state) {\n        var hookFn = state[hookName];\n        return hookFn(transition, state);\n    };\n}\n/**\n * The [[TransitionStateHookFn]] for onExit\n *\n * When the state is being exited, the state's .onExit function is invoked.\n *\n * Registered using `transitionService.onExit({ exiting: (state) => !!state.onExit }, onExitHook);`\n *\n * See: [[IHookRegistry.onExit]]\n */\nvar onExitHook = makeEnterExitRetainHook('onExit');\nexports.registerOnExitHook = function (transitionService) {\n    return transitionService.onExit({ exiting: function (state) { return !!state.onExit; } }, onExitHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onRetain\n *\n * When the state was already entered, and is not being exited or re-entered, the state's .onRetain function is invoked.\n *\n * Registered using `transitionService.onRetain({ retained: (state) => !!state.onRetain }, onRetainHook);`\n *\n * See: [[IHookRegistry.onRetain]]\n */\nvar onRetainHook = makeEnterExitRetainHook('onRetain');\nexports.registerOnRetainHook = function (transitionService) {\n    return transitionService.onRetain({ retained: function (state) { return !!state.onRetain; } }, onRetainHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onEnter\n *\n * When the state is being entered, the state's .onEnter function is invoked.\n *\n * Registered using `transitionService.onEnter({ entering: (state) => !!state.onEnter }, onEnterHook);`\n *\n * See: [[IHookRegistry.onEnter]]\n */\nvar onEnterHook = makeEnterExitRetainHook('onEnter');\nexports.registerOnEnterHook = function (transitionService) {\n    return transitionService.onEnter({ entering: function (state) { return !!state.onEnter; } }, onEnterHook);\n};\n//# sourceMappingURL=onEnterExitRetain.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/hooks/onEnterExitRetain.js\n// module id = 35\n// module chunks = 0 1","\"use strict\";\nvar coreservices_1 = require(\"../common/coreservices\");\n/**\n * A [[TransitionHookFn]] that lazy loads a state tree.\n *\n * When transitioning to a state \"abc\" which has a `lazyLoad` function defined:\n * - Invoke the `lazyLoad` function\n *   - The function should return a promise for an array of lazy loaded [[StateDeclaration]]s\n * - Wait for the promise to resolve\n * - Deregister the original state \"abc\"\n *   - The original state definition is a placeholder for the lazy loaded states\n * - Register the new states\n * - Retry the transition\n *\n * See [[StateDeclaration.lazyLoad]]\n */\nvar lazyLoadHook = function (transition) {\n    var toState = transition.to();\n    var registry = transition.router.stateRegistry;\n    function retryOriginalTransition() {\n        if (transition.options().source === 'url') {\n            var loc = coreservices_1.services.location, path_1 = loc.path(), search_1 = loc.search(), hash_1 = loc.hash();\n            var matchState = function (state) { return [state, state.url && state.url.exec(path_1, search_1, hash_1)]; };\n            var matches = registry.get().map(function (s) { return s.$$state(); }).map(matchState).filter(function (_a) {\n                var state = _a[0], params = _a[1];\n                return !!params;\n            });\n            if (matches.length) {\n                var _a = matches[0], state = _a[0], params = _a[1];\n                return transition.router.stateService.target(state, params, transition.options());\n            }\n            transition.router.urlRouter.sync();\n        }\n        // The original transition was not triggered via url sync\n        // The lazy state should be loaded now, so re-try the original transition\n        var orig = transition.targetState();\n        return transition.router.stateService.target(orig.identifier(), orig.params(), orig.options());\n    }\n    /**\n     * Replace the placeholder state with the newly loaded states from the NgModule.\n     */\n    function updateStateRegistry(result) {\n        // deregister placeholder state\n        registry.deregister(transition.$to());\n        if (result && Array.isArray(result.states)) {\n            result.states.forEach(function (state) { return registry.register(state); });\n        }\n    }\n    var hook = toState.lazyLoad;\n    // Store/get the lazy load promise on/from the hookfn so it doesn't get re-invoked\n    var promise = hook['_promise'];\n    if (!promise) {\n        promise = hook['_promise'] = hook(transition).then(updateStateRegistry);\n        var cleanup = function () { return delete hook['_promise']; };\n        promise.then(cleanup, cleanup);\n    }\n    return promise.then(retryOriginalTransition);\n};\nexports.registerLazyLoadHook = function (transitionService) {\n    return transitionService.onBefore({ to: function (state) { return !!state.lazyLoad; } }, lazyLoadHook);\n};\n//# sourceMappingURL=lazyLoadStates.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/hooks/lazyLoadStates.js\n// module id = 36\n// module chunks = 0 1","\"use strict\";\n/** @module view */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar predicates_1 = require(\"../common/predicates\");\nvar trace_1 = require(\"../common/trace\");\n/**\n * The View service\n */\nvar ViewService = (function () {\n    function ViewService() {\n        var _this = this;\n        this.uiViews = [];\n        this.viewConfigs = [];\n        this._viewConfigFactories = {};\n        this.sync = function () {\n            var uiViewsByFqn = _this.uiViews.map(function (uiv) { return [uiv.fqn, uiv]; }).reduce(common_1.applyPairs, {});\n            /**\n             * Given a ui-view and a ViewConfig, determines if they \"match\".\n             *\n             * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n             * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n             *\n             * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n             * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n             *\n             * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n             *\n             * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n             * - the ui-view's name matches the ViewConfig's target name\n             * - the ui-view's context matches the ViewConfig's anchor\n             *\n             * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n             * - There exists a parent ui-view where:\n             *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n             *    - the parent ui-view's context matches the ViewConfig's anchor\n             * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n             *\n             * Example:\n             *\n             * DOM:\n             * <div ui-view>                        <!-- created in the root context (name: \"\") -->\n             *   <div ui-view=\"foo\">                <!-- created in the context named: \"A\"      -->\n             *     <div ui-view>                    <!-- created in the context named: \"A.B\"    -->\n             *       <div ui-view=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n             *       </div>\n             *     </div>\n             *   </div>\n             * </div>\n             *\n             * uiViews: [\n             *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n             *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n             *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n             *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n             * ]\n             *\n             * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n             *\n             * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n             * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n             * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n             * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n             *\n             * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n             * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n             * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n             *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n             *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n             * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n             *   the tail of the ui-view's fqn \"default.bar\"\n             */\n            var matches = function (uiView) { return function (viewConfig) {\n                // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n                if (uiView.$type !== viewConfig.viewDecl.$type)\n                    return false;\n                // Split names apart from both viewConfig and uiView into segments\n                var vc = viewConfig.viewDecl;\n                var vcSegments = vc.$uiViewName.split(\".\");\n                var uivSegments = uiView.fqn.split(\".\");\n                // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n                // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n                if (!common_1.equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n                    return false;\n                // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n                // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n                var negOffset = (1 - vcSegments.length) || undefined;\n                var fqnToFirstSegment = uivSegments.slice(0, negOffset).join(\".\");\n                var uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n                return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n            }; };\n            // Return the number of dots in the fully qualified name\n            function uiViewDepth(uiView) {\n                return uiView.fqn.split(\".\").length;\n            }\n            // Return the ViewConfig's context's depth in the context tree.\n            function viewConfigDepth(config) {\n                var context = config.viewDecl.$context, count = 0;\n                while (++count && context.parent)\n                    context = context.parent;\n                return count;\n            }\n            // Given a depth function, returns a compare function which can return either ascending or descending order\n            var depthCompare = hof_1.curry(function (depthFn, posNeg, left, right) { return posNeg * (depthFn(left) - depthFn(right)); });\n            var matchingConfigPair = function (uiView) {\n                var matchingConfigs = _this.viewConfigs.filter(matches(uiView));\n                if (matchingConfigs.length > 1)\n                    matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n                return [uiView, matchingConfigs[0]];\n            };\n            var configureUIView = function (_a) {\n                var uiView = _a[0], viewConfig = _a[1];\n                // If a parent ui-view is reconfigured, it could destroy child ui-views.\n                // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n                if (_this.uiViews.indexOf(uiView) !== -1)\n                    uiView.configUpdated(viewConfig);\n            };\n            _this.uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair).forEach(configureUIView);\n        };\n    }\n    ViewService.prototype.rootContext = function (context) {\n        return this._rootContext = context || this._rootContext;\n    };\n    ;\n    ViewService.prototype.viewConfigFactory = function (viewType, factory) {\n        this._viewConfigFactories[viewType] = factory;\n    };\n    ViewService.prototype.createViewConfig = function (path, decl) {\n        var cfgFactory = this._viewConfigFactories[decl.$type];\n        if (!cfgFactory)\n            throw new Error(\"ViewService: No view config factory registered for type \" + decl.$type);\n        var cfgs = cfgFactory(path, decl);\n        return predicates_1.isArray(cfgs) ? cfgs : [cfgs];\n    };\n    /**\n     * De-registers a ViewConfig.\n     *\n     * @param viewConfig The ViewConfig view to deregister.\n     */\n    ViewService.prototype.deactivateViewConfig = function (viewConfig) {\n        trace_1.trace.traceViewServiceEvent(\"<- Removing\", viewConfig);\n        common_1.removeFrom(this.viewConfigs, viewConfig);\n    };\n    ;\n    ViewService.prototype.activateViewConfig = function (viewConfig) {\n        trace_1.trace.traceViewServiceEvent(\"-> Registering\", viewConfig);\n        this.viewConfigs.push(viewConfig);\n    };\n    ;\n    /**\n     * Allows a `ui-view` element to register its canonical name with a callback that allows it to\n     * be updated with a template, controller, and local variables.\n     *\n     * @param {String} name The fully-qualified name of the `ui-view` object being registered.\n     * @param {Function} configUpdatedCallback A callback that receives updates to the content & configuration\n     *                   of the view.\n     * @return {Function} Returns a de-registration function used when the view is destroyed.\n     */\n    ViewService.prototype.registerUIView = function (uiView) {\n        trace_1.trace.traceViewServiceUIViewEvent(\"-> Registering\", uiView);\n        var uiViews = this.uiViews;\n        var fqnMatches = function (uiv) { return uiv.fqn === uiView.fqn; };\n        if (uiViews.filter(fqnMatches).length)\n            trace_1.trace.traceViewServiceUIViewEvent(\"!!!! duplicate uiView named:\", uiView);\n        uiViews.push(uiView);\n        this.sync();\n        return function () {\n            var idx = uiViews.indexOf(uiView);\n            if (idx === -1) {\n                trace_1.trace.traceViewServiceUIViewEvent(\"Tried removing non-registered uiView\", uiView);\n                return;\n            }\n            trace_1.trace.traceViewServiceUIViewEvent(\"<- Deregistering\", uiView);\n            common_1.removeFrom(uiViews)(uiView);\n        };\n    };\n    ;\n    /**\n     * Returns the list of views currently available on the page, by fully-qualified name.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.available = function () {\n        return this.uiViews.map(hof_1.prop(\"fqn\"));\n    };\n    /**\n     * Returns the list of views on the page containing loaded content.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.active = function () {\n        return this.uiViews.filter(hof_1.prop(\"$config\")).map(hof_1.prop(\"name\"));\n    };\n    /**\n     * Normalizes a view's name from a state.views configuration block.\n     *\n     * @param context the context object (state declaration) that the view belongs to\n     * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n     *\n     * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n     */\n    ViewService.normalizeUIViewTarget = function (context, rawViewName) {\n        if (rawViewName === void 0) { rawViewName = \"\"; }\n        // TODO: Validate incoming view name with a regexp to allow:\n        // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n        // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n        var viewAtContext = rawViewName.split(\"@\");\n        var uiViewName = viewAtContext[0] || \"$default\"; // default to unnamed view\n        var uiViewContextAnchor = predicates_1.isString(viewAtContext[1]) ? viewAtContext[1] : \"^\"; // default to parent context\n        // Handle relative view-name sugar syntax.\n        // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n        var relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n        if (relativeViewNameSugar) {\n            // Clobbers existing contextAnchor (rawViewName validation will fix this)\n            uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n            uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n        }\n        if (uiViewName.charAt(0) === '!') {\n            uiViewName = uiViewName.substr(1);\n            uiViewContextAnchor = \"\"; // target absolutely from root\n        }\n        // handle parent relative targeting \"^.^.^\"\n        var relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n        if (relativeMatch.exec(uiViewContextAnchor)) {\n            var anchor = uiViewContextAnchor.split(\".\").reduce((function (anchor, x) { return anchor.parent; }), context);\n            uiViewContextAnchor = anchor.name;\n        }\n        return { uiViewName: uiViewName, uiViewContextAnchor: uiViewContextAnchor };\n    };\n    return ViewService;\n}());\nexports.ViewService = ViewService;\n//# sourceMappingURL=view.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/view/view.js\n// module id = 37\n// module chunks = 0 1","/** @module state */ /** for typedoc */\n\"use strict\";\nvar stateMatcher_1 = require(\"./stateMatcher\");\nvar stateBuilder_1 = require(\"./stateBuilder\");\nvar stateQueueManager_1 = require(\"./stateQueueManager\");\nvar common_1 = require(\"../common/common\");\nvar StateRegistry = (function () {\n    function StateRegistry(urlMatcherFactory, urlRouterProvider) {\n        this.urlRouterProvider = urlRouterProvider;\n        this.states = {};\n        this.listeners = [];\n        this.matcher = new stateMatcher_1.StateMatcher(this.states);\n        this.builder = new stateBuilder_1.StateBuilder(this.matcher, urlMatcherFactory);\n        this.stateQueue = new stateQueueManager_1.StateQueueManager(this.states, this.builder, urlRouterProvider, this.listeners);\n        var rootStateDef = {\n            name: '',\n            url: '^',\n            views: null,\n            params: {\n                '#': { value: null, type: 'hash', dynamic: true }\n            },\n            abstract: true\n        };\n        var _root = this._root = this.stateQueue.register(rootStateDef);\n        _root.navigable = null;\n    }\n    /**\n     * Listen for a State Registry events\n     *\n     * Adds a callback that is invoked when states are registered or deregistered with the StateRegistry.\n     *\n     * #### Example:\n     * ```js\n     * let allStates = registry.get();\n     *\n     * // Later, invoke deregisterFn() to remove the listener\n     * let deregisterFn = registry.onStatesChanged((event, states) => {\n     *   switch(event) {\n     *     case: 'registered':\n     *       states.forEach(state => allStates.push(state));\n     *       break;\n     *     case: 'deregistered':\n     *       states.forEach(state => {\n     *         let idx = allStates.indexOf(state);\n     *         if (idx !== -1) allStates.splice(idx, 1);\n     *       });\n     *       break;\n     *   }\n     * });\n     * ```\n     *\n     * @param listener a callback function invoked when the registered states changes.\n     *        The function receives two parameters, `event` and `state`.\n     *        See [[StateRegistryListener]]\n     * @return a function that deregisters the listener\n     */\n    StateRegistry.prototype.onStatesChanged = function (listener) {\n        this.listeners.push(listener);\n        return function deregisterListener() {\n            common_1.removeFrom(this.listeners)(listener);\n        }.bind(this);\n    };\n    /**\n     * Gets the implicit root state\n     *\n     * Gets the root of the state tree.\n     * The root state is implicitly created by UI-Router.\n     * Note: this returns the internal [[State]] representation, not a [[StateDeclaration]]\n     *\n     * @return the root [[State]]\n     */\n    StateRegistry.prototype.root = function () {\n        return this._root;\n    };\n    /**\n     * Adds a state to the registry\n     *\n     * Registers a [[StateDeclaration]] or queues it for registration.\n     *\n     * Note: a state will be queued if the state's parent isn't yet registered.\n     * It will also be queued if the queue is not yet in [[StateQueueManager.autoFlush]] mode.\n     *\n     * @param stateDefinition the definition of the state to register.\n     * @returns the internal [[State]] object.\n     *          If the state was successfully registered, then the object is fully built (See: [[StateBuilder]]).\n     *          If the state was only queued, then the object is not fully built.\n     */\n    StateRegistry.prototype.register = function (stateDefinition) {\n        return this.stateQueue.register(stateDefinition);\n    };\n    /** @hidden */\n    StateRegistry.prototype._deregisterTree = function (state) {\n        var _this = this;\n        var all = this.get().map(function (s) { return s.$$state(); });\n        var getChildren = function (states) {\n            var children = all.filter(function (s) { return states.indexOf(s.parent) !== -1; });\n            return children.length === 0 ? children : children.concat(getChildren(children));\n        };\n        var children = getChildren([state]);\n        var deregistered = [state].concat(children).reverse();\n        deregistered.forEach(function (state) {\n            _this.urlRouterProvider.removeRule(state._urlRule);\n            delete _this.states[state.name];\n        });\n        return deregistered;\n    };\n    /**\n     * Removes a state from the registry\n     *\n     * This removes a state from the registry.\n     * If the state has children, they are are also removed from the registry.\n     *\n     * @param stateOrName the state's name or object representation\n     * @returns {State[]} a list of removed states\n     */\n    StateRegistry.prototype.deregister = function (stateOrName) {\n        var _state = this.get(stateOrName);\n        if (!_state)\n            throw new Error(\"Can't deregister state; not found: \" + stateOrName);\n        var deregisteredStates = this._deregisterTree(_state.$$state());\n        this.listeners.forEach(function (listener) { return listener(\"deregistered\", deregisteredStates.map(function (s) { return s.self; })); });\n        return deregisteredStates;\n    };\n    StateRegistry.prototype.get = function (stateOrName, base) {\n        var _this = this;\n        if (arguments.length === 0)\n            return Object.keys(this.states).map(function (name) { return _this.states[name].self; });\n        var found = this.matcher.find(stateOrName, base);\n        return found && found.self || null;\n    };\n    StateRegistry.prototype.decorator = function (name, func) {\n        return this.builder.builder(name, func);\n    };\n    return StateRegistry;\n}());\nexports.StateRegistry = StateRegistry;\n//# sourceMappingURL=stateRegistry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/stateRegistry.js\n// module id = 38\n// module chunks = 0 1","\"use strict\";\n/** @module state */ /** for typedoc */\nvar predicates_1 = require(\"../common/predicates\");\nvar glob_1 = require(\"../common/glob\");\nvar common_1 = require(\"../common/common\");\nvar StateMatcher = (function () {\n    function StateMatcher(_states) {\n        this._states = _states;\n    }\n    StateMatcher.prototype.isRelative = function (stateName) {\n        stateName = stateName || \"\";\n        return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n    };\n    StateMatcher.prototype.find = function (stateOrName, base) {\n        if (!stateOrName && stateOrName !== \"\")\n            return undefined;\n        var isStr = predicates_1.isString(stateOrName);\n        var name = isStr ? stateOrName : stateOrName.name;\n        if (this.isRelative(name))\n            name = this.resolvePath(name, base);\n        var state = this._states[name];\n        if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n            return state;\n        }\n        else if (isStr) {\n            var matches = common_1.values(this._states)\n                .filter(function (state) { return new glob_1.Glob(state.name).matches(name); });\n            if (matches.length > 1) {\n                console.log(\"stateMatcher.find: Found multiple matches for \" + name + \" using glob: \", matches.map(function (match) { return match.name; }));\n            }\n            return matches[0];\n        }\n        return undefined;\n    };\n    StateMatcher.prototype.resolvePath = function (name, base) {\n        if (!base)\n            throw new Error(\"No reference point given for path '\" + name + \"'\");\n        var baseState = this.find(base);\n        var splitName = name.split(\".\"), i = 0, pathLength = splitName.length, current = baseState;\n        for (; i < pathLength; i++) {\n            if (splitName[i] === \"\" && i === 0) {\n                current = baseState;\n                continue;\n            }\n            if (splitName[i] === \"^\") {\n                if (!current.parent)\n                    throw new Error(\"Path '\" + name + \"' not valid for state '\" + baseState.name + \"'\");\n                current = current.parent;\n                continue;\n            }\n            break;\n        }\n        var relName = splitName.slice(i).join(\".\");\n        return current.name + (current.name && relName ? \".\" : \"\") + relName;\n    };\n    return StateMatcher;\n}());\nexports.StateMatcher = StateMatcher;\n//# sourceMappingURL=stateMatcher.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/stateMatcher.js\n// module id = 39\n// module chunks = 0 1","\"use strict\";\n/** @module state */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar strings_1 = require(\"../common/strings\");\nvar hof_1 = require(\"../common/hof\");\nvar param_1 = require(\"../params/param\");\nvar resolvable_1 = require(\"../resolve/resolvable\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar parseUrl = function (url) {\n    if (!predicates_1.isString(url))\n        return false;\n    var root = url.charAt(0) === '^';\n    return { val: root ? url.substring(1) : url, root: root };\n};\nfunction nameBuilder(state) {\n    if (state.lazyLoad)\n        state.name = state.self.name + \".**\";\n    return state.name;\n}\nfunction selfBuilder(state) {\n    state.self.$$state = function () { return state; };\n    return state.self;\n}\nfunction dataBuilder(state) {\n    if (state.parent && state.parent.data) {\n        state.data = state.self.data = common_1.inherit(state.parent.data, state.data);\n    }\n    return state.data;\n}\nvar getUrlBuilder = function ($urlMatcherFactoryProvider, root) {\n    return function urlBuilder(state) {\n        var stateDec = state;\n        if (stateDec && stateDec.url && stateDec.lazyLoad) {\n            stateDec.url += \"{remainder:any}\"; // match any path (.*)\n        }\n        var parsed = parseUrl(stateDec.url), parent = state.parent;\n        var url = !parsed ? stateDec.url : $urlMatcherFactoryProvider.compile(parsed.val, {\n            params: state.params || {},\n            paramMap: function (paramConfig, isSearch) {\n                if (stateDec.reloadOnSearch === false && isSearch)\n                    paramConfig = common_1.extend(paramConfig || {}, { dynamic: true });\n                return paramConfig;\n            }\n        });\n        if (!url)\n            return null;\n        if (!$urlMatcherFactoryProvider.isMatcher(url))\n            throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n        return (parsed && parsed.root) ? url : ((parent && parent.navigable) || root()).url.append(url);\n    };\n};\nvar getNavigableBuilder = function (isRoot) {\n    return function navigableBuilder(state) {\n        return !isRoot(state) && state.url ? state : (state.parent ? state.parent.navigable : null);\n    };\n};\nvar getParamsBuilder = function (paramTypes) {\n    return function paramsBuilder(state) {\n        var makeConfigParam = function (config, id) { return param_1.Param.fromConfig(id, null, config, paramTypes); };\n        var urlParams = (state.url && state.url.parameters({ inherit: false })) || [];\n        var nonUrlParams = common_1.values(common_1.mapObj(common_1.omit(state.params || {}, urlParams.map(hof_1.prop('id'))), makeConfigParam));\n        return urlParams.concat(nonUrlParams).map(function (p) { return [p.id, p]; }).reduce(common_1.applyPairs, {});\n    };\n};\nfunction pathBuilder(state) {\n    return state.parent ? state.parent.path.concat(state) : [state];\n}\nfunction includesBuilder(state) {\n    var includes = state.parent ? common_1.extend({}, state.parent.includes) : {};\n    includes[state.name] = true;\n    return includes;\n}\n/**\n * This is a [[StateBuilder.builder]] function for the `resolve:` block on a [[StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[State]] object from a raw [[StateDeclaration]], this builder\n * validates the `resolve` property and converts it to a [[Resolvable]] array.\n *\n * resolve: input value can be:\n *\n * {\n *   // analyzed but not injected\n *   myFooResolve: function() { return \"myFooData\"; },\n *\n *   // function.toString() parsed, \"DependencyName\" dep as string (not min-safe)\n *   myBarResolve: function(DependencyName) { return DependencyName.fetchSomethingAsPromise() },\n *\n *   // Array split; \"DependencyName\" dep as string\n *   myBazResolve: [ \"DependencyName\", function(dep) { return dep.fetchSomethingAsPromise() },\n *\n *   // Array split; DependencyType dep as token (compared using ===)\n *   myQuxResolve: [ DependencyType, function(dep) { return dep.fetchSometingAsPromise() },\n *\n *   // val.$inject used as deps\n *   // where:\n *   //     corgeResolve.$inject = [\"DependencyName\"];\n *   //     function corgeResolve(dep) { dep.fetchSometingAsPromise() }\n *   // then \"DependencyName\" dep as string\n *   myCorgeResolve: corgeResolve,\n *\n *  // inject service by name\n *  // When a string is found, desugar creating a resolve that injects the named service\n *   myGraultResolve: \"SomeService\"\n * }\n *\n * or:\n *\n * [\n *   new Resolvable(\"myFooResolve\", function() { return \"myFooData\" }),\n *   new Resolvable(\"myBarResolve\", function(dep) { return dep.fetchSomethingAsPromise() }, [ \"DependencyName\" ]),\n *   { provide: \"myBazResolve\", useFactory: function(dep) { dep.fetchSomethingAsPromise() }, deps: [ \"DependencyName\" ] }\n * ]\n */\nfunction resolvablesBuilder(state) {\n    /** convert resolve: {} and resolvePolicy: {} objects to an array of tuples */\n    var objects2Tuples = function (resolveObj, resolvePolicies) {\n        return Object.keys(resolveObj || {}).map(function (token) { return ({ token: token, val: resolveObj[token], deps: undefined, policy: resolvePolicies[token] }); });\n    };\n    /** fetch DI annotations from a function or ng1-style array */\n    var annotate = function (fn) {\n        return fn['$inject'] || coreservices_1.services.$injector.annotate(fn, coreservices_1.services.$injector.strictDi);\n    };\n    /** true if the object has both `token` and `resolveFn`, and is probably a [[ResolveLiteral]] */\n    var isResolveLiteral = function (obj) { return !!(obj.token && obj.resolveFn); };\n    /** true if the object looks like a provide literal, or a ng2 Provider */\n    var isLikeNg2Provider = function (obj) { return !!((obj.provide || obj.token) && (obj.useValue || obj.useFactory || obj.useExisting || obj.useClass)); };\n    /** true if the object looks like a tuple from obj2Tuples */\n    var isTupleFromObj = function (obj) { return !!(obj && obj.val && (predicates_1.isString(obj.val) || predicates_1.isArray(obj.val) || predicates_1.isFunction(obj.val))); };\n    /** extracts the token from a Provider or provide literal */\n    var token = function (p) { return p.provide || p.token; };\n    /** Given a literal resolve or provider object, returns a Resolvable */\n    var literal2Resolvable = hof_1.pattern([\n        [hof_1.prop('resolveFn'), function (p) { return new resolvable_1.Resolvable(token(p), p.resolveFn, p.deps, p.policy); }],\n        [hof_1.prop('useFactory'), function (p) { return new resolvable_1.Resolvable(token(p), p.useFactory, (p.deps || p.dependencies), p.policy); }],\n        [hof_1.prop('useClass'), function (p) { return new resolvable_1.Resolvable(token(p), function () { return new p.useClass(); }, [], p.policy); }],\n        [hof_1.prop('useValue'), function (p) { return new resolvable_1.Resolvable(token(p), function () { return p.useValue; }, [], p.policy, p.useValue); }],\n        [hof_1.prop('useExisting'), function (p) { return new resolvable_1.Resolvable(token(p), common_1.identity, [p.useExisting], p.policy); }],\n    ]);\n    var tuple2Resolvable = hof_1.pattern([\n        [hof_1.pipe(hof_1.prop(\"val\"), predicates_1.isString), function (tuple) { return new resolvable_1.Resolvable(tuple.token, common_1.identity, [tuple.val], tuple.policy); }],\n        [hof_1.pipe(hof_1.prop(\"val\"), predicates_1.isArray), function (tuple) { return new resolvable_1.Resolvable(tuple.token, common_1.tail(tuple.val), tuple.val.slice(0, -1), tuple.policy); }],\n        [hof_1.pipe(hof_1.prop(\"val\"), predicates_1.isFunction), function (tuple) { return new resolvable_1.Resolvable(tuple.token, tuple.val, annotate(tuple.val), tuple.policy); }],\n    ]);\n    var item2Resolvable = hof_1.pattern([\n        [hof_1.is(resolvable_1.Resolvable), function (r) { return r; }],\n        [isResolveLiteral, literal2Resolvable],\n        [isLikeNg2Provider, literal2Resolvable],\n        [isTupleFromObj, tuple2Resolvable],\n        [hof_1.val(true), function (obj) { throw new Error(\"Invalid resolve value: \" + strings_1.stringify(obj)); }]\n    ]);\n    // If resolveBlock is already an array, use it as-is.\n    // Otherwise, assume it's an object and convert to an Array of tuples\n    var decl = state.resolve;\n    var items = predicates_1.isArray(decl) ? decl : objects2Tuples(decl, state.resolvePolicy || {});\n    return items.map(item2Resolvable);\n}\nexports.resolvablesBuilder = resolvablesBuilder;\n/**\n * @internalapi A internal global service\n *\n * StateBuilder is a factory for the internal [[State]] objects.\n *\n * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n * [[State]] object, which has an API and is used internally.\n *\n * Custom properties or API may be added to the internal [[State]] object by registering a decorator function\n * using the [[builder]] method.\n */\nvar StateBuilder = (function () {\n    function StateBuilder(matcher, $urlMatcherFactoryProvider) {\n        this.matcher = matcher;\n        var self = this;\n        var root = function () { return matcher.find(\"\"); };\n        var isRoot = function (state) { return state.name === \"\"; };\n        function parentBuilder(state) {\n            if (isRoot(state))\n                return null;\n            return matcher.find(self.parentName(state)) || root();\n        }\n        this.builders = {\n            name: [nameBuilder],\n            self: [selfBuilder],\n            parent: [parentBuilder],\n            data: [dataBuilder],\n            // Build a URLMatcher if necessary, either via a relative or absolute URL\n            url: [getUrlBuilder($urlMatcherFactoryProvider, root)],\n            // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n            navigable: [getNavigableBuilder(isRoot)],\n            params: [getParamsBuilder($urlMatcherFactoryProvider.paramTypes)],\n            // Each framework-specific ui-router implementation should define its own `views` builder\n            // e.g., src/ng1/statebuilders/views.ts\n            views: [],\n            // Keep a full path from the root down to this state as this is needed for state activation.\n            path: [pathBuilder],\n            // Speed up $state.includes() as it's used a lot\n            includes: [includesBuilder],\n            resolvables: [resolvablesBuilder]\n        };\n    }\n    /**\n     * Registers a [[BuilderFunction]] for a specific [[State]] property (e.g., `parent`, `url`, or `path`).\n     * More than one BuilderFunction can be registered for a given property.\n     *\n     * The BuilderFunction(s) will be used to define the property on any subsequently built [[State]] objects.\n     *\n     * @param name The name of the State property being registered for.\n     * @param fn The BuilderFunction which will be used to build the State property\n     * @returns a function which deregisters the BuilderFunction\n     */\n    StateBuilder.prototype.builder = function (name, fn) {\n        var builders = this.builders;\n        var array = builders[name] || [];\n        // Backwards compat: if only one builder exists, return it, else return whole arary.\n        if (predicates_1.isString(name) && !predicates_1.isDefined(fn))\n            return array.length > 1 ? array : array[0];\n        if (!predicates_1.isString(name) || !predicates_1.isFunction(fn))\n            return;\n        builders[name] = array;\n        builders[name].push(fn);\n        return function () { return builders[name].splice(builders[name].indexOf(fn, 1)) && null; };\n    };\n    /**\n     * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n     * properties and API built.\n     *\n     * @param state an uninitialized State object\n     * @returns the built State object\n     */\n    StateBuilder.prototype.build = function (state) {\n        var _a = this, matcher = _a.matcher, builders = _a.builders;\n        var parent = this.parentName(state);\n        if (parent && !matcher.find(parent))\n            return null;\n        for (var key in builders) {\n            if (!builders.hasOwnProperty(key))\n                continue;\n            var chain = builders[key].reduce(function (parentFn, step) { return function (_state) { return step(_state, parentFn); }; }, common_1.noop);\n            state[key] = chain(state);\n        }\n        return state;\n    };\n    StateBuilder.prototype.parentName = function (state) {\n        var name = state.name || \"\";\n        var segments = name.split('.');\n        if (segments.length > 1) {\n            if (state.parent) {\n                throw new Error(\"States that specify the 'parent:' property should not have a '.' in their name (\" + name + \")\");\n            }\n            var lastSegment = segments.pop();\n            if (lastSegment === '**')\n                segments.pop();\n            return segments.join(\".\");\n        }\n        if (!state.parent)\n            return \"\";\n        return predicates_1.isString(state.parent) ? state.parent : state.parent.name;\n    };\n    StateBuilder.prototype.name = function (state) {\n        var name = state.name;\n        if (name.indexOf('.') !== -1 || !state.parent)\n            return name;\n        var parentName = predicates_1.isString(state.parent) ? state.parent : state.parent.name;\n        return parentName ? parentName + \".\" + name : name;\n    };\n    return StateBuilder;\n}());\nexports.StateBuilder = StateBuilder;\n//# sourceMappingURL=stateBuilder.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/stateBuilder.js\n// module id = 40\n// module chunks = 0 1","\"use strict\";\n/** @module state */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar stateObject_1 = require(\"./stateObject\");\nvar StateQueueManager = (function () {\n    function StateQueueManager(states, builder, $urlRouterProvider, listeners) {\n        this.states = states;\n        this.builder = builder;\n        this.$urlRouterProvider = $urlRouterProvider;\n        this.listeners = listeners;\n        this.queue = [];\n    }\n    StateQueueManager.prototype.register = function (config) {\n        var _a = this, states = _a.states, queue = _a.queue, $state = _a.$state;\n        // Wrap a new object around the state so we can store our private details easily.\n        // @TODO: state = new State(extend({}, config, { ... }))\n        var state = common_1.inherit(new stateObject_1.State(), common_1.extend({}, config, {\n            self: config,\n            resolve: config.resolve || [],\n            toString: function () { return config.name; }\n        }));\n        if (!predicates_1.isString(state.name))\n            throw new Error(\"State must have a valid name\");\n        if (states.hasOwnProperty(state.name) || common_1.pluck(queue, 'name').indexOf(state.name) !== -1)\n            throw new Error(\"State '\" + state.name + \"' is already defined\");\n        queue.push(state);\n        if (this.$state) {\n            this.flush($state);\n        }\n        return state;\n    };\n    StateQueueManager.prototype.flush = function ($state) {\n        var _a = this, queue = _a.queue, states = _a.states, builder = _a.builder;\n        var registered = [], // states that got registered\n        orphans = [], // states that dodn't yet have a parent registered\n        previousQueueLength = {}; // keep track of how long the queue when an orphan was first encountered\n        while (queue.length > 0) {\n            var state = queue.shift();\n            var result = builder.build(state);\n            var orphanIdx = orphans.indexOf(state);\n            if (result) {\n                if (states.hasOwnProperty(state.name))\n                    throw new Error(\"State '\" + name + \"' is already defined\");\n                states[state.name] = state;\n                this.attachRoute($state, state);\n                if (orphanIdx >= 0)\n                    orphans.splice(orphanIdx, 1);\n                registered.push(state);\n                continue;\n            }\n            var prev = previousQueueLength[state.name];\n            previousQueueLength[state.name] = queue.length;\n            if (orphanIdx >= 0 && prev === queue.length) {\n                // Wait until two consecutive iterations where no additional states were dequeued successfully.\n                // throw new Error(`Cannot register orphaned state '${state.name}'`);\n                queue.push(state);\n                return states;\n            }\n            else if (orphanIdx < 0) {\n                orphans.push(state);\n            }\n            queue.push(state);\n        }\n        if (registered.length) {\n            this.listeners.forEach(function (listener) { return listener(\"registered\", registered.map(function (s) { return s.self; })); });\n        }\n        return states;\n    };\n    StateQueueManager.prototype.autoFlush = function ($state) {\n        this.$state = $state;\n        this.flush($state);\n    };\n    StateQueueManager.prototype.attachRoute = function ($state, state) {\n        var $urlRouterProvider = this.$urlRouterProvider;\n        if (state.abstract || !state.url)\n            return;\n        $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\n                if ($state.$current.navigable !== state || !common_1.equalForKeys($match, $stateParams)) {\n                    $state.transitionTo(state, $match, { inherit: true, source: \"url\" });\n                }\n            }], function (rule) { return state._urlRule = rule; });\n    };\n    return StateQueueManager;\n}());\nexports.StateQueueManager = StateQueueManager;\n//# sourceMappingURL=stateQueueManager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/stateQueueManager.js\n// module id = 41\n// module chunks = 0 1","/** @module state */ /** for typedoc */\n\"use strict\";\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\n/**\n * Internal representation of a UI-Router state.\n *\n * Instances of this class are created when a [[StateDeclaration]] is registered with the [[StateRegistry]].\n *\n * A registered [[StateDeclaration]] is augmented with a getter ([[StateDeclaration.$$state]]) which returns the corresponding [[State]] object.\n *\n * This class prototypally inherits from the corresponding [[StateDeclaration]].\n * Each of its own properties (i.e., `hasOwnProperty`) are built using builders from the [[StateBuilder]].\n */\nvar State = (function () {\n    function State(config) {\n        common_1.extend(this, config);\n        // Object.freeze(this);\n    }\n    /**\n     * Returns true if the provided parameter is the same state.\n     *\n     * Compares the identity of the state against the passed value, which is either an object\n     * reference to the actual `State` instance, the original definition object passed to\n     * `$stateProvider.state()`, or the fully-qualified name.\n     *\n     * @param ref Can be one of (a) a `State` instance, (b) an object that was passed\n     *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n     * @returns Returns `true` if `ref` matches the current `State` instance.\n     */\n    State.prototype.is = function (ref) {\n        return this === ref || this.self === ref || this.fqn() === ref;\n    };\n    /**\n     * @deprecated this does not properly handle dot notation\n     * @returns Returns a dot-separated name of the state.\n     */\n    State.prototype.fqn = function () {\n        if (!this.parent || !(this.parent instanceof this.constructor))\n            return this.name;\n        var name = this.parent.fqn();\n        return name ? name + \".\" + this.name : this.name;\n    };\n    /**\n     * Returns the root node of this state's tree.\n     *\n     * @returns The root of this state's tree.\n     */\n    State.prototype.root = function () {\n        return this.parent && this.parent.root() || this;\n    };\n    /**\n     * Gets the state's `Param`eters\n     *\n     * Gets [[Param]] information that is owned by the state.\n     * If `opts.inherit` is true, it also includes the ancestor states' [[Param]] information.\n     *\n     * @param opts options\n     */\n    State.prototype.parameters = function (opts) {\n        opts = common_1.defaults(opts, { inherit: true });\n        var inherited = opts.inherit && this.parent && this.parent.parameters() || [];\n        return inherited.concat(common_1.values(this.params));\n    };\n    /**\n     * Returns a single [[Param]] that is owned by the state\n     *\n     * If `opts.inherit` is true, it also searches the ancestor states` [[Param]] information.\n     * @param id the name of the [[Param]] to return\n     * @param opts options\n     */\n    State.prototype.parameter = function (id, opts) {\n        if (opts === void 0) { opts = {}; }\n        return (this.url && this.url.parameter(id, opts) ||\n            common_1.find(common_1.values(this.params), hof_1.propEq('id', id)) ||\n            opts.inherit && this.parent && this.parent.parameter(id));\n    };\n    State.prototype.toString = function () {\n        return this.fqn();\n    };\n    return State;\n}());\nexports.State = State;\n//# sourceMappingURL=stateObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/stateObject.js\n// module id = 42\n// module chunks = 0 1","\"use strict\";\n/** @module state */ /** */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar queue_1 = require(\"../common/queue\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar pathFactory_1 = require(\"../path/pathFactory\");\nvar node_1 = require(\"../path/node\");\nvar transitionService_1 = require(\"../transition/transitionService\");\nvar rejectFactory_1 = require(\"../transition/rejectFactory\");\nvar targetState_1 = require(\"./targetState\");\nvar param_1 = require(\"../params/param\");\nvar glob_1 = require(\"../common/glob\");\nvar common_2 = require(\"../common/common\");\nvar common_3 = require(\"../common/common\");\nvar resolveContext_1 = require(\"../resolve/resolveContext\");\n/**\n * Provides state related service functions\n *\n * This class provides services related to ui-router states.\n * An instance of this class is located on the global [[UIRouter]] object.\n */\nvar StateService = (function () {\n    /** @internalapi */\n    function StateService(router) {\n        this.router = router;\n        /** @internalapi */\n        this.invalidCallbacks = [];\n        /** @hidden */\n        this._defaultErrorHandler = function $defaultErrorHandler($error$) {\n            if ($error$ instanceof Error && $error$.stack) {\n                console.error($error$);\n                console.error($error$.stack);\n            }\n            else if ($error$ instanceof rejectFactory_1.Rejection) {\n                console.error($error$.toString());\n                if ($error$.detail && $error$.detail.stack)\n                    console.error($error$.detail.stack);\n            }\n            else {\n                console.error($error$);\n            }\n        };\n        var getters = ['current', '$current', 'params', 'transition'];\n        var boundFns = Object.keys(StateService.prototype).filter(function (key) { return getters.indexOf(key) === -1; });\n        common_3.bindFunctions(StateService.prototype, this, this, boundFns);\n    }\n    Object.defineProperty(StateService.prototype, \"transition\", {\n        /**\n         * The [[Transition]] currently in progress (or null)\n         *\n         * This is a passthrough through to [[UIRouterGlobals.transition]]\n         */\n        get: function () { return this.router.globals.transition; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"params\", {\n        /**\n         * The latest successful state parameters\n         *\n         * This is a passthrough through to [[UIRouterGlobals.params]]\n         */\n        get: function () { return this.router.globals.params; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"current\", {\n        /**\n         * The current [[StateDeclaration]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.current]]\n         */\n        get: function () { return this.router.globals.current; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"$current\", {\n        /**\n         * The current [[State]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.$current]]\n         */\n        get: function () { return this.router.globals.$current; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Handler for when [[transitionTo]] is called with an invalid state.\n     *\n     * Invokes the [[onInvalid]] callbacks, in natural order.\n     * Each callback's return value is checked in sequence until one of them returns an instance of TargetState.\n     * The results of the callbacks are wrapped in $q.when(), so the callbacks may return promises.\n     *\n     * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and the result returned.\n     *\n     * @internalapi\n     */\n    StateService.prototype._handleInvalidTargetState = function (fromPath, toState) {\n        var _this = this;\n        var fromState = pathFactory_1.PathFactory.makeTargetState(fromPath);\n        var globals = this.router.globals;\n        var latestThing = function () { return globals.transitionHistory.peekTail(); };\n        var latest = latestThing();\n        var callbackQueue = new queue_1.Queue(this.invalidCallbacks.slice());\n        var injector = new resolveContext_1.ResolveContext(fromPath).injector();\n        var checkForRedirect = function (result) {\n            if (!(result instanceof targetState_1.TargetState)) {\n                return;\n            }\n            var target = result;\n            // Recreate the TargetState, in case the state is now defined.\n            target = _this.target(target.identifier(), target.params(), target.options());\n            if (!target.valid())\n                return rejectFactory_1.Rejection.invalid(target.error()).toPromise();\n            if (latestThing() !== latest)\n                return rejectFactory_1.Rejection.superseded().toPromise();\n            return _this.transitionTo(target.identifier(), target.params(), target.options());\n        };\n        function invokeNextCallback() {\n            var nextCallback = callbackQueue.dequeue();\n            if (nextCallback === undefined)\n                return rejectFactory_1.Rejection.invalid(toState.error()).toPromise();\n            var callbackResult = coreservices_1.services.$q.when(nextCallback(toState, fromState, injector));\n            return callbackResult.then(checkForRedirect).then(function (result) { return result || invokeNextCallback(); });\n        }\n        return invokeNextCallback();\n    };\n    /**\n     * Registers an Invalid State handler\n     *\n     * Registers a [[OnInvalidCallback]] function to be invoked when [[StateService.transitionTo]]\n     * has been called with an invalid state reference parameter\n     *\n     * Example:\n     * ```js\n     * stateService.onInvalid(function(to, from, injector) {\n     *   if (to.name() === 'foo') {\n     *     let lazyLoader = injector.get('LazyLoadService');\n     *     return lazyLoader.load('foo')\n     *         .then(() => stateService.target('foo'));\n     *   }\n     * });\n     * ```\n     *\n     * @param {function} callback invoked when the toState is invalid\n     *   This function receives the (invalid) toState, the fromState, and an injector.\n     *   The function may optionally return a [[TargetState]] or a Promise for a TargetState.\n     *   If one is returned, it is treated as a redirect.\n     *\n     * @returns a function which deregisters the callback\n     */\n    StateService.prototype.onInvalid = function (callback) {\n        this.invalidCallbacks.push(callback);\n        return function deregisterListener() {\n            common_1.removeFrom(this.invalidCallbacks)(callback);\n        }.bind(this);\n    };\n    /**\n     * Reloads the current state\n     *\n     * A method that force reloads the current state, or a partial state hierarchy.\n     * All resolves are re-resolved, and components reinstantiated.\n     *\n     * #### Example:\n     * ```js\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * ```\n     *\n     * Note: `reload()` is just an alias for:\n     *\n     * ```js\n     * $state.transitionTo($state.current, $state.params, {\n     *   reload: true, inherit: false\n     * });\n     * ```\n     *\n     * @param reloadState A state name or a state object.\n     *    If present, this state and all its children will be reloaded, but ancestors will not reload.\n     *\n     * #### Example:\n     * ```js\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n     * //and current state is 'contacts.detail.item'\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * ```\n     *\n     * @returns A promise representing the state of the new transition. See [[StateService.go]]\n     */\n    StateService.prototype.reload = function (reloadState) {\n        return this.transitionTo(this.current, this.params, {\n            reload: predicates_1.isDefined(reloadState) ? reloadState : true,\n            inherit: false,\n            notify: false\n        });\n    };\n    ;\n    /**\n     * Transition to a different state or parameters\n     *\n     * Convenience method for transitioning to a new state.\n     *\n     * `$state.go` calls `$state.transitionTo` internally but automatically sets options to\n     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`.\n     * This allows you to easily use an absolute or relative to path and specify\n     * only the parameters you'd like to update (while letting unspecified parameters\n     * inherit from the currently active ancestor states).\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     *\n     * @param to Absolute state name, state object, or relative state path. Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to a parent state\n     * - `$state.go('^.sibling')` - will go to a sibling state\n     * - `$state.go('.child.grandchild')` - will go to grandchild state\n     *\n     * @param params A map of the parameters that will be sent to the state, will populate $stateParams.\n     *\n     *    Any parameters that are not specified will be inherited from currently defined parameters (because of `inherit: true`).\n     *    This allows, for example, going to a sibling state that shares parameters specified in a parent state.\n     *\n     *    Parameter inheritance only works between common ancestor states, I.e.\n     *    transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n     *    will get you all current parameters, etc.\n     *\n     * @param options Transition options\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     *\n     * - Possible success values:\n     *    - $state.current\n     *\n     * - Possible rejection reasons:\n     *   - transition superseded - when a newer transition has been started after this one\n     *   - transition aborted - when the transition is cancelled by a Transition Hook returning `false`\n     *   - transition failed - when a transition hook errors\n     *   - resolve error - when a resolve has errored or rejected\n     *\n     */\n    StateService.prototype.go = function (to, params, options) {\n        var defautGoOpts = { relative: this.$current, inherit: true };\n        var transOpts = common_1.defaults(options, defautGoOpts, transitionService_1.defaultTransOpts);\n        return this.transitionTo(to, params, transOpts);\n    };\n    ;\n    /**\n     * Creates a [[TargetState]]\n     *\n     * This is a factory method for creating a TargetState\n     *\n     * This may be returned from a Transition Hook to redirect a transition, for example.\n     */\n    StateService.prototype.target = function (identifier, params, options) {\n        if (options === void 0) { options = {}; }\n        // If we're reloading, find the state object to reload from\n        if (predicates_1.isObject(options.reload) && !options.reload.name)\n            throw new Error('Invalid reload state object');\n        var reg = this.router.stateRegistry;\n        options.reloadState = options.reload === true ? reg.root() : reg.matcher.find(options.reload, options.relative);\n        if (options.reload && !options.reloadState)\n            throw new Error(\"No such reload state '\" + (predicates_1.isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        var stateDefinition = reg.matcher.find(identifier, options.relative);\n        return new targetState_1.TargetState(identifier, stateDefinition, params, options);\n    };\n    ;\n    /**\n     * Low-level method for transitioning to a new state.\n     *\n     * The [[go]] method (which uses `transitionTo` internally) is recommended in most situations.\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to State name or state object.\n     * @param toParams A map of the parameters that will be sent to the state,\n     *      will populate $stateParams.\n     * @param options Transition options\n     *\n     * @returns A promise representing the state of the new transition. See [[go]]\n     */\n    StateService.prototype.transitionTo = function (to, toParams, options) {\n        var _this = this;\n        if (toParams === void 0) { toParams = {}; }\n        if (options === void 0) { options = {}; }\n        var router = this.router;\n        var globals = router.globals;\n        var transHistory = globals.transitionHistory;\n        options = common_1.defaults(options, transitionService_1.defaultTransOpts);\n        options = common_1.extend(options, { current: transHistory.peekTail.bind(transHistory) });\n        var ref = this.target(to, toParams, options);\n        var latestSuccess = globals.successfulTransitions.peekTail();\n        var rootPath = function () { return [new node_1.PathNode(_this.router.stateRegistry.root())]; };\n        var currentPath = latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n        if (!ref.exists())\n            return this._handleInvalidTargetState(currentPath, ref);\n        if (!ref.valid())\n            return common_1.silentRejection(ref.error());\n        /**\n         * Special handling for Ignored, Aborted, and Redirected transitions\n         *\n         * The semantics for the transition.run() promise and the StateService.transitionTo()\n         * promise differ. For instance, the run() promise may be rejected because it was\n         * IGNORED, but the transitionTo() promise is resolved because from the user perspective\n         * no error occurred.  Likewise, the transition.run() promise may be rejected because of\n         * a Redirect, but the transitionTo() promise is chained to the new Transition's promise.\n         */\n        var rejectedTransitionHandler = function (transition) { return function (error) {\n            if (error instanceof rejectFactory_1.Rejection) {\n                if (error.type === rejectFactory_1.RejectType.IGNORED) {\n                    // Consider ignored `Transition.run()` as a successful `transitionTo`\n                    router.urlRouter.update();\n                    return coreservices_1.services.$q.when(globals.current);\n                }\n                var detail = error.detail;\n                if (error.type === rejectFactory_1.RejectType.SUPERSEDED && error.redirected && detail instanceof targetState_1.TargetState) {\n                    // If `Transition.run()` was redirected, allow the `transitionTo()` promise to resolve successfully\n                    // by returning the promise for the new (redirect) `Transition.run()`.\n                    var redirect = transition.redirect(detail);\n                    return redirect.run().catch(rejectedTransitionHandler(redirect));\n                }\n                if (error.type === rejectFactory_1.RejectType.ABORTED) {\n                    router.urlRouter.update();\n                }\n            }\n            var errorHandler = _this.defaultErrorHandler();\n            errorHandler(error);\n            return coreservices_1.services.$q.reject(error);\n        }; };\n        var transition = this.router.transitionService.create(currentPath, ref);\n        var transitionToPromise = transition.run().catch(rejectedTransitionHandler(transition));\n        common_1.silenceUncaughtInPromise(transitionToPromise); // issue #2676\n        // Return a promise for the transition, which also has the transition object on it.\n        return common_1.extend(transitionToPromise, { transition: transition });\n    };\n    ;\n    /**\n     * Checks if the current state *is* the provided state\n     *\n     * Similar to [[includes]] but only checks for the full state name.\n     * If params is supplied then it will be tested for strict equality against the current\n     * active params object, so all params must match with none missing and no extras.\n     *\n     * #### Example:\n     * ```js\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     * ```\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * ```html\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * ```\n     *\n     * @param stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns Returns true if it is the state.\n     */\n    StateService.prototype.is = function (stateOrName, params, options) {\n        options = common_1.defaults(options, { relative: this.$current });\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!predicates_1.isDefined(state))\n            return undefined;\n        if (this.$current !== state)\n            return false;\n        return predicates_1.isDefined(params) && params !== null ? param_1.Param.equals(state.parameters(), this.params, params) : true;\n    };\n    ;\n    /**\n     * Checks if the current state *includes* the provided state\n     *\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * #### Example when `$state.$current.name === 'contacts.details.item'`\n     * ```js\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     * ```\n     *\n     * #### Glob Examples when `* $state.$current.name === 'contacts.details.item.url'`:\n     * ```js\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * ```\n     *\n     * @param stateOrName A partial name, relative name, glob pattern,\n     *   or state object to be searched for within the current state name.\n     * @param params A param object, e.g. `{sectionId: section.id}`,\n     *   that you'd like to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    StateService.prototype.includes = function (stateOrName, params, options) {\n        options = common_1.defaults(options, { relative: this.$current });\n        var glob = predicates_1.isString(stateOrName) && glob_1.Glob.fromString(stateOrName);\n        if (glob) {\n            if (!glob.matches(this.$current.name))\n                return false;\n            stateOrName = this.$current.name;\n        }\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n        if (!predicates_1.isDefined(state))\n            return undefined;\n        if (!predicates_1.isDefined(include[state.name]))\n            return false;\n        // @TODO Replace with Param.equals() ?\n        return params ? common_2.equalForKeys(param_1.Param.values(state.parameters(), params), this.params, Object.keys(params)) : true;\n    };\n    ;\n    /**\n     * Generates a URL for a state and parameters\n     *\n     * Returns the url for the given state populated with the given params.\n     *\n     * #### Example:\n     * ```js\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * ```\n     *\n     * @param stateOrName The state name or state object you'd like to generate a url from.\n     * @param params An object of parameter values to fill the state's required parameters.\n     * @param options Options object. The options are:\n     *\n     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n     *    ancestor with a valid url).\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'),\n     *    defines which state to be relative from.\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     *\n     * @returns {string} compiled state url\n     */\n    StateService.prototype.href = function (stateOrName, params, options) {\n        var defaultHrefOpts = {\n            lossy: true,\n            inherit: true,\n            absolute: false,\n            relative: this.$current\n        };\n        options = common_1.defaults(options, defaultHrefOpts);\n        params = params || {};\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!predicates_1.isDefined(state))\n            return null;\n        if (options.inherit)\n            params = this.params.$inherit(params, this.$current, state);\n        var nav = (state && options.lossy) ? state.navigable : state;\n        if (!nav || nav.url === undefined || nav.url === null) {\n            return null;\n        }\n        return this.router.urlRouter.href(nav.url, param_1.Param.values(state.parameters(), params), {\n            absolute: options.absolute\n        });\n    };\n    ;\n    /**\n     * Sets or gets the default [[transitionTo]] error handler.\n     *\n     * The error handler is called when a [[Transition]] is rejected or when any error occurred during the Transition.\n     * This includes errors caused by resolves and transition hooks.\n     *\n     * Note:\n     * This handler does not receive certain Transition rejections.\n     * Redirected and Ignored Transitions are not considered to be errors by [[StateService.transitionTo]].\n     *\n     * The built-in default error handler logs the error to the console.\n     *\n     * You can provide your own custom handler.\n     *\n     * #### Example:\n     * ```js\n     * stateService.defaultErrorHandler(function() {\n     *   // Do not log transitionTo errors\n     * });\n     * ```\n     *\n     * @param handler a global error handler function\n     * @returns the current global error handler\n     */\n    StateService.prototype.defaultErrorHandler = function (handler) {\n        return this._defaultErrorHandler = handler || this._defaultErrorHandler;\n    };\n    StateService.prototype.get = function (stateOrName, base) {\n        var reg = this.router.stateRegistry;\n        if (arguments.length === 0)\n            return reg.get();\n        return reg.get(stateOrName, base || this.$current);\n    };\n    return StateService;\n}());\nexports.StateService = StateService;\n//# sourceMappingURL=stateService.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/stateService.js\n// module id = 43\n// module chunks = 0 1","\"use strict\";\n/** @module core */ /** */\nvar stateParams_1 = require(\"./params/stateParams\");\nvar queue_1 = require(\"./common/queue\");\nvar common_1 = require(\"./common/common\");\n/**\n * Global mutable state\n */\nvar Globals = (function () {\n    function Globals(transitionService) {\n        var _this = this;\n        this.params = new stateParams_1.StateParams();\n        this.transitionHistory = new queue_1.Queue([], 1);\n        this.successfulTransitions = new queue_1.Queue([], 1);\n        var beforeNewTransition = function ($transition$) {\n            _this.transition = $transition$;\n            _this.transitionHistory.enqueue($transition$);\n            var updateGlobalState = function () {\n                _this.successfulTransitions.enqueue($transition$);\n                _this.$current = $transition$.$to();\n                _this.current = _this.$current.self;\n                common_1.copy($transition$.params(), _this.params);\n            };\n            $transition$.onSuccess({}, updateGlobalState, { priority: 10000 });\n            var clearCurrentTransition = function () { if (_this.transition === $transition$)\n                _this.transition = null; };\n            $transition$.promise.then(clearCurrentTransition, clearCurrentTransition);\n        };\n        transitionService.onBefore({}, beforeNewTransition);\n    }\n    return Globals;\n}());\nexports.Globals = Globals;\n//# sourceMappingURL=globals.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/globals.js\n// module id = 44\n// module chunks = 0 1","\"use strict\";\n/** @module params */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar StateParams = (function () {\n    function StateParams(params) {\n        if (params === void 0) { params = {}; }\n        common_1.extend(this, params);\n    }\n    /**\n     * Merges a set of parameters with all parameters inherited between the common parents of the\n     * current state and a given destination state.\n     *\n     * @param {Object} newParams The set of parameters which will be composited with inherited params.\n     * @param {Object} $current Internal definition of object representing the current state.\n     * @param {Object} $to Internal definition of object representing state to transition to.\n     */\n    StateParams.prototype.$inherit = function (newParams, $current, $to) {\n        var parents = common_1.ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n        for (var i in parents) {\n            if (!parents[i] || !parents[i].params)\n                continue;\n            parentParams = Object.keys(parents[i].params);\n            if (!parentParams.length)\n                continue;\n            for (var j in parentParams) {\n                if (inheritList.indexOf(parentParams[j]) >= 0)\n                    continue;\n                inheritList.push(parentParams[j]);\n                inherited[parentParams[j]] = this[parentParams[j]];\n            }\n        }\n        return common_1.extend({}, inherited, newParams);\n    };\n    ;\n    return StateParams;\n}());\nexports.StateParams = StateParams;\n//# sourceMappingURL=stateParams.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/params/stateParams.js\n// module id = 45\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/**\n * This module contains code for State Parameters.\n *\n * See [[ParamDeclaration]]\n *\n * @preferred @module params\n */ /** for typedoc */\n__export(require(\"./param\"));\n__export(require(\"./paramTypes\"));\n__export(require(\"./stateParams\"));\n__export(require(\"./type\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/params/module.js\n// module id = 46\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/** @module path */ /** for typedoc */\n__export(require(\"./node\"));\n__export(require(\"./pathFactory\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/path/module.js\n// module id = 47\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/** @module resolve */ /** for typedoc */\n__export(require(\"./interface\"));\n__export(require(\"./resolvable\"));\n__export(require(\"./resolveContext\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/resolve/module.js\n// module id = 48\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/**\n * The state subsystem\n *\n * This subsystem implements the ui-router state tree\n *\n * - The [[StateService]] has state-related service methods such as:\n *   - [[StateService.get]]: Get a registered [[StateDeclaration]] object\n *   - [[StateService.go]]: Transition from the current state to a new state\n *   - [[StateService.reload]]: Reload the current state\n *   - [[StateService.target]]: Get a [[TargetState]] (useful when redirecting from a Transition Hook)\n *   - [[StateService.onInvalid]]: Register a callback for when a transition to an invalid state is started\n *   - [[StateService.defaultErrorHandler]]: Register a global callback for when a transition errors\n * - The [[StateDeclaration]] interface defines the shape of a state declaration\n * - The [[StateRegistry]] contains all the registered states\n *   - States can be added/removed using the [[StateRegistry.register]] and [[StateRegistry.deregister]]\n *     - Note: Bootstrap state registration differs by front-end framework.\n *   - Get notified of state registration/deregistration using [[StateRegistry.onStatesChanged]].\n *\n * @preferred @module state\n */ /** for typedoc */\n__export(require(\"./stateBuilder\"));\n__export(require(\"./stateObject\"));\n__export(require(\"./stateMatcher\"));\n__export(require(\"./stateQueueManager\"));\n__export(require(\"./stateRegistry\"));\n__export(require(\"./stateService\"));\n__export(require(\"./targetState\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/state/module.js\n// module id = 49\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/**\n * This module contains APIs related to a Transition.\n *\n * See:\n * - [[TransitionService]]\n * - [[Transition]]\n * - [[HookFn]], [[TransitionHookFn]], [[TransitionStateHookFn]], [[HookMatchCriteria]], [[HookResult]]\n *\n * @internal @preferred @module transition\n */ /** for typedoc */\n__export(require(\"./hookBuilder\"));\n__export(require(\"./hookRegistry\"));\n__export(require(\"./rejectFactory\"));\n__export(require(\"./transition\"));\n__export(require(\"./transitionHook\"));\n__export(require(\"./transitionService\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/transition/module.js\n// module id = 50\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/** @module url */ /** for typedoc */\n__export(require(\"./urlMatcher\"));\n__export(require(\"./urlMatcherConfig\"));\n__export(require(\"./urlMatcherFactory\"));\n__export(require(\"./urlRouter\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/url/module.js\n// module id = 51\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/** @module view */ /** for typedoc */\n__export(require(\"./view\"));\n//# sourceMappingURL=module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/view/module.js\n// module id = 52\n// module chunks = 0 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/**\n * Naive, pure JS implementation of core ui-router services\n *\n * @module justjs\n */ /** */\n__export(require(\"./index\"));\nvar coreservices_1 = require(\"./common/coreservices\");\nvar strings_1 = require(\"./common/strings\");\nvar predicates_1 = require(\"./common/predicates\");\nvar common_1 = require(\"./common/common\");\n/** $q-like promise api */\ncoreservices_1.services.$q = (function (executor) { return new Promise(executor); });\ncoreservices_1.services.$q.when = function (val) { return Promise.resolve(val); };\ncoreservices_1.services.$q.reject = function (val) { return Promise.reject(val); };\ncoreservices_1.services.$q.defer = function () {\n    var deferred = {};\n    deferred.promise = new Promise(function (resolve, reject) {\n        deferred.resolve = resolve;\n        deferred.reject = reject;\n    });\n    return deferred;\n};\ncoreservices_1.services.$q.all = function (promises) {\n    if (predicates_1.isArray(promises)) {\n        return Promise.all(promises);\n    }\n    if (predicates_1.isObject(promises)) {\n        var p = promises;\n        // Convert promises map to promises array.\n        // When each promise resolves, map it to a tuple { key: key, val: val }\n        var objectToTuples = Object.keys(promises)\n            .map(function (key) { return p[key].then(function (val) { return ({ key: key, val: val }); }); });\n        var tuplesToObject = function (values) {\n            return values.reduce(function (acc, tuple) { acc[tuple.key] = tuple.val; return acc; }, {});\n        };\n        // Then wait for all promises to resolve, and convert them back to an object\n        return coreservices_1.services.$q.all(objectToTuples).then(tuplesToObject);\n    }\n};\n// angular1-like injector api\n// globally available injectables\nvar globals = {};\ncoreservices_1.services.$injector = {\n    get: function (name) { return globals[name]; },\n    has: function (name) { return coreservices_1.services.$injector.get(name) != null; },\n    invoke: function (fn, context, locals) {\n        var all = common_1.extend({}, globals, locals || {});\n        var params = coreservices_1.services.$injector.annotate(fn);\n        var ensureExist = common_1.assertPredicate(function (key) { return all.hasOwnProperty(key); }, function (key) { return (\"Could not find Dependency Injection token: \" + strings_1.stringify(key)); });\n        var args = params.filter(ensureExist).map(function (x) { return all[x]; });\n        if (predicates_1.isFunction(fn))\n            return fn.apply(context, args);\n        return fn.slice(-1)[0].apply(context, args);\n    },\n    // http://stackoverflow.com/questions/1007981\n    annotate: function (fn) {\n        var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n        var ARGUMENT_NAMES = /([^\\s,]+)/g;\n        if (!predicates_1.isInjectable(fn))\n            throw new Error(\"Not an injectable function: \" + fn);\n        if (fn && fn['$inject'])\n            return fn['$inject'];\n        if (predicates_1.isArray(fn))\n            return fn.slice(0, -1);\n        var fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n        var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n        return result || [];\n    }\n};\nvar loc = coreservices_1.services.location;\nloc.hash = function () { return \"\"; };\nloc.path = function () { return location.hash.replace(/^#/, \"\"); };\nloc.search = function () { return location.search; };\nloc.setUrl = function (url, replace) {\n    if (replace === void 0) { replace = true; }\n    if (url)\n        location.hash = url;\n};\nloc.onChange = function (cb) {\n    window.addEventListener(\"hashchange\", cb, false);\n};\nvar locCfg = coreservices_1.services.locationConfig;\nlocCfg.port = function () { return location.port; };\nlocCfg.protocol = function () { return location.protocol; };\nlocCfg.host = function () { return location.host; };\nlocCfg.baseHref = function () { return \"\"; };\nlocCfg.html5Mode = function () { return false; };\nlocCfg.hashPrefix = function () { return \"\"; };\n//# sourceMappingURL=justjs.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ui-router-core/lib/justjs.js\n// module id = 53\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/of.js\n// module id = 54\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Registers handlers for handling emitted values, error and completions from the observable, and\n     *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n     * @method subscribe\n     * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n     * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled\n     * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this);\n        }\n        else {\n            sink.add(this._subscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.$$observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observable.js\n// module id = 55\n// module chunks = 0 1","\"use strict\";\nvar objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n};\nexports.root = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);\nvar freeGlobal = objectTypes[typeof global] && global;\nif (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    exports.root = freeGlobal;\n}\n//# sourceMappingURL=root.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/root.js\n// module id = 56\n// module chunks = 0 1","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.$$rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber();\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/toSubscriber.js\n// module id = 57\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parent, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parent = _parent;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            context = observerOrNext;\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (isFunction_1.isFunction(context.unsubscribe)) {\n                this.add(context.unsubscribe.bind(context));\n            }\n            context.unsubscribe = this.unsubscribe.bind(this);\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parent = this._parent;\n            if (!_parent.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parent, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._error) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parent.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parent.syncErrorValue = err;\n                _parent.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._complete) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._complete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._complete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parent = this._parent;\n        this._context = null;\n        this._parent = null;\n        _parent.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscriber.js\n// module id = 58\n// module chunks = 0 1","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isFunction.js\n// module id = 59\n// module chunks = 0 1","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this._subscriptions = null;\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                (errors = errors || []).push(errorObject_1.errorObject.e);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(err.errors);\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var sub = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                sub = new Subscription(teardown);\n            case 'object':\n                if (sub.closed || typeof sub.unsubscribe !== 'function') {\n                    break;\n                }\n                else if (this.closed) {\n                    sub.unsubscribe();\n                }\n                else {\n                    (this._subscriptions || (this._subscriptions = [])).push(sub);\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        return sub;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        // HACK: This might be redundant because of the logic in `add()`\n        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {\n            return;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\n//# sourceMappingURL=Subscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscription.js\n// module id = 60\n// module chunks = 0 1","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isArray.js\n// module id = 61\n// module chunks = 0 1","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isObject.js\n// module id = 62\n// module chunks = 0 1","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/tryCatch.js\n// module id = 63\n// module chunks = 0 1","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/errorObject.js\n// module id = 64\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/UnsubscriptionError.js\n// module id = 65\n// module chunks = 0 1","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observer.js\n// module id = 66\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n//# sourceMappingURL=rxSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/rxSubscriber.js\n// module id = 67\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.$$observable = getSymbolObservable(root_1.root);\n//# sourceMappingURL=observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/observable.js\n// module id = 68\n// module chunks = 0 1","\"use strict\";\nvar ArrayObservable_1 = require('./ArrayObservable');\nexports.of = ArrayObservable_1.ArrayObservable.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/of.js\n// module id = 69\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` Scheduler, which means the `next`\n     * notifications are sent synchronously, although with a different Scheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nexports.ArrayObservable = ArrayObservable;\n//# sourceMappingURL=ArrayObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/ArrayObservable.js\n// module id = 70\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nexports.ScalarObservable = ScalarObservable;\n//# sourceMappingURL=ScalarObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/ScalarObservable.js\n// module id = 71\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nexports.EmptyObservable = EmptyObservable;\n//# sourceMappingURL=EmptyObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/EmptyObservable.js\n// module id = 72\n// module chunks = 0 1","\"use strict\";\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isScheduler.js\n// module id = 73\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar combineLatest_1 = require('../../observable/combineLatest');\nObservable_1.Observable.combineLatest = combineLatest_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/combineLatest.js\n// module id = 74\n// module chunks = 0 1","\"use strict\";\nvar isScheduler_1 = require('../util/isScheduler');\nvar isArray_1 = require('../util/isArray');\nvar ArrayObservable_1 = require('./ArrayObservable');\nvar combineLatest_1 = require('../operator/combineLatest');\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable, in order, and\n * collecting an array of each of the most recent values any time any of the\n * input Observables emits, then either taking that array and passing it as\n * arguments to an optional `project` function and emitting the return value of\n * that, or just emitting the array of recent values directly if there is no\n * `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} observable1 An input Observable to combine with the\n * source Observable.\n * @param {Observable} observable2 An input Observable to combine with the\n * source Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    var scheduler = null;\n    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/combineLatest.js\n// module id = 75\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar isArray_1 = require('../util/isArray');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar none = {};\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    observables.unshift(this);\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n/* tslint:enable:max-line-length */\nvar CombineLatestOperator = (function () {\n    function CombineLatestOperator(project) {\n        this.project = project;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new CombineLatestSubscriber(subscriber, this.project));\n    };\n    return CombineLatestOperator;\n}());\nexports.CombineLatestOperator = CombineLatestOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = (function (_super) {\n    __extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, project) {\n        _super.call(this, destination);\n        this.project = project;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(none);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === none ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.project) {\n                this._tryProject(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryProject = function (values) {\n        var result;\n        try {\n            result = this.project.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.CombineLatestSubscriber = CombineLatestSubscriber;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/combineLatest.js\n// module id = 76\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nexports.OuterSubscriber = OuterSubscriber;\n//# sourceMappingURL=OuterSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/OuterSubscriber.js\n// module id = 77\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('./root');\nvar isArray_1 = require('./isArray');\nvar isPromise_1 = require('./isPromise');\nvar Observable_1 = require('../Observable');\nvar iterator_1 = require('../symbol/iterator');\nvar InnerSubscriber_1 = require('../InnerSubscriber');\nvar observable_1 = require('../symbol/observable');\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            return result.subscribe(destination);\n        }\n    }\n    if (isArray_1.isArray(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root_1.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (typeof result[iterator_1.$$iterator] === 'function') {\n        var iterator = result[iterator_1.$$iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (typeof result[observable_1.$$observable] === 'function') {\n        var obs = result[observable_1.$$observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new Error('invalid observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        destination.error(new TypeError('unknown type returned'));\n    }\n    return null;\n}\nexports.subscribeToResult = subscribeToResult;\n//# sourceMappingURL=subscribeToResult.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/subscribeToResult.js\n// module id = 78\n// module chunks = 0 1","\"use strict\";\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nexports.isPromise = isPromise;\n//# sourceMappingURL=isPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isPromise.js\n// module id = 79\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nif (typeof Symbol === 'function') {\n    if (Symbol.iterator) {\n        exports.$$iterator = Symbol.iterator;\n    }\n    else if (typeof Symbol.for === 'function') {\n        exports.$$iterator = Symbol.for('iterator');\n    }\n}\nelse {\n    if (root_1.root.Set && typeof new root_1.root.Set()['@@iterator'] === 'function') {\n        // Bug for mozilla version\n        exports.$$iterator = '@@iterator';\n    }\n    else if (root_1.root.Map) {\n        // es6-shim specific logic\n        var keys = Object.getOwnPropertyNames(root_1.root.Map.prototype);\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (key !== 'entries' && key !== 'size' && root_1.root.Map.prototype[key] === root_1.root.Map.prototype['entries']) {\n                exports.$$iterator = key;\n                break;\n            }\n        }\n    }\n    else {\n        exports.$$iterator = '@@iterator';\n    }\n}\n//# sourceMappingURL=iterator.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/iterator.js\n// module id = 80\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nexports.InnerSubscriber = InnerSubscriber;\n//# sourceMappingURL=InnerSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/InnerSubscriber.js\n// module id = 81\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromPromise_1 = require('../../observable/fromPromise');\nObservable_1.Observable.fromPromise = fromPromise_1.fromPromise;\n//# sourceMappingURL=fromPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/fromPromise.js\n// module id = 82\n// module chunks = 0 1","\"use strict\";\nvar PromiseObservable_1 = require('./PromiseObservable');\nexports.fromPromise = PromiseObservable_1.PromiseObservable.create;\n//# sourceMappingURL=fromPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/fromPromise.js\n// module id = 83\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PromiseObservable = (function (_super) {\n    __extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {Promise<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional Scheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable_1.Observable));\nexports.PromiseObservable = PromiseObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/PromiseObservable.js\n// module id = 84\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar switchMap_1 = require('../../operator/switchMap');\nObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/switchMap.js\n// module id = 85\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return this.lift(new SwitchMapOperator(project, resultSelector));\n}\nexports.switchMap = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/switchMap.js\n// module id = 86\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeMap_1 = require('../../operator/mergeMap');\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/mergeMap.js\n// module id = 87\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/mergeMap.js\n// module id = 88\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concat_1 = require('../../operator/concat');\nObservable_1.Observable.prototype.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/concat.js\n// module id = 89\n// module chunks = 0 1","\"use strict\";\nvar isScheduler_1 = require('../util/isScheduler');\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar mergeAll_1 = require('./mergeAll');\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return concatStatic.apply(void 0, [this].concat(observables));\n}\nexports.concat = concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins multiple Observables together by subscribing to them one at a time and\n * merging their results into the output Observable. Will wait for each\n * Observable to complete before moving on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} input1 An input Observable to concatenate with others.\n * @param {Observable} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concatStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var scheduler = null;\n    var args = observables;\n    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n        scheduler = args.pop();\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatStatic = concatStatic;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/concat.js\n// module id = 90\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return this.lift(new MergeAllOperator(concurrent));\n}\nexports.mergeAll = mergeAll;\nvar MergeAllOperator = (function () {\n    function MergeAllOperator(concurrent) {\n        this.concurrent = concurrent;\n    }\n    MergeAllOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new MergeAllSubscriber(observer, this.concurrent));\n    };\n    return MergeAllOperator;\n}());\nexports.MergeAllOperator = MergeAllOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeAllSubscriber = (function (_super) {\n    __extends(MergeAllSubscriber, _super);\n    function MergeAllSubscriber(destination, concurrent) {\n        _super.call(this, destination);\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n    }\n    MergeAllSubscriber.prototype._next = function (observable) {\n        if (this.active < this.concurrent) {\n            this.active++;\n            this.add(subscribeToResult_1.subscribeToResult(this, observable));\n        }\n        else {\n            this.buffer.push(observable);\n        }\n    };\n    MergeAllSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeAllSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeAllSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeAllSubscriber = MergeAllSubscriber;\n//# sourceMappingURL=mergeAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/mergeAll.js\n// module id = 91\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/map.js\n// module id = 92\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    if (typeof project !== 'function') {\n        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return this.lift(new MapOperator(project, thisArg));\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/map.js\n// module id = 93\n// module chunks = 0 1","/** @ng2api @module core */ /** */\r\nimport {NgModuleFactoryLoader, NgModuleRef, Injector, NgModuleFactory, Type, Compiler} from \"@angular/core\";\r\nimport {Transition, LazyLoadResult, UIRouter, Resolvable, NATIVE_INJECTOR_TOKEN, isString} from \"ui-router-core\";\r\nimport {RootModule, StatesModule, UIROUTER_ROOT_MODULE, UIROUTER_MODULE_TOKEN} from \"./uiRouterNgModule\";\r\nimport {applyModuleConfig} from \"./uiRouterConfig\";\r\n\r\nexport type ModuleTypeCallback = () => Type<any> | Promise<Type<any>>;\r\nexport type NgModuleToLoad = string | ModuleTypeCallback;\r\n\r\n/**\r\n * Returns a function which lazy loads a nested module\r\n *\r\n * Use this function as a [[StateDeclaration.lazyLoad]] property to lazy load an NgModule and its state.\r\n *\r\n * Example using `System.import()`:\r\n * ```js\r\n * {\r\n *   name: 'home',\r\n *   url: '/home',\r\n *   lazyLoad: loadNgModule(() => System.import('./home.module').then(result => result.HomeModule))\r\n * }\r\n * ```\r\n *\r\n * Example using `NgModuleFactoryLoader`:\r\n * ```js\r\n * {\r\n *   name: 'home',\r\n *   url: '/home',\r\n *   lazyLoad: loadNgModule('./home.module')\r\n * }\r\n * ```\r\n *\r\n * @param moduleToLoad\r\n *    If a string, it should be the path to the NgModule code, which will then be loaded by the `NgModuleFactoryLoader`.\r\n *    If a function, the function should load the NgModule code and return a reference to the `NgModule` class being loaded.\r\n *\r\n * @returns A function which takes a transition, which:\r\n * - Gets the Injector (scoped properly for the destination state)\r\n * - Loads and creates the NgModule\r\n * - Finds the \"replacement state\" for the target state, and adds the new NgModule Injector to it (as a resolve)\r\n * - Returns the new states array\r\n */\r\nexport function loadNgModule(moduleToLoad: NgModuleToLoad): (transition: Transition) => Promise<LazyLoadResult> {\r\n  return (transition: Transition) => {\r\n    const ng2Injector = transition.injector().get(NATIVE_INJECTOR_TOKEN);\r\n\r\n    const createModule = (factory: NgModuleFactory<any>) =>\r\n        factory.create(ng2Injector);\r\n\r\n    const applyModule = (moduleRef: NgModuleRef<any>) =>\r\n        applyNgModule(transition, moduleRef);\r\n\r\n    return loadModuleFactory(moduleToLoad, ng2Injector)\r\n        .then(createModule)\r\n        .then(applyModule);\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the module factory that can be used to instantiate a module\r\n *\r\n * For strings this:\r\n * - Finds the correct NgModuleFactoryLoader\r\n * - Loads the new NgModuleFactory from the path string (async)\r\n *\r\n * For a Type<any> or Promise<Type<any>> this:\r\n * - Compiles the component type (if not running with AOT)\r\n * - Returns the NgModuleFactory resulting from compilation (or direct loading if using AOT) as a Promise\r\n *\r\n * @internalapi\r\n */\r\nexport function loadModuleFactory(moduleToLoad: NgModuleToLoad, ng2Injector: Injector): Promise<NgModuleFactory<any>> {\r\n  if (isString(moduleToLoad)) {\r\n    return ng2Injector.get(NgModuleFactoryLoader).load(moduleToLoad);\r\n  }\r\n\r\n  const compiler: Compiler = ng2Injector.get(Compiler);\r\n  const offlineMode = compiler instanceof Compiler;\r\n  const loadChildrenPromise = Promise.resolve(moduleToLoad());\r\n  const compileAsync = (moduleType: Type<any>) =>\r\n      compiler.compileModuleAsync(moduleType);\r\n\r\n  return offlineMode ? loadChildrenPromise : loadChildrenPromise.then(compileAsync);\r\n}\r\n\r\n/**\r\n * Apply the UI-Router Modules found in the lazy loaded module.\r\n *\r\n * Apply the Lazy Loaded NgModule's newly created Injector to the right state in the state tree.\r\n *\r\n * Lazy loading uses a placeholder state which is removed (and replaced) after the module is loaded.\r\n * The NgModule should include a state with the same name as the placeholder.\r\n *\r\n * Find the *newly loaded state* with the same name as the *placeholder state*.\r\n * The NgModule's Injector (and ComponentFactoryResolver) will be added to that state.\r\n * The Injector/Factory are used when creating Components for the `replacement` state and all its children.\r\n *\r\n * @internalapi\r\n */\r\nexport function applyNgModule(transition: Transition, ng2Module: NgModuleRef<any>): LazyLoadResult {\r\n  let injector = ng2Module.injector;\r\n  let parentInjector = <Injector> ng2Module.injector['parent'];\r\n  let uiRouter: UIRouter = injector.get(UIRouter);\r\n\r\n  let originalName = transition.to().name;\r\n  let originalState = uiRouter.stateRegistry.get(originalName);\r\n\r\n  let newRootModules: RootModule[] = multiProviderParentChildDelta(parentInjector, injector, UIROUTER_ROOT_MODULE);\r\n\r\n  if (newRootModules.length) {\r\n    console.log(newRootModules);\r\n    throw new Error('Lazy loaded modules should not contain a UIRouterModule.forRoot() module');\r\n  }\r\n\r\n  let newModules: RootModule[] = multiProviderParentChildDelta(parentInjector, injector, UIROUTER_MODULE_TOKEN);\r\n  newModules.forEach(module => applyModuleConfig(uiRouter, injector, module));\r\n\r\n  let replacementState = uiRouter.stateRegistry.get(originalName);\r\n  if (replacementState === originalState) {\r\n    throw new Error(`The Future State named '${originalName}' lazy loaded an NgModule. That NgModule should also have a UIRouterModule.forChild() state named '${originalName}' to replace the Future State, but it did not.`);\r\n  }\r\n\r\n  // Supply the newly loaded states with the Injector from the lazy loaded NgModule\r\n  replacementState.$$state().resolvables.push(Resolvable.fromData(NATIVE_INJECTOR_TOKEN, injector));\r\n\r\n  return {};\r\n}\r\n\r\n/**\r\n * Returns the new dependency injection values from the Child Injector\r\n *\r\n * When a DI token is defined as multi: true, the child injector\r\n * can add new values for the token.\r\n *\r\n * This function returns the values added by the child injector,  and excludes all values from the parent injector.\r\n *\r\n * @internalapi\r\n */\r\nexport function multiProviderParentChildDelta(parent: Injector, child: Injector, token: any) {\r\n  let childVals: RootModule[] = child.get(token);\r\n  let parentVals: RootModule[] = parent.get(token);\r\n  return childVals.filter(val => parentVals.indexOf(val) === -1);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/lazyLoadNgModule.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_95__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"@angular/core\",\"amd\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"commonjs\":\"@angular/core\"}\n// module id = 95\n// module chunks = 0 1","/** @ng2api @module core */ /** */\r\nimport {Ng2StateDeclaration} from \"./interface\";\r\nimport {NgModule, OpaqueToken, ModuleWithProviders, ANALYZE_FOR_ENTRY_COMPONENTS, Provider, Type} from \"@angular/core\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {_UIROUTER_DIRECTIVES} from \"./directives/directives\";\r\nimport {UIView} from \"./directives/uiView\";\r\nimport {RawParams} from \"ui-router-core\";\r\nimport {identity} from \"ui-router-core\";\r\nimport {LocationStrategy, HashLocationStrategy, PathLocationStrategy} from \"@angular/common\";\r\nimport {_UIROUTER_INSTANCE_PROVIDERS, _UIROUTER_SERVICE_PROVIDERS} from \"./providers\";\r\n\r\nexport function makeRootProviders(module: StatesModule): Provider[] {\r\n    return [\r\n        { provide: UIROUTER_ROOT_MODULE, useValue: module, multi: true},\r\n        { provide: UIROUTER_MODULE_TOKEN,        useValue: module,              multi: true },\r\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: module.states || [], multi: true },\r\n    ];\r\n}\r\n\r\nexport function makeChildProviders(module: StatesModule): Provider[] {\r\n    return [\r\n        { provide: UIROUTER_MODULE_TOKEN,        useValue: module,              multi: true },\r\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: module.states || [], multi: true },\r\n    ];\r\n}\r\n\r\nexport function locationStrategy(useHash) {\r\n    return { provide: LocationStrategy, useClass: useHash ? HashLocationStrategy : PathLocationStrategy };\r\n}\r\n\r\n/**\r\n * Creates UI-Router Modules\r\n *\r\n * This class has two static factory methods which create UIRouter Modules.\r\n * A UI-Router Module is an [Angular 2 NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\r\n * with support for UI-Router.\r\n *\r\n * ### UIRouter Directives\r\n *\r\n * When a UI-Router Module is imported into a `NgModule`, that module's components\r\n * can use the UIRouter Directives such as [[UIView]], [[UISref]], [[UISrefActive]].\r\n *\r\n * ### State Definitions\r\n *\r\n * State definitions found in the `states:` property are provided to the Dependency Injector.\r\n * This enables UI-Router to automatically register the states with the [[StateRegistry]] at bootstrap (and during lazy load).\r\n *\r\n * ### Entry Components\r\n *\r\n * Any routed components are added as `entryComponents:` so they will get compiled.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [_UIROUTER_DIRECTIVES],\r\n  exports: [_UIROUTER_DIRECTIVES],\r\n  entryComponents: [UIView],\r\n})\r\nexport class UIRouterModule {\r\n  /**\r\n   * Creates a UI-Router Module for the root (bootstrapped) application module to import\r\n   *\r\n   * This factory function creates an [Angular 2 NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\r\n   * with UI-Router support.\r\n   *\r\n   * The `forRoot` module should be added to the `imports:` of the `NgModule` being bootstrapped.\r\n   * An application should only create and import a single `NgModule` using `forRoot()`.\r\n   * All other modules should be created using [[UIRouterModule.forChild]].\r\n   *\r\n   * Unlike `forChild`, an `NgModule` returned by this factory provides the [[UIRouter]] singleton object.\r\n   * This factory also accepts root-level router configuration.\r\n   * These are the only differences between `forRoot` and `forChild`.\r\n   *\r\n   * Example:\r\n   * ```js\r\n   * let routerConfig = {\r\n   *   otherwise: '/home',\r\n   *   states: [homeState, aboutState]\r\n   * };\r\n   *\r\n   * @ NgModule({\r\n   *   imports: [\r\n   *     BrowserModule,\r\n   *     UIRouterModule.forRoot(routerConfig),\r\n   *     FeatureModule1\r\n   *   ]\r\n   * })\r\n   * class MyRootAppModule {}\r\n   *\r\n   * browserPlatformDynamic.bootstrapModule(MyRootAppModule);\r\n   * ```\r\n   *\r\n   * @param config declarative UI-Router configuration\r\n   * @returns an `NgModule` which provides the [[UIRouter]] singleton instance\r\n   */\r\n  static forRoot(config: RootModule = {}): ModuleWithProviders {\r\n    return {\r\n      ngModule: UIRouterModule,\r\n      providers: [\r\n        _UIROUTER_INSTANCE_PROVIDERS,\r\n        _UIROUTER_SERVICE_PROVIDERS,\r\n        locationStrategy(config.useHash),\r\n        ...makeRootProviders(config),\r\n      ]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates an `NgModule` for a UIRouter module\r\n   *\r\n   * This function creates an [Angular 2 NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\r\n   * with UI-Router support.\r\n   *\r\n   * #### Example:\r\n   * ```js\r\n   * var homeState = { name: 'home', url: '/home', component: Home };\r\n   * var aboutState = { name: 'about', url: '/about', component: About };\r\n   *\r\n   * @ NgModule({\r\n   *   imports: [\r\n   *     UIRouterModule.forChild({ states: [ homeState, aboutState ] }),\r\n   *     SharedModule,\r\n   *   ],\r\n   *   declarations: [ Home, About ],\r\n   * })\r\n   * export class AppModule {};\r\n   * ```\r\n   *\r\n   * @param module UI-Router module options\r\n   * @returns an `NgModule`\r\n   */\r\n  static forChild(module: StatesModule = {}): ModuleWithProviders {\r\n    return {\r\n      ngModule: UIRouterModule,\r\n      providers: makeChildProviders(module),\r\n    }\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * UI-Router declarative configuration which can be provided to [[UIRouterModule.forRoot]]\r\n */\r\nexport interface RootModule extends StatesModule {\r\n  /**\r\n   * Chooses a `LocationStrategy`.\r\n   *\r\n   * The location strategy enables either HTML5 Push State\r\n   * (Requires server-side support) or \"HashBang\" URLs.\r\n   *\r\n   * When `false`, uses [`PathLocationStrategy`](https://angular.io/docs/ts/latest/api/common/index/PathLocationStrategy-class.html)\r\n   * When `true`, uses [`HashLocationStrategy`](https://angular.io/docs/ts/latest/api/common/index/HashLocationStrategy-class.html)\r\n   *\r\n   * Defaults to `false`\r\n   */\r\n  useHash?: boolean\r\n\r\n  /**\r\n   * Sets [[UrlRouterProvider.otherwise]].\r\n   */\r\n  otherwise?: (string | Function | { state: string, params?: RawParams })\r\n\r\n  /**\r\n   * Sets [[UrlRouterProvider.deferIntercept]]\r\n   */\r\n  deferIntercept?: boolean;\r\n}\r\n\r\n/**\r\n * UI-Router Module declarative configuration which can be passed to [[UIRouterModule.forChild]]\r\n */\r\nexport interface StatesModule {\r\n  /**\r\n   * The module's UI-Router states\r\n   *\r\n   * This list of [[Ng2StateDeclaration]] objects will be registered with the [[StateRegistry]].\r\n   * Also, the components that the states route to will be added to `entryComponents` so they will be compiled.\r\n   */\r\n  states?: Ng2StateDeclaration[];\r\n\r\n  /**\r\n   * A UI-Router Module's imperative configuration\r\n   *\r\n   * If a UI-Router Module needs to perform some configuration (such as registering parameter types or Transition Hooks)\r\n   * a `configClass` should be supplied.\r\n   *\r\n   * Mark the class as `@Injectable()` and inject any required dependencies.\r\n   * When the module is being loaded, an instance will be created and injected.\r\n   *\r\n   * Example:\r\n   * ```js\r\n   * @Injectable()\r\n   * export class MyUIRouterConfig {\r\n   *   // The constructor may be injected\r\n   *   constructor(uiRouter: UIRouter) {\r\n   *     const requireAuthentication = (transition: Transition) => {\r\n   *       let injector = transition.injector();\r\n   *       if (!injector.get(AuthService).isAuthenticated()) {\r\n   *         return uiRouter.stateService.target('login');\r\n   *       }\r\n   *     }\r\n   *\r\n   *     uiRouter.transitionService.onBefore({ to: (state) => state.requiresAuth }, requireAuthentication);\r\n   *\r\n   *     let builtInStringType = urlMatcherFactory.type('string');\r\n   *     let slugType = Object.assign({}, builtInStringType, { encode: (str) => str, decode: (str) => str });\r\n   *     uiRouter.urlMatcherFactory.type('slug', slugType);\r\n   *   }\r\n   * }\r\n   * ```\r\n   *\r\n   * ```js\r\n   * @NgModule({\r\n   *   imports: [\r\n   *     UIRouterModule.forChild({ states: STATES, configClass: MyUIRouterConfig });\r\n   *   ]\r\n   * })\r\n   * class MyModule {}\r\n   * ```\r\n   */\r\n  configClass?: Type<any>;\r\n}\r\n\r\n/** @hidden */\r\nexport const UIROUTER_ROOT_MODULE = new OpaqueToken(\"UIRouter Root Module\");\r\n\r\n/** @hidden */\r\nexport const UIROUTER_MODULE_TOKEN = new OpaqueToken(\"UIRouter Module\");\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/uiRouterNgModule.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_97__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"@angular/common\",\"amd\":\"@angular/common\",\"commonjs2\":\"@angular/common\",\"commonjs\":\"@angular/common\"}\n// module id = 97\n// module chunks = 0 1","/**\r\n * The UI-Router Angular 2 directives:\r\n *\r\n * - [[UIView]]: A viewport for routed components\r\n * - [[UISref]]: A state ref to a target state; navigates when clicked\r\n * - [[UISrefActive]]: (and `UISrefActiveEq`) Adds a css class when a UISref's target state (or a child state) is active\r\n *\r\n * @ng2api\r\n * @preferred\r\n * @module directives\r\n */ /** */\r\nimport {UISref, AnchorUISref} from \"./uiSref\";\r\nimport {UISrefActive} from \"./uiSrefActive\";\r\nimport {UIView} from \"./uiView\";\r\nimport {UISrefStatus} from \"./uiSrefStatus\";\r\n\r\nexport * from \"./uiView\";\r\nexport * from \"./uiSref\";\r\nexport * from \"./uiSrefStatus\";\r\nexport * from \"./uiSrefActive\";\r\n\r\n/** @internalapi */\r\nexport const _UIROUTER_DIRECTIVES = [UISref, AnchorUISref, UIView, UISrefActive, UISrefStatus];\r\n\r\n/**\r\n * References to the UI-Router directive classes, for use within a @Component's `directives:` property\r\n * @deprecated use [[UIRouterModule]]\r\n * @internalapi\r\n */\r\nexport const UIROUTER_DIRECTIVES = _UIROUTER_DIRECTIVES;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/directives/directives.ts","/** @ng2api @module directives */ /** */\r\nimport {UIRouter, UIRouterGlobals} from \"ui-router-core\";\r\nimport {Directive, Inject, Input} from \"@angular/core\";\r\nimport {Optional} from \"@angular/core\";\r\nimport {ElementRef} from \"@angular/core\";\r\nimport {Renderer} from \"@angular/core\";\r\nimport {UIView, ParentUIViewInject} from \"./uiView\";\r\nimport {extend, Obj} from \"ui-router-core\";\r\nimport {TransitionOptions} from \"ui-router-core\";\r\nimport {Globals} from \"ui-router-core\";\r\nimport {ReplaySubject} from 'rxjs/ReplaySubject';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {TargetState} from \"ui-router-core\";\r\nimport \"../rx\";\r\n\r\n/**\r\n * @internalapi\r\n * # blah blah blah\r\n */\r\n@Directive({ selector: 'a[uiSref]' })\r\nexport class AnchorUISref {\r\n  constructor(public _el: ElementRef, public _renderer: Renderer) { }\r\n  update(href: string) {\r\n    this._renderer.setElementProperty(this._el.nativeElement, 'href', href);\r\n  }\r\n}\r\n\r\n/**\r\n * A directive when clicked, initiates a [[Transition]] to a [[TargetState]].\r\n *\r\n * ### Purpose\r\n *\r\n * This directive is applied to anchor tags (`<a>`) or any other clickable element.  It is a state reference (or sref --\r\n * similar to an href).  When clicked, the directive will transition to that state by calling [[StateService.go]],\r\n * and optionally supply state parameter values and transition options.\r\n *\r\n * When this directive is on an anchor tag, it will also add an `href` attribute to the anchor.\r\n *\r\n * ### Selector\r\n *\r\n * - `[uiSref]`: The directive is created as an attribute on an element, e.g., `<a uiSref></a>`\r\n *\r\n * ### Inputs\r\n *\r\n * - `uiSref`: the target state's name, e.g., `uiSref=\"foostate\"`.  If a component template uses a relative `uiSref`,\r\n * e.g., `uiSref=\".child\"`, the reference is relative to that component's state.\r\n *\r\n * - `uiParams`: any target state parameter values, as an object, e.g., `[uiParams]=\"{ fooId: bar.fooId }\"`\r\n *\r\n * - `uiOptions`: [[TransitionOptions]], e.g., `[uiOptions]=\"{ inherit: false }\"`\r\n *\r\n * @example\r\n * ```html\r\n *\r\n * <!-- Targets bar state' -->\r\n * <a uiSref=\"bar\">Bar</a>\r\n *\r\n * <!-- Assume this component's state is \"foo\".\r\n *      Relatively targets \"foo.child\" -->\r\n * <a uiSref=\".child\">Foo Child</a>\r\n *\r\n * <!-- Targets \"bar\" state and supplies parameter value -->\r\n * <a uiSref=\"bar\" [uiParams]=\"{ barId: foo.barId }\">Bar {{foo.barId}}</a>\r\n *\r\n * <!-- Targets \"bar\" state and parameter, doesn't inherit existing parameters-->\r\n * <a uiSref=\"bar\" [uiParams]=\"{ barId: foo.barId }\" [uiOptions]=\"{ inherit: false }\">Bar {{foo.barId}}</a>\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[uiSref]',\r\n  host: { '(click)': 'go()' }\r\n})\r\nexport class UISref {\r\n  /**\r\n   * `@Input('uiSref')` The name of the state to link to\r\n   *\r\n   * ```html\r\n   * <a uiSref=\"hoome\">Home</a>\r\n   * ```\r\n   */\r\n  @Input('uiSref') state: string;\r\n\r\n  /**\r\n   * `@Input('uiParams')` The parameter values to use (as key/values)\r\n   *\r\n   * ```html\r\n   * <a uiSref=\"book\" [uiParams]=\"{ bookId: book.id }\">Book {{ book.name }}</a>\r\n   * ```\r\n   */\r\n  @Input('uiParams') params: any;\r\n\r\n  /**\r\n   * `@Input('uiOptions')` The transition options\r\n   *\r\n   * ```html\r\n   * <a uiSref=\"books\" [uiOptions]=\"{ reload: true }\">Book {{ book.name }}</a>\r\n   * ```\r\n   */\r\n  @Input('uiOptions') options: TransitionOptions;\r\n\r\n  /**\r\n   * An observable (ReplaySubject) of the state this UISref is targeting.\r\n   * When the UISref is clicked, it will transition to this [[TargetState]].\r\n   */\r\n  public targetState$ = new ReplaySubject<TargetState>(1);\r\n\r\n  /** @internalapi */\r\n  private _emit: boolean = false;\r\n  /** @internalapi */\r\n  private _statesSub: Subscription;\r\n\r\n  constructor(\r\n      /** @internalapi */ private _router: UIRouter,\r\n      /** @internalapi */ @Inject(UIView.PARENT_INJECT) public parent: ParentUIViewInject,\r\n      /** @internalapi */ @Optional() private _anchorUISref: AnchorUISref,\r\n      @Inject(Globals) _globals: UIRouterGlobals\r\n  ) {\r\n    this._statesSub = _globals.states$.subscribe(() => this.update())\r\n  }\r\n\r\n  /** @internalapi */\r\n  set \"uiSref\"(val: string) { this.state = val; this.update(); }\r\n  /** @internalapi */\r\n  set \"uiParams\"(val: Obj) { this.params = val; this.update(); }\r\n  /** @internalapi */\r\n  set \"uiOptions\"(val: TransitionOptions) { this.options = val; this.update(); }\r\n\r\n  ngOnInit() {\r\n    this._emit = true;\r\n    this.update();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._emit = false;\r\n    this._statesSub.unsubscribe();\r\n    this.targetState$.unsubscribe();\r\n  }\r\n\r\n  update() {\r\n    let $state = this._router.stateService;\r\n    if (this._emit) {\r\n      let newTarget = $state.target(this.state, this.params, this.getOptions());\r\n      this.targetState$.next(newTarget);\r\n    }\r\n\r\n    if (this._anchorUISref) {\r\n      let href = $state.href(this.state, this.params, this.getOptions());\r\n      this._anchorUISref.update(href);\r\n    }\r\n  }\r\n\r\n  getOptions() {\r\n    let defaultOpts: TransitionOptions = {\r\n      relative: this.parent && this.parent.context && this.parent.context.name,\r\n      inherit: true ,\r\n      source: \"sref\"\r\n    };\r\n    return extend(defaultOpts, this.options || {});\r\n  }\r\n\r\n  /** When triggered by a (click) event, this function transitions to the UISref's target state */\r\n  go() {\r\n    this._router.stateService.go(this.state, this.params, this.getOptions());\r\n    return false;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/directives/uiSref.ts","/** @ng2api @module directives */ /** */\r\nimport {\r\n    Component, ComponentFactoryResolver, ViewContainerRef, Input, ComponentRef, Type,\r\n    ReflectiveInjector, ViewChild, Injector, Inject\r\n} from '@angular/core';\r\nimport {ReflectorReader, reflector} from '../private_import_core';\r\n\r\nimport {UIRouter} from \"ui-router-core\";\r\nimport {trace} from \"ui-router-core\";\r\nimport {ViewContext, ViewConfig, ActiveUIView} from \"ui-router-core\";\r\nimport {Ng2ViewConfig} from \"../statebuilders/views\";\r\nimport {ResolveContext, NATIVE_INJECTOR_TOKEN} from \"ui-router-core\";\r\nimport {flattenR} from \"ui-router-core\";\r\nimport {MergeInjector} from \"../mergeInjector\";\r\n\r\n/** @hidden */\r\nlet id = 0;\r\n\r\n/** @internalapi These are provide()d as the string UIView.PARENT_INJECT */\r\nexport interface ParentUIViewInject {\r\n  context: ViewContext;\r\n  fqn: string;\r\n}\r\n\r\n/** @internalapi */\r\ninterface InputMapping {\r\n  token: string;\r\n  prop: string;\r\n}\r\n\r\n/**\r\n * Given a component class, gets the inputs of styles:\r\n *\r\n * - @Input('foo') _foo\r\n * - `inputs: ['foo']`\r\n *\r\n * @internalapi\r\n */\r\nconst ng2ComponentInputs = (ng2CompClass: Type<any>) => {\r\n  /** Get \"@Input('foo') _foo\" inputs */\r\n  let props = reflector.propMetadata(ng2CompClass);\r\n  let _props = Object.keys(props || {})\r\n      // -> [ { key: string, anno: annotations[] } ] tuples\r\n      .map(key => ({ key, annoArr: props[key] }))\r\n      // -> flattened to [ { key: string, anno: annotation } ] tuples\r\n      .reduce((acc, tuple) => acc.concat(tuple.annoArr.map(anno => ({ key: tuple.key, anno }))), [])\r\n      // Only Inputs\r\n      .filter(tuple => tuple.anno instanceof Input)\r\n      // If they have a bindingPropertyName, i.e. \"@Input('foo') _foo\", then foo, else _foo\r\n      .map(tuple => ({ token: tuple.anno.bindingPropertyName || tuple.key, prop: tuple.key }));\r\n\r\n  /** Get \"inputs: ['foo']\" inputs */\r\n  let inputs = reflector.annotations(ng2CompClass)\r\n      // Find the ComponentMetadata class annotation\r\n      .filter(x => x instanceof Component && !!x.inputs)\r\n      // Get the .inputs string array\r\n      .map(x => x.inputs)\r\n      .reduce(flattenR, [])\r\n      .map(input => ({ token: input, prop: input }));\r\n\r\n  return _props.concat(inputs) as InputMapping[];\r\n};\r\n\r\n/**\r\n * A UI-Router viewport directive, which is filled in by a view (component) on a state.\r\n *\r\n * ### Selector\r\n *\r\n * A `ui-view` directive can be created as an element: `<ui-view></ui-view>` or as an attribute: `<div ui-view></div>`.\r\n *\r\n * ### Purpose\r\n *\r\n * This directive is used in a Component template (or as the root component) to create a viewport.  The viewport\r\n * is filled in by a view (as defined by a [[Ng2ViewDeclaration]] inside a [[Ng2StateDeclaration]]) when the view's\r\n * state has been activated.\r\n *\r\n * #### Example:\r\n * ```js\r\n * // This app has two states, 'foo' and 'bar'\r\n * stateRegistry.register({ name: 'foo', url: '/foo', component: FooComponent });\r\n * stateRegistry.register({ name: 'bar', url: '/bar', component: BarComponent });\r\n * ```\r\n * ```html\r\n * <!-- This ui-view will be filled in by the foo state's component or\r\n *      the bar state's component when the foo or bar state is activated -->\r\n * <ui-view></ui-view>\r\n * ```\r\n *\r\n * ### Named ui-views\r\n *\r\n * A `ui-view` may optionally be given a name via the attribute value: `<div ui-view='header'></div>`.  *Note:\r\n * an unnamed `ui-view` is internally named `$default`*.   When a `ui-view` has a name, it will be filled in\r\n * by a matching named view.\r\n *\r\n * #### Example:\r\n * ```js\r\n * stateRegistry.register({\r\n *   name: 'foo',\r\n *   url: '/foo',\r\n *   views: { header: HeaderComponent, $default: FooComponent });\r\n * ```\r\n * ```html\r\n * <!-- When 'foo' state is active, filled by HeaderComponent -->\r\n * <div ui-view=\"header\"></div>\r\n *\r\n * <!-- When 'foo' state is active, filled by FooComponent -->\r\n * <ui-view></ui-view>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ui-view, [ui-view]',\r\n  template: `\r\n    <template #componentTarget></template>\r\n    <ng-content *ngIf=\"!componentRef\"></ng-content>\r\n  `\r\n  // styles: [`\r\n  //   .done-true {\r\n  //     text-decoration: line-through;\r\n  //     color: grey;\r\n  //   }`\r\n  // ],\r\n  // template: `\r\n  // <div style=\"padding: 1em; border: 1px solid lightgrey;\">\r\n  //\r\n  //   <div #content style=\"color: lightgrey; font-size: smaller;\">\r\n  //     <div>ui-view #{{uiViewData?.id}} created by '{{ parentContext?.name || \"(root)\" }}' state</div>\r\n  //     <div>name: (absolute) '{{uiViewData?.fqn}}' (contextual) '{{uiViewData?.name}}@{{parentContext?.name}}' </div>\r\n  //     <div>currently filled by: '{{(uiViewData?.config && uiViewData?.config?.viewDecl?.$context) || 'empty...'}}'</div>\r\n  //   </div>\r\n  //\r\n  // </div>`\r\n})\r\nexport class UIView {\r\n  @ViewChild('componentTarget', {read: ViewContainerRef}) componentTarget: ViewContainerRef;\r\n  @Input('name') name: string;\r\n  @Input('ui-view') set _name(val: string) { this.name = val; }\r\n  componentRef: ComponentRef<any>;\r\n  deregister: Function;\r\n  uiViewData: ActiveUIView = <any> {};\r\n  parent: ParentUIViewInject;\r\n\r\n  static PARENT_INJECT = \"UIView.PARENT_INJECT\";\r\n\r\n  constructor(\r\n      public router: UIRouter,\r\n      @Inject(UIView.PARENT_INJECT) parent,\r\n      public viewContainerRef: ViewContainerRef\r\n  ) {\r\n    this.parent = parent;\r\n  }\r\n\r\n  ngOnInit() {\r\n    let parentFqn = this.parent.fqn;\r\n    let name = this.name || '$default';\r\n\r\n    this.uiViewData = {\r\n      $type: 'ng2',\r\n      id: id++,\r\n      name: name,\r\n      fqn: parentFqn ? parentFqn + \".\" + name : name,\r\n      creationContext: this.parent.context,\r\n      configUpdated: this.viewConfigUpdated.bind(this),\r\n      config: undefined\r\n    };\r\n\r\n    this.deregister = this.router.viewService.registerUIView(this.uiViewData);\r\n  }\r\n\r\n  disposeLast() {\r\n    if (this.componentRef) this.componentRef.destroy();\r\n    this.componentRef = null;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.deregister) this.deregister();\r\n    this.disposeLast();\r\n  }\r\n\r\n  /**\r\n   * The view service is informing us of an updated ViewConfig\r\n   * (usually because a transition activated some state and its views)\r\n   */\r\n  viewConfigUpdated(config: ViewConfig) {\r\n    // The config may be undefined if there is nothing currently targeting this UIView.\r\n    // Dispose the current component, if there is one\r\n    if (!config) return this.disposeLast();\r\n\r\n    // Only care about Ng2 configs\r\n    if (!(config instanceof Ng2ViewConfig)) return;\r\n\r\n    // The \"new\" viewconfig is already applied, so exit early\r\n    if (this.uiViewData.config === config) return;\r\n\r\n    // This is a new ViewConfig.  Dispose the previous component\r\n    this.disposeLast();\r\n    trace.traceUIViewConfigUpdated(this.uiViewData, config && config.viewDecl.$context);\r\n\r\n    this.applyUpdatedConfig(config);\r\n  }\r\n\r\n  applyUpdatedConfig(config: Ng2ViewConfig) {\r\n    this.uiViewData.config = config;\r\n    // Create the Injector for the routed component\r\n    let context = new ResolveContext(config.path);\r\n    let componentInjector = this.getComponentInjector(context);\r\n\r\n    // Get the component class from the view declaration. TODO: allow promises?\r\n    let componentClass = config.viewDecl.component;\r\n\r\n    // Create the component\r\n    let compFactoryResolver = componentInjector.get(ComponentFactoryResolver);\r\n    let compFactory = compFactoryResolver.resolveComponentFactory(componentClass);\r\n    this.componentRef = this.componentTarget.createComponent(compFactory, undefined, componentInjector);\r\n\r\n    // Wire resolves to @Input()s\r\n    this.applyInputBindings(this.componentRef, context, componentClass);\r\n\r\n    // TODO: wire uiCanExit and uiOnParamsChanged callbacks\r\n  }\r\n\r\n  /**\r\n   * Creates a new Injector for a routed component.\r\n   *\r\n   * Adds resolve values to the Injector\r\n   * Adds providers from the NgModule for the state\r\n   * Adds providers from the parent Component in the component tree\r\n   * Adds a PARENT_INJECT view context object\r\n   *\r\n   * @returns an Injector\r\n   */\r\n  getComponentInjector(context: ResolveContext): Injector {\r\n    // Map resolves to \"useValue: providers\"\r\n    let resolvables = context.getTokens().map(token => context.getResolvable(token)).filter(r => r.resolved);\r\n    let newProviders = resolvables.map(r => ({ provide: r.token, useValue: r.data }));\r\n\r\n    var parentInject = { context: this.uiViewData.config.viewDecl.$context, fqn: this.uiViewData.fqn };\r\n    newProviders.push({ provide: UIView.PARENT_INJECT, useValue: parentInject });\r\n\r\n    let parentComponentInjector = this.viewContainerRef.injector;\r\n    let moduleInjector = context.getResolvable(NATIVE_INJECTOR_TOKEN).data;\r\n    let mergedParentInjector = new MergeInjector(moduleInjector, parentComponentInjector);\r\n\r\n    return ReflectiveInjector.resolveAndCreate(newProviders, mergedParentInjector);\r\n  }\r\n\r\n  /**\r\n   * Supplies component inputs with resolve data\r\n   *\r\n   * Finds component inputs which match resolves (by name) and sets the input value\r\n   * to the resolve data.\r\n   */\r\n  applyInputBindings(ref: ComponentRef<any>, context: ResolveContext, componentClass) {\r\n    let bindings = this.uiViewData.config.viewDecl['bindings'] || {};\r\n\r\n    var addResolvable = (tuple: InputMapping) => ({\r\n      prop: tuple.prop,\r\n      resolvable: context.getResolvable(bindings[tuple.prop] || tuple.token)\r\n    });\r\n\r\n    // Supply resolve data to matching @Input('prop') or inputs: ['prop']\r\n    let inputTuples = ng2ComponentInputs(componentClass);\r\n    inputTuples.map(addResolvable)\r\n        .filter(tuple => tuple.resolvable && tuple.resolvable.resolved)\r\n        .forEach(tuple => { ref.instance[tuple.prop] = tuple.resolvable.data });\r\n\r\n    // Initiate change detection for the newly created component\r\n    ref.changeDetectorRef.detectChanges();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/directives/uiView.ts","/** @module ng2 */\r\n/**\r\n * @Kamshak It's imported like this in @angular/compiler as well.\r\n * Was going to mark it injectable as in\r\n * https://github.com/angular/angular/blob/42a287fabf6b035d51e00cf3006c27fec00f054a/modules/%40angular/compiler/src/ng_module_resolver.ts\r\n * but unfortunately not all platforms (namely browser-dynamic) provide it.\r\n */\r\n\r\nimport { __core_private__ as r} from '@angular/core';\r\nexport type ReflectorReader = typeof r._ReflectorReader;\r\nexport var reflector: typeof r.reflector = r.reflector;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/private_import_core.ts","/** @module ng2 */ /** */\r\nimport {State} from \"ui-router-core\";\r\nimport {PathNode} from \"ui-router-core\";\r\nimport {pick, forEach} from \"ui-router-core\";\r\nimport {ViewConfig} from \"ui-router-core\";\r\nimport {Ng2ViewDeclaration} from \"../interface\";\r\nimport {services} from \"ui-router-core\";\r\nimport {ViewService} from \"ui-router-core\";\r\n\r\n/**\r\n * This is a [[StateBuilder.builder]] function for angular2 `views`.\r\n *\r\n * When the [[StateBuilder]] builds a [[State]] object from a raw [[StateDeclaration]], this builder\r\n * handles the `views` property with logic specific to ui-router-ng2.\r\n *\r\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object and\r\n * applies the state-level configuration to a view named `$default`.\r\n */\r\nexport function ng2ViewsBuilder(state: State) {\r\n  let views: { [key: string]: Ng2ViewDeclaration } = {},\r\n      viewsObject = state.views || {\"$default\": pick(state, \"component\")};\r\n\r\n  forEach(viewsObject, function (config: Ng2ViewDeclaration, name: string) {\r\n    name = name || \"$default\"; // Account for views: { \"\": { template... } }\r\n    if (Object.keys(config).length == 0) return;\r\n\r\n    config.$type = \"ng2\";\r\n    config.$context = state;\r\n    config.$name = name;\r\n\r\n    let normalized = ViewService.normalizeUIViewTarget(config.$context, config.$name);\r\n    config.$uiViewName = normalized.uiViewName;\r\n    config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\r\n\r\n    views[name] = config;\r\n  });\r\n  return views;\r\n}\r\n\r\nlet id = 0;\r\nexport class Ng2ViewConfig implements ViewConfig {\r\n  $id: number = id++;\r\n  loaded: boolean = true;\r\n\r\n  constructor(public path: PathNode[], public viewDecl: Ng2ViewDeclaration) { }\r\n\r\n  load() {\r\n    return services.$q.when(this);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/statebuilders/views.ts","/** @module ng2 */ /** */\r\nimport {Injector} from \"@angular/core\";\r\n\r\n/**\r\n * Merge two injectors\r\n *\r\n * This class implements the Injector ng2 interface but delegates\r\n * to the Injectors provided in the constructor.\r\n */\r\nexport class MergeInjector implements Injector {\r\n  static NOT_FOUND = {};\r\n  private injectors: Injector[];\r\n  constructor(...injectors: Injector[]) {\r\n    if (injectors.length < 2) throw new Error(\"pass at least two injectors\");\r\n    this.injectors = injectors;\r\n  }\r\n\r\n  /**\r\n   * Get the token from the first injector which contains it.\r\n   *\r\n   * Delegates to the first Injector.get().\r\n   * If not found, then delegates to the second Injector (and so forth).\r\n   * If no Injector contains the token, return the `notFoundValue`, or throw.\r\n   *\r\n   * @param token the DI token\r\n   * @param notFoundValue the value to return if none of the Injectors contains the token.\r\n   * @returns {any} the DI value\r\n   */\r\n  get(token: any, notFoundValue?: any): any {\r\n    for (let i = 0; i < this.injectors.length; i++) {\r\n      let val = this.injectors[i].get(token, MergeInjector.NOT_FOUND);\r\n      if (val !== MergeInjector.NOT_FOUND) return val;\r\n    }\r\n\r\n    if (arguments.length >= 2) return notFoundValue;\r\n\r\n    // This will throw the DI Injector error\r\n    this.injectors[0].get(token);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/mergeInjector.ts","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar queue_1 = require('./scheduler/queue');\nvar observeOn_1 = require('./operator/observeOn');\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject = (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n        _super.call(this);\n        this.scheduler = scheduler;\n        this._events = [];\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var now = this._getNow();\n        this._events.push(new ReplayEvent(now, value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _events = this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));\n        }\n        var len = _events.length;\n        for (var i = 0; i < len && !subscriber.closed; i++) {\n            subscriber.next(_events[i].value);\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue_1.queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject_1.Subject));\nexports.ReplaySubject = ReplaySubject;\nvar ReplayEvent = (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/ReplaySubject.js\n// module id = 104\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subject.js\n// module id = 105\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/ObjectUnsubscribedError.js\n// module id = 106\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/SubjectSubscription.js\n// module id = 107\n// module chunks = 0 1","\"use strict\";\nvar QueueAction_1 = require('./QueueAction');\nvar QueueScheduler_1 = require('./QueueScheduler');\nexports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);\n//# sourceMappingURL=queue.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/queue.js\n// module id = 108\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncAction_1 = require('./AsyncAction');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = (function (_super) {\n    __extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, enqueue as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction_1.AsyncAction));\nexports.QueueAction = QueueAction;\n//# sourceMappingURL=QueueAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/QueueAction.js\n// module id = 109\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Action_1 = require('./Action');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.delay = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsyncAction.js\n// module id = 110\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/Action.js\n// module id = 111\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nvar QueueScheduler = (function (_super) {\n    __extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        _super.apply(this, arguments);\n    }\n    return QueueScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.QueueScheduler = QueueScheduler;\n//# sourceMappingURL=QueueScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/QueueScheduler.js\n// module id = 112\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = require('../Scheduler');\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsyncScheduler.js\n// module id = 113\n// module chunks = 0 1","\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Scheduler.js\n// module id = 114\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n * @see {@link Notification}\n *\n * @param scheduler\n * @param delay\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return this.lift(new ObserveOnOperator(scheduler, delay));\n}\nexports.observeOn = observeOn;\nvar ObserveOnOperator = (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexports.ObserveOnOperator = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = (function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_1.Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_1.Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\nvar ObserveOnMessage = (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexports.ObserveOnMessage = ObserveOnMessage;\n//# sourceMappingURL=observeOn.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/observeOn.js\n// module id = 115\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('./Observable');\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = (function () {\n    function Notification(kind, value, exception) {\n        this.kind = kind;\n        this.value = value;\n        this.exception = exception;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.exception);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.exception);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_1.Observable.of(this.value);\n            case 'E':\n                return Observable_1.Observable.throw(this.exception);\n            case 'C':\n                return Observable_1.Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return this.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` exception.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return this.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexports.Notification = Notification;\n//# sourceMappingURL=Notification.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Notification.js\n// module id = 116\n// module chunks = 0 1","/** @module ng2 */ /** */\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {ReplaySubject} from \"rxjs/ReplaySubject\";\r\nimport {Transition} from \"ui-router-core\";\r\nimport {UIRouter} from \"ui-router-core\";\r\nimport {StateDeclaration} from \"ui-router-core\";\r\n\r\nexport interface StatesChangedEvent {\r\n  currentStates: StateDeclaration[];\r\n  registered: StateDeclaration[];\r\n  deregistered: StateDeclaration[];\r\n}\r\n\r\ndeclare module 'ui-router-core/lib/globals' {\r\n  interface UIRouterGlobals {\r\n    states$?: Observable<StatesChangedEvent>;\r\n    start$?: Observable<Transition>;\r\n    success$?: Observable<Transition>;\r\n    params$?: Observable<{ [paramName: string]: any }>;\r\n  }\r\n}\r\n\r\n/** Augments UIRouterGlobals with observables for transition starts, successful transitions, and state parameters */\r\nexport class UIRouterRx {\r\n  private deregisterFns: Function[] = [];\r\n\r\n  constructor(router: UIRouter) {\r\n    let start$ = new ReplaySubject<Transition>(1);\r\n    let success$ = <Observable<Transition>> start$.mergeMap((t: Transition) => t.promise.then(() => t));\r\n    let params$ = success$.map((transition: Transition) => transition.params());\r\n\r\n    let states$ = new ReplaySubject<StatesChangedEvent>(1);\r\n    function onStatesChangedEvent(event: string, states: StateDeclaration[]) {\r\n      let changeEvent = {\r\n        currentStates: router.stateRegistry.get(),\r\n        registered: [],\r\n        deregistered: []\r\n      };\r\n\r\n      if (event) changeEvent[event] = states;\r\n      states$.next(changeEvent);\r\n    }\r\n\r\n    this.deregisterFns.push(router.transitionService.onStart({}, transition => start$.next(transition)));\r\n    this.deregisterFns.push(router.stateRegistry.onStatesChanged(onStatesChangedEvent));\r\n    onStatesChangedEvent(null, null);\r\n    Object.assign(router.globals, {start$, success$, params$, states$});\r\n  }\r\n\r\n  dispose() {\r\n    this.deregisterFns.forEach(deregisterFn => deregisterFn());\r\n    this.deregisterFns = [];\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/rx.ts","/** @ng2api @module directives */ /** */\r\nimport {Directive, Input, ElementRef, Host, Renderer} from \"@angular/core\";\r\nimport {UISrefStatus, SrefStatus} from \"./uiSrefStatus\";\r\nimport {Subscription} from \"rxjs/Subscription\";\r\n\r\n/**\r\n * A directive that adds a CSS class when its associated `uiSref` link is active.\r\n *\r\n * ### Purpose\r\n *\r\n * This directive should be paired with one (or more) [[UISref]] directives.\r\n * It will apply a CSS class to its element when the state the `uiSref` targets is activated.\r\n *\r\n * This can be used to create navigation UI where the active link is highlighted.\r\n *\r\n * ### Selectors\r\n *\r\n * - `[uiSrefActive]`: When this selector is used, the class is added when the target state or any\r\n * child of the target state is active\r\n * - `[uiSrefActiveEq]`: When this selector is used, the class is added when the target state is\r\n * exactly active (the class is not added if a child of the target state is active).\r\n *\r\n * ### Inputs\r\n *\r\n * - `uiSrefActive`/`uiSrefActiveEq`: one or more CSS classes to add to the element, when the `uiSref` is active\r\n *\r\n * #### Example:\r\n * The anchor tag has the `active` class added when the `foo` state is active.\r\n * ```html\r\n * <a uiSref=\"foo\" uiSrefActive=\"active\">Foo</a>\r\n * ```\r\n *\r\n * ### Matching parameters\r\n *\r\n * If the `uiSref` includes parameters, the current state must be active, *and* the parameter values must match.\r\n *\r\n * #### Example:\r\n * The first anchor tag has the `active` class added when the `foo.bar` state is active and the `id` parameter\r\n * equals 25.\r\n * The second anchor tag has the `active` class added when the `foo.bar` state is active and the `id` parameter\r\n * equals 32.\r\n * ```html\r\n * <a uiSref=\"foo.bar\" [uiParams]=\"{ id: 25 }\" uiSrefActive=\"active\">Bar #25</a>\r\n * <a uiSref=\"foo.bar\" [uiParams]=\"{ id: 32 }\" uiSrefActive=\"active\">Bar #32</a>\r\n * ```\r\n *\r\n * #### Example:\r\n * A list of anchor tags are created for a list of `bar` objects.\r\n * An anchor tag will have the `active` class when `foo.bar` state is active and the `id` parameter matches\r\n * that object's `id`.\r\n * ```html\r\n * <li *ngFor=\"let bar of bars\">\r\n *   <a uiSref=\"foo.bar\" [uiParams]=\"{ id: bar.id }\" uiSrefActive=\"active\">Bar #{{ bar.id }}</a>\r\n * </li>\r\n * ```\r\n *\r\n * ### Multiple uiSrefs\r\n *\r\n * A single `uiSrefActive` can be used for multiple `uiSref` links.\r\n * This can be used to create (for example) a drop down navigation menu, where the menui is highlighted\r\n * if *any* of its inner links are active.\r\n *\r\n * The `uiSrefActive` should be placed on an ancestor element of the `uiSref` list.\r\n * If anyof the `uiSref` links are activated, the class will be added to the ancestor element.\r\n *\r\n * #### Example:\r\n * This is a dropdown nagivation menu for \"Admin\" states.\r\n * When any of `admin.users`, `admin.groups`, `admin.settings` are active, the `<li>` for the dropdown\r\n * has the `dropdown-child-active` class applied.\r\n * Additionally, the active anchor tag has the `active` class applied.\r\n * ```html\r\n * <ul class=\"dropdown-menu\">\r\n *   <li uiSrefActive=\"dropdown-child-active\" class=\"dropdown admin\">\r\n *     Admin\r\n *     <ul>\r\n *       <li><a uiSref=\"admin.users\" uiSrefActive=\"active\">Users</a></li>\r\n *       <li><a uiSref=\"admin.groups\" uiSrefActive=\"active\">Groups</a></li>\r\n *       <li><a uiSref=\"admin.settings\" uiSrefActive=\"active\">Settings</a></li>\r\n *     </ul>\r\n *   </li>\r\n * </ul>\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[uiSrefActive],[uiSrefActiveEq]'\r\n})\r\nexport class UISrefActive {\r\n\r\n  private _classes: string[] = [];\r\n  @Input('uiSrefActive') set active(val: string) { this._classes = val.split(\"\\s+\")};\r\n\r\n  private _classesEq: string[] = [];\r\n  @Input('uiSrefActiveEq') set activeEq(val: string) { this._classesEq = val.split(\"\\s+\")};\r\n\r\n  private _subscription: Subscription;\r\n  constructor(uiSrefStatus: UISrefStatus, rnd: Renderer, @Host() host: ElementRef) {\r\n    this._subscription = uiSrefStatus.uiSrefStatus.subscribe((next: SrefStatus) => {\r\n      this._classes.forEach(cls => rnd.setElementClass(host.nativeElement, cls, next.active));\r\n      this._classesEq.forEach(cls => rnd.setElementClass(host.nativeElement, cls, next.exact));\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._subscription.unsubscribe();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/directives/uiSrefActive.ts","/** @ng2api @module directives */ /** */\r\nimport {Directive, Output, EventEmitter, ContentChildren, QueryList, Inject} from \"@angular/core\";\r\nimport {UISref} from \"./uiSref\";\r\nimport {PathNode} from \"ui-router-core\";\r\nimport {Transition} from \"ui-router-core\";\r\nimport {TargetState} from \"ui-router-core\";\r\nimport {State} from \"ui-router-core\";\r\nimport {anyTrueR, tail, unnestR, Predicate} from \"ui-router-core\";\r\nimport {Globals, UIRouterGlobals} from \"ui-router-core\";\r\nimport {Param} from \"ui-router-core\";\r\nimport {PathFactory} from \"ui-router-core\";\r\nimport {Subscription} from \"rxjs/Subscription\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {BehaviorSubject} from \"rxjs/BehaviorSubject\";\r\n\r\n/** @internalapi */\r\ninterface TransEvt { evt: string, trans: Transition }\r\n\r\n/**\r\n * UISref status emitted from [[UISrefStatus]]\r\n */\r\nexport interface SrefStatus {\r\n  /** The sref's target state (or one of its children) is currently active */\r\n  active: boolean;\r\n  /** The sref's target state is currently active */\r\n  exact: boolean;\r\n  /** A transition is entering the sref's target state */\r\n  entering: boolean;\r\n  /** A transition is exiting the sref's target state */\r\n  exiting: boolean;\r\n}\r\n\r\n/** @internalapi */\r\nconst inactiveStatus: SrefStatus = {\r\n  active: false,\r\n  exact: false,\r\n  entering: false,\r\n  exiting: false\r\n};\r\n\r\n/**\r\n * Returns a Predicate<PathNode[]>\r\n *\r\n * The predicate returns true when the target state (and param values)\r\n * match the (tail of) the path, and the path's param values\r\n *\r\n * @internalapi\r\n */\r\nconst pathMatches = (target: TargetState): Predicate<PathNode[]> => {\r\n  if (!target.exists()) return () => false;\r\n  let state: State = target.$state();\r\n  let targetParamVals = target.params();\r\n  let targetPath: PathNode[] = PathFactory.buildPath(target);\r\n  let paramSchema: Param[] = targetPath.map(node => node.paramSchema)\r\n      .reduce(unnestR, [])\r\n      .filter((param: Param) => targetParamVals.hasOwnProperty(param.id));\r\n\r\n  return (path: PathNode[]) => {\r\n    let tailNode = tail(path);\r\n    if (!tailNode || tailNode.state !== state) return false;\r\n    var paramValues = PathFactory.paramValues(path);\r\n    return Param.equals(paramSchema, paramValues, targetParamVals);\r\n  };\r\n};\r\n\r\n/**\r\n * Given basePath: [a, b], appendPath: [c, d]),\r\n * Expands the path to [c], [c, d]\r\n * Then appends each to [a,b,] and returns: [a, b, c], [a, b, c, d]\r\n *\r\n * @internalapi\r\n */\r\nfunction spreadToSubPaths(basePath: PathNode[], appendPath: PathNode[]): PathNode[][] {\r\n  return appendPath.map(node => basePath.concat(PathFactory.subPath(appendPath, n => n.state === node.state)));\r\n}\r\n\r\n/**\r\n * Given a TransEvt (Transition event: started, success, error)\r\n * and a UISref Target State, return a SrefStatus object\r\n * which represents the current status of that Sref:\r\n * active, activeEq (exact match), entering, exiting\r\n *\r\n * @internalapi\r\n */\r\nfunction getSrefStatus(event: TransEvt, srefTarget: TargetState): SrefStatus {\r\n  const pathMatchesTarget = pathMatches(srefTarget);\r\n  const tc = event.trans.treeChanges();\r\n\r\n  let isStartEvent = event.evt === 'start';\r\n  let isSuccessEvent = event.evt === 'success';\r\n  let activePath: PathNode[] = isSuccessEvent ? tc.to : tc.from;\r\n\r\n  const isActive = () =>\r\n      spreadToSubPaths([], activePath)\r\n          .map(pathMatchesTarget)\r\n          .reduce(anyTrueR, false);\r\n\r\n  const isExact = () =>\r\n      pathMatchesTarget(activePath);\r\n\r\n  const isEntering = () =>\r\n      spreadToSubPaths(tc.retained, tc.entering)\r\n          .map(pathMatchesTarget)\r\n          .reduce(anyTrueR, false);\r\n\r\n  const isExiting = () =>\r\n      spreadToSubPaths(tc.retained, tc.exiting)\r\n          .map(pathMatchesTarget)\r\n          .reduce(anyTrueR, false);\r\n\r\n  return {\r\n    active: isActive(),\r\n    exact: isExact(),\r\n    entering: isStartEvent ? isEntering() : false,\r\n    exiting: isStartEvent ? isExiting() : false,\r\n  } as SrefStatus;\r\n}\r\n\r\n/** @internalapi */\r\nfunction mergeSrefStatus(left: SrefStatus, right: SrefStatus) {\r\n  return {\r\n    active:   left.active   || right.active,\r\n    exact:    left.exact    || right.exact,\r\n    entering: left.entering || right.entering,\r\n    exiting:  left.exiting  || right.exiting,\r\n  };\r\n}\r\n\r\n/**\r\n * A directive which emits events when a paired [[UISref]] status changes.\r\n *\r\n * This directive is primarily used by the [[UISrefActive]] directives to monitor `UISref`(s).\r\n *\r\n * This directive shares two attribute selectors with `UISrefActive`:\r\n *\r\n * - `[uiSrefActive]`\r\n * - `[uiSrefActiveEq]`.\r\n *\r\n * Thus, whenever a `UISrefActive` directive is created, a `UISrefStatus` directive is also created.\r\n *\r\n * Most apps should simply use `UISrefActive`, but some advanced components may want to process the\r\n * [[SrefStatus]] events directly.\r\n *\r\n * ```js\r\n * <li (uiSrefStatus)=\"onSrefStatusChanged($event)\">\r\n *   <a uiSref=\"book\" [uiParams]=\"{ bookId: book.id }\">Book {{ book.name }}</a>\r\n * </li>\r\n * ```\r\n *\r\n * The `uiSrefStatus` event is emitted whenever an enclosed `uiSref`'s status changes.\r\n * The event emitted is of type [[SrefStatus]], and has boolean values for `active`, `exact`, `entering`, and `exiting`.\r\n *\r\n * The values from this event can be captured and stored on a component (then applied, e.g., using ngClass).\r\n *\r\n * ---\r\n *\r\n * A single `uiSrefStatus` can enclose multiple `uiSref`.\r\n * Each status boolean (`active`, `exact`, `entering`, `exiting`) will be true if *any of the enclosed `uiSref` status is true*.\r\n * In other words, all enclosed `uiSref` statuses  are merged to a single status using `||` (logical or).\r\n *\r\n * ```js\r\n * <li (uiSrefStatus)=\"onSrefStatus($event)\" uiSref=\"admin\">\r\n *   Home\r\n *   <ul>\r\n *     <li> <a uiSref=\"admin.users\">Users</a> </li>\r\n *     <li> <a uiSref=\"admin.groups\">Groups</a> </li>\r\n *   </ul>\r\n * </li>\r\n * ```\r\n *\r\n * In the above example, `$event.active === true` when either `admin.users` or `admin.groups` is active.\r\n *\r\n * ---\r\n *\r\n * This API is subject to change.\r\n */\r\n@Directive({ selector: '[uiSrefStatus],[uiSrefActive],[uiSrefActiveEq]' })\r\nexport class UISrefStatus {\r\n  /** current statuses of the state/params the uiSref directive is linking to */\r\n  @Output(\"uiSrefStatus\") uiSrefStatus = new EventEmitter<SrefStatus>(false);\r\n  /** Monitor all child components for UISref(s) */\r\n  @ContentChildren(UISref, {descendants: true}) srefs: QueryList<UISref>;\r\n\r\n  /** The current status */\r\n  status: SrefStatus;\r\n\r\n  private _subscription: Subscription;\r\n  private _srefChangesSub: Subscription;\r\n  private _srefs$: BehaviorSubject<UISref[]>;\r\n\r\n  constructor(@Inject(Globals) private _globals: UIRouterGlobals) {\r\n    this.status = Object.assign({}, inactiveStatus);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // Map each transition start event to a stream of:\r\n    // start -> (success|error)\r\n    let transEvents$: Observable<TransEvt> = this._globals.start$.switchMap((trans: Transition) => {\r\n      const event = (evt: string) => ({evt, trans} as TransEvt);\r\n\r\n      let transStart$ = Observable.of(event(\"start\"));\r\n      let transResult = trans.promise.then(() => event(\"success\"), () => event(\"error\"));\r\n      let transFinish$ = Observable.fromPromise(transResult);\r\n\r\n      return transStart$.concat(transFinish$);\r\n    });\r\n\r\n    // Watch the @ContentChildren UISref[] components and get their target states\r\n\r\n    // let srefs$: Observable<UISref[]> = Observable.of(this.srefs.toArray()).concat(this.srefs.changes);\r\n    this._srefs$ = new BehaviorSubject(this.srefs.toArray());\r\n    this._srefChangesSub = this.srefs.changes.subscribe(srefs => this._srefs$.next(srefs));\r\n\r\n    let targetStates$: Observable<TargetState[]> =\r\n        this._srefs$.switchMap((srefs: UISref[]) =>\r\n            Observable.combineLatest<TargetState[]>(srefs.map(sref => sref.targetState$)));\r\n\r\n    // Calculate the status of each UISref based on the transition event.\r\n    // Reduce the statuses (if multiple) by or-ing each flag.\r\n    this._subscription = transEvents$.mergeMap((evt: TransEvt) => {\r\n      return targetStates$.map((targets: TargetState[]) => {\r\n        let statuses: SrefStatus[] = targets.map(target => getSrefStatus(evt, target));\r\n        return statuses.reduce(mergeSrefStatus)\r\n      })\r\n    }).subscribe(this._setStatus.bind(this));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._subscription) this._subscription.unsubscribe();\r\n    if (this._srefChangesSub) this._srefChangesSub.unsubscribe();\r\n    if (this._srefs$) this._srefs$.unsubscribe();\r\n    this._subscription = this._srefChangesSub = this._srefs$ = undefined;\r\n  }\r\n\r\n  private _setStatus(status: SrefStatus) {\r\n    this.status = status;\r\n    this.uiSrefStatus.emit(status);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/directives/uiSrefStatus.ts","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/BehaviorSubject.js\n// module id = 120\n// module chunks = 0 1","/**\r\n * # UI-Router for Angular 2\r\n *\r\n * - [ui-router-ng2 home page](https://ui-router.github.io/ng2)\r\n * - [tutorials](https://ui-router.github.io/tutorial/ng2/helloworld)\r\n * - [quick start repository](http://github.com/ui-router/quickstart-ng2)\r\n *\r\n * Getting started:\r\n *\r\n * - Use npm. Add a dependency on latest `ui-router-ng2`\r\n * - Import UI-Router classes directly from `\"ui-router-ng2\"`\r\n *\r\n * ```js\r\n * import {StateRegistry} from \"ui-router-ng2\";\r\n * ```\r\n *\r\n * - Create application states (as defined by [[Ng2StateDeclaration]]).\r\n *\r\n * ```js\r\n * export let state1: Ng2StateDeclaration = {\r\n *   name: 'state1',\r\n *   component: State1Component,\r\n *   url: '/one'\r\n * }\r\n *\r\n * export let state2: Ng2StateDeclaration = {\r\n *   name: 'state2',\r\n *   component: State2Component,\r\n *   url: '/two'\r\n * }\r\n * ```\r\n *\r\n * - Import a [[UIRouterModule.forChild]] module into your feature `NgModule`s.\r\n *\r\n * ```js\r\n * @ NgModule({\r\n *   imports: [\r\n *     SharedModule,\r\n *     UIRouterModule.forChild({ states: [state1, state2 ] })\r\n *   ],\r\n *   declarations: [\r\n *     State1Component,\r\n *     State2Component,\r\n *   ]\r\n * })\r\n * export class MyFeatureModule {}\r\n * ```\r\n *\r\n * - Import a [[UIRouterModule.forRoot]] module into your application root `NgModule`\r\n * - Either bootstrap a [[UIView]] component, or add a `<ui-view></ui-view>` viewport to your root component.\r\n *\r\n * ```js\r\n * @ NgModule({\r\n *   imports: [\r\n *     BrowserModule,\r\n *     UIRouterModule.forRoot({ states: [ homeState ] }),\r\n *     MyFeatureModule,\r\n *   ],\r\n *   declarations: [\r\n *     HomeComponent\r\n *   ]\r\n *   bootstrap: [ UIView ]\r\n * })\r\n * class RootAppModule {}\r\n *\r\n * browserPlatformDynamic.bootstrapModule(RootAppModule);\r\n * ```\r\n *\r\n * - Optionally specify a configuration class [[ChildModule.configClass]] for any module\r\n * to perform any router configuration during bootstrap or lazyload.\r\n * Pass the class to [[UIRouterModule.forRoot]] or [[UIRouterModule.forChild]].\r\n *\r\n * ```js\r\n * import {UIRouter} from \"ui-router-ng2\";\r\n *\r\n * @ Injectable()\r\n * export class MyUIRouterConfig {\r\n *   // Constructor is injectable\r\n *   constructor(uiRouter: UIRouter) {\r\n *     uiRouter.urlMatcherFactory.type('datetime', myDateTimeParamType);\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * @preferred @module ng2\r\n */ /** */\r\nimport {Injector, Provider} from \"@angular/core\";\r\nimport {UIRouter} from \"ui-router-core\";\r\nimport {PathNode} from \"ui-router-core\";\r\nimport {StateRegistry} from \"ui-router-core\";\r\nimport {StateService} from \"ui-router-core\";\r\nimport {TransitionService} from \"ui-router-core\";\r\nimport {UrlMatcherFactory} from \"ui-router-core\";\r\nimport {UrlRouter} from \"ui-router-core\";\r\nimport {ViewService} from \"ui-router-core\";\r\nimport {UIView, ParentUIViewInject} from \"./directives/uiView\";\r\nimport {ng2ViewsBuilder, Ng2ViewConfig} from \"./statebuilders/views\";\r\nimport {Ng2ViewDeclaration} from \"./interface\";\r\nimport {applyRootModuleConfig, applyModuleConfig} from \"./uiRouterConfig\";\r\nimport {Globals} from \"ui-router-core\";\r\nimport {UIRouterLocation} from \"./location\";\r\nimport {services} from \"ui-router-core\";\r\nimport {Resolvable} from \"ui-router-core\";\r\nimport {RootModule, StatesModule, UIROUTER_ROOT_MODULE, UIROUTER_MODULE_TOKEN} from \"./uiRouterNgModule\";\r\nimport {UIRouterRx} from \"./rx\";\r\nimport {NATIVE_INJECTOR_TOKEN} from \"ui-router-core\";\r\n\r\n/**\r\n * This is a factory function for a UIRouter instance\r\n *\r\n * Creates a UIRouter instance and configures it for Angular 2, then invokes router bootstrap.\r\n * This function is used as an Angular 2 `useFactory` Provider.\r\n */\r\nexport function uiRouterFactory(location: UIRouterLocation, injector: Injector) {\r\n\r\n  let rootModules: RootModule[] = injector.get(UIROUTER_ROOT_MODULE);\r\n  let modules: StatesModule[] = injector.get(UIROUTER_MODULE_TOKEN);\r\n\r\n  if (rootModules.length !== 1) {\r\n    throw new Error(\"Exactly one UIRouterModule.forRoot() should be in the bootstrapped app module's imports: []\");\r\n  }\r\n\r\n  // ----------------- Monkey Patches ----------------\r\n  // Monkey patch the services.$injector to the ng2 Injector\r\n  services.$injector.get = injector.get.bind(injector);\r\n\r\n  // Monkey patch the services.$location with ng2 Location implementation\r\n  location.init();\r\n\r\n\r\n  // ----------------- Create router -----------------\r\n  // Create a new ng2 UIRouter and configure it for ng2\r\n  let router = new UIRouter();\r\n  new UIRouterRx(router);\r\n  let registry = router.stateRegistry;\r\n\r\n  // ----------------- Configure for ng2 -------------\r\n  // Apply ng2 ui-view handling code\r\n  router.viewService.viewConfigFactory(\"ng2\", (path: PathNode[], config: Ng2ViewDeclaration) => new Ng2ViewConfig(path, config));\r\n  registry.decorator('views', ng2ViewsBuilder);\r\n\r\n  // Apply statebuilder decorator for ng2 NgModule registration\r\n  registry.stateQueue.flush(router.stateService);\r\n\r\n  // Prep the tree of NgModule by placing the root NgModule's Injector on the root state.\r\n  let ng2InjectorResolvable = Resolvable.fromData(NATIVE_INJECTOR_TOKEN, injector);\r\n  registry.root().resolvables.push(ng2InjectorResolvable);\r\n\r\n\r\n  // ----------------- Initialize router -------------\r\n  // Allow states to be registered\r\n  registry.stateQueue.autoFlush(router.stateService);\r\n\r\n  setTimeout(() => {\r\n    rootModules.forEach(moduleConfig => applyRootModuleConfig(router, injector, moduleConfig));\r\n    modules.forEach(moduleConfig => applyModuleConfig(router, injector, moduleConfig));\r\n\r\n    // Start monitoring the URL\r\n    if (!router.urlRouterProvider.interceptDeferred) {\r\n      router.urlRouter.listen();\r\n      router.urlRouter.sync();\r\n    }\r\n  });\r\n\r\n  return router;\r\n};\r\n\r\nexport function parentUIViewInjectFactory(r: StateRegistry) { return { fqn: null, context: r.root() } as ParentUIViewInject; }\r\n\r\nexport const _UIROUTER_INSTANCE_PROVIDERS: Provider[] =  [\r\n  { provide: UIRouter, useFactory: uiRouterFactory, deps: [UIRouterLocation, Injector] },\r\n  { provide: UIRouterLocation, useClass: UIRouterLocation },\r\n  { provide: UIView.PARENT_INJECT, useFactory: parentUIViewInjectFactory, deps: [StateRegistry]},\r\n];\r\n\r\nexport function fnStateService(r: UIRouter) { return r.stateService; }\r\nexport function fnTransitionService(r: UIRouter) { return r.transitionService; }\r\nexport function fnUrlMatcherFactory(r: UIRouter) { return r.urlMatcherFactory; }\r\nexport function fnUrlRouter(r: UIRouter) { return r.urlRouter; }\r\nexport function fnViewService(r: UIRouter) { return r.viewService; }\r\nexport function fnStateRegistry(r: UIRouter) { return r.stateRegistry; }\r\nexport function fnGlobals(r: any) { return r.globals; }\r\n\r\nexport const _UIROUTER_SERVICE_PROVIDERS: Provider[] = [\r\n  { provide: StateService,      useFactory: fnStateService, deps: [UIRouter]},\r\n  { provide: TransitionService, useFactory: fnTransitionService, deps: [UIRouter]},\r\n  { provide: UrlMatcherFactory, useFactory: fnUrlMatcherFactory, deps: [UIRouter]},\r\n  { provide: UrlRouter,         useFactory: fnUrlRouter, deps: [UIRouter]},\r\n  { provide: ViewService,       useFactory: fnViewService, deps: [UIRouter]},\r\n  { provide: StateRegistry,     useFactory: fnStateRegistry, deps: [UIRouter]},\r\n  { provide: Globals,           useFactory: fnGlobals, deps: [UIRouter]},\r\n];\r\n\r\n/**\r\n * The UI-Router providers, for use in your application bootstrap\r\n *\r\n * @deprecated use [[UIRouterModule.forRoot]]\r\n */\r\nexport const UIROUTER_PROVIDERS: Provider[] = _UIROUTER_INSTANCE_PROVIDERS.concat(_UIROUTER_SERVICE_PROVIDERS);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/providers.ts","/** @module ng2 */ /** */\r\nimport {UIRouter} from \"ui-router-core\";\r\nimport {StatesModule, RootModule} from \"./uiRouterNgModule\";\r\nimport {Injector} from \"@angular/core\";\r\nimport {isDefined} from \"ui-router-core\";\r\n\r\nexport function applyModuleConfig(uiRouter: UIRouter, injector: Injector, options: StatesModule) {\r\n  if (options.configClass) {\r\n    injector.get(options.configClass);\r\n  }\r\n\r\n  let states = options.states || [];\r\n  states.forEach(state => uiRouter.stateRegistry.register(state));\r\n}\r\n\r\nexport function applyRootModuleConfig(uiRouter: UIRouter, injector: Injector, config: RootModule) {\r\n  if (isDefined(config.deferIntercept)) {\r\n    uiRouter.urlRouterProvider.deferIntercept(config.deferIntercept);\r\n  }\r\n\r\n  if (isDefined(config.otherwise)) {\r\n    if (isDefined(config.otherwise['state'])) {\r\n      uiRouter.urlRouterProvider.otherwise(function() {\r\n        let { state, params } = <any> config.otherwise;\r\n        uiRouter.stateService.go(state, params, { source: \"otherwise\" });\r\n        return null;\r\n      });\r\n    } else {\r\n      uiRouter.urlRouterProvider.otherwise(<any> config.otherwise);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/uiRouterConfig.ts","/** @module ng2 */ /** */\r\nimport {HashLocationStrategy, PlatformLocation, LocationStrategy, LocationChangeListener} from \"@angular/common\";\r\nimport {Injectable} from \"@angular/core\";\r\n\r\nimport {services} from \"ui-router-core\";\r\nimport {isDefined} from \"ui-router-core\";\r\nimport {applyPairs} from \"ui-router-core\";\r\nimport {beforeAfterSubstr} from \"ui-router-core\";\r\n\r\nconst splitOnHash = beforeAfterSubstr(\"#\");\r\nconst splitOnEquals = beforeAfterSubstr(\"=\");\r\nconst splitOnQuestionMark = beforeAfterSubstr(\"?\");\r\n\r\n@Injectable()\r\nexport class UIRouterLocation {\r\n  isHashBang: boolean;\r\n  hashPrefix: string = \"\";\r\n\r\n  constructor(\r\n      public locationStrategy: LocationStrategy,\r\n      public platformLocation: PlatformLocation\r\n  ) {\r\n    this.isHashBang = locationStrategy instanceof HashLocationStrategy;\r\n  }\r\n\r\n  init() {\r\n    let loc = services.location;\r\n    let locSt = this.locationStrategy;\r\n\r\n    if (this.isHashBang) {\r\n      loc.path = () =>\r\n          splitOnHash(splitOnQuestionMark(locSt.path())[0])[0];\r\n      loc.hash = () =>\r\n          splitOnHash(splitOnHash(this.platformLocation.hash)[1])[1];\r\n    } else {\r\n      let basepath = locSt.getBaseHref();\r\n      let basepathRegExp = new RegExp(\"^\" + basepath);\r\n      let replace = (basepath[basepath.length - 1] === '/') ? \"/\" : \"\";\r\n      loc.path = () =>\r\n          splitOnHash(splitOnQuestionMark(locSt.path())[0])[0].replace(basepathRegExp, replace);\r\n      loc.hash = () =>\r\n          splitOnHash(this.platformLocation.hash)[1];\r\n    }\r\n\r\n\r\n    loc.search = <any> (() => {\r\n      let queryString = splitOnHash(splitOnQuestionMark(locSt.path())[1])[0];\r\n      return queryString.split(\"&\").map(kv => splitOnEquals(kv)).reduce(applyPairs, {});\r\n    });\r\n\r\n    loc.setUrl = (url: string, replace: boolean = false) => {\r\n      if(isDefined(url)) {\r\n        let split = splitOnQuestionMark(url);\r\n        if (replace) {\r\n          locSt.replaceState(null, null, split[0], split[1]);\r\n        } else {\r\n          locSt.pushState(null, null, split[0], split[1]);\r\n        }\r\n      }\r\n    };\r\n\r\n    loc.onChange = (cb: LocationChangeListener) => locSt.onPopState(cb) as any;\r\n\r\n    let locCfg = <any> services.locationConfig;\r\n\r\n    locCfg.port = () => null as number;\r\n    locCfg.protocol = () => null as string;\r\n    locCfg.host = () => null as string;\r\n    locCfg.baseHref = () => locSt.getBaseHref();\r\n    locCfg.html5Mode = () => !this.isHashBang;\r\n    locCfg.hashPrefix = (newprefix: string): string => {\r\n      if(isDefined(newprefix)) {\r\n        this.hashPrefix = newprefix;\r\n      }\r\n      return this.hashPrefix;\r\n    };\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2/location.ts"],"sourceRoot":""}